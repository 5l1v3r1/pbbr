/*****************************************************************************

 @(#) src/snmp/ieee8021tpmrmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021TPMRMIB_H__
#define __LOCAL_IEEE8021TPMRMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021TpmrMib_data {
	struct ieee8021TpmrMib_data *ieee8021TpmrMib_old;
	uint ieee8021TpmrMib_rsvs;
	uint ieee8021TpmrMib_tsts;
	uint ieee8021TpmrMib_sets;
	uint ieee8021TpmrMib_request;
};
struct ieee8021TpmrPortTable_data {
	struct ieee8021TpmrPortTable_data *ieee8021TpmrPortTable_old;
	uint ieee8021TpmrPortTable_rsvs;
	uint ieee8021TpmrPortTable_tsts;
	uint ieee8021TpmrPortTable_sets;
	uint ieee8021TpmrPortTable_request;
	uint ieee8021TpmrPortTable_refs;
	uint ieee8021TpmrPortTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021TpmrPortNumber;	/* NoAccess */
	long ieee8021TpmrPortMgmtAddr;	/* ReadOnly */
	long ieee8021TpmrPortMgmtAddrForwarding;	/* ReadOnly */
};
struct ieee8021TpmrPortStatsTable_data {
	struct ieee8021TpmrPortStatsTable_data *ieee8021TpmrPortStatsTable_old;
	uint ieee8021TpmrPortStatsTable_rsvs;
	uint ieee8021TpmrPortStatsTable_tsts;
	uint ieee8021TpmrPortStatsTable_sets;
	uint ieee8021TpmrPortStatsTable_request;
	uint ieee8021TpmrPortStatsTable_refs;
	uint ieee8021TpmrPortStatsTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021TpmrPortNumber;	/* NoAccess */
	struct counter64 ieee8021TpmrPortStatsRxFrames;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsRxOctets;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsFramesForwarded;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsFramesDiscarded;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsFramesDiscardedQueueFull;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsFramesDiscardedLifetime;	/* ReadOnly */
	struct counter64 ieee8021TpmrPortStatsFramesDiscardedError;	/* ReadOnly */
};
struct ieee8021TpmrPortDiscardDetailsTable_data {
	struct ieee8021TpmrPortDiscardDetailsTable_data *ieee8021TpmrPortDiscardDetailsTable_old;
	uint ieee8021TpmrPortDiscardDetailsTable_rsvs;
	uint ieee8021TpmrPortDiscardDetailsTable_tsts;
	uint ieee8021TpmrPortDiscardDetailsTable_sets;
	uint ieee8021TpmrPortDiscardDetailsTable_request;
	uint ieee8021TpmrPortDiscardDetailsTable_refs;
	uint ieee8021TpmrPortDiscardDetailsTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021TpmrPortNumber;	/* NoAccess */
	ulong ieee8021TpmrPortDiscardDetailsIndex;	/* NoAccess */
	uint8_t *ieee8021TpmrPortDiscardDetailsSource;	/* ReadOnly */
	size_t ieee8021TpmrPortDiscardDetailsSourceLen;
	long ieee8021TpmrPortDiscardDetailsReason;	/* ReadOnly */
};
struct ieee8021TpmrMspTable_data {
	struct ieee8021TpmrMspTable_data *ieee8021TpmrMspTable_old;
	uint ieee8021TpmrMspTable_rsvs;
	uint ieee8021TpmrMspTable_tsts;
	uint ieee8021TpmrMspTable_sets;
	uint ieee8021TpmrMspTable_request;
	uint ieee8021TpmrMspTable_refs;
	uint ieee8021TpmrMspTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021TpmrPortNumber;	/* NoAccess */
	long ieee8021TpmrMspLinkNotify;	/* ReadWrite */
	long ieee8021TpmrMspLinkNotifyWait;	/* ReadWrite */
	long ieee8021TpmrMspLinkNotifyRetry;	/* ReadWrite */
	long ieee8021TpmrMspMacNotify;	/* ReadWrite */
	long ieee8021TpmrMspMacNotifyTime;	/* ReadWrite */
	long ieee8021TpmrMspMacRecoverTime;	/* ReadWrite */
	long ieee8021TpmrMspStorageType;	/* ReadWrite */
};
struct ieee8021TpmrMspStatsTable_data {
	struct ieee8021TpmrMspStatsTable_data *ieee8021TpmrMspStatsTable_old;
	uint ieee8021TpmrMspStatsTable_rsvs;
	uint ieee8021TpmrMspStatsTable_tsts;
	uint ieee8021TpmrMspStatsTable_sets;
	uint ieee8021TpmrMspStatsTable_request;
	uint ieee8021TpmrMspStatsTable_refs;
	uint ieee8021TpmrMspStatsTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021TpmrPortNumber;	/* NoAccess */
	long ieee8021TpmrMspStatsTxAcks;	/* ReadOnly */
	long ieee8021TpmrMspStatsTxAddNotifications;	/* ReadOnly */
	long ieee8021TpmrMspStatsTxAddConfirmations;	/* ReadOnly */
	long ieee8021TpmrMspStatsTxLossNotifications;	/* ReadOnly */
	long ieee8021TpmrMspStatsTxLossConfirmations;	/* ReadOnly */
	long ieee8021TpmrMspStatsRxAcks;	/* ReadOnly */
	long ieee8021TpmrMspStatsRxAddNotifications;	/* ReadOnly */
	long ieee8021TpmrMspStatsRxAddConfirmations;	/* ReadOnly */
	long ieee8021TpmrMspStatsRxLossNotifications;	/* ReadOnly */
	long ieee8021TpmrMspStatsRxLossConfirmations;	/* ReadOnly */
	long ieee8021TpmrMspStatsAddEvents;	/* ReadOnly */
	long ieee8021TpmrMspStatsLossEvents;	/* ReadOnly */
	long ieee8021TpmrMspStatsMacStatusNotifications;	/* ReadOnly */
};

/* storage declarations */
extern struct ieee8021TpmrMib_data *ieee8021TpmrMibStorage;
extern struct header_complex_index *ieee8021TpmrPortTableStorage;
extern struct header_complex_index *ieee8021TpmrPortStatsTableStorage;
extern struct header_complex_index *ieee8021TpmrPortDiscardDetailsTableStorage;
extern struct header_complex_index *ieee8021TpmrMspTableStorage;
extern struct header_complex_index *ieee8021TpmrMspStatsTableStorage;

/* enum definitions from the covered mib sections */

#define IEEE8021TPMRPORTMGMTADDR_TRUE            1
#define IEEE8021TPMRPORTMGMTADDR_FALSE           2

#define IEEE8021TPMRPORTMGMTADDRFORWARDING_TRUE  1
#define IEEE8021TPMRPORTMGMTADDRFORWARDING_FALSE 2

#define IEEE8021TPMRPORTDISCARDDETAILSREASON_TXSDUSIZEEXCEEDED 1

#define IEEE8021TPMRMSPLINKNOTIFY_TRUE           1
#define IEEE8021TPMRMSPLINKNOTIFY_FALSE          2

#define IEEE8021TPMRMSPMACNOTIFY_TRUE            1
#define IEEE8021TPMRMSPMACNOTIFY_FALSE           2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021TpmrCompliance_oid[11];
extern oid ieee8021TpmrPortGroup_oid[11];
extern oid ieee8021TpmrPortStatsGroup_oid[11];
extern oid ieee8021TpmrPortDiscardDetailsGroup_oid[11];
extern oid ieee8021TpmrMspGroup_oid[11];
extern oid ieee8021TpmrMspStatsGroup_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ieee8021TpmrMib(void);
void deinit_ieee8021TpmrMib(void);
int term_ieee8021TpmrMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021TpmrMib;
struct ieee8021TpmrMib_data *ieee8021TpmrMib_create(void);
struct ieee8021TpmrMib_data *ieee8021TpmrMib_duplicate(struct ieee8021TpmrMib_data *);
int ieee8021TpmrMib_destroy(struct ieee8021TpmrMib_data **);
int ieee8021TpmrMib_add(struct ieee8021TpmrMib_data *);
void parse_ieee8021TpmrMib(const char *, char *);
SNMPCallback store_ieee8021TpmrMib;
void refresh_ieee8021TpmrMib(int);
FindVarMethod var_ieee8021TpmrPortTable;
struct ieee8021TpmrPortTable_data *ieee8021TpmrPortTable_create(void);
struct ieee8021TpmrPortTable_data *ieee8021TpmrPortTable_duplicate(struct ieee8021TpmrPortTable_data *);
int ieee8021TpmrPortTable_destroy(struct ieee8021TpmrPortTable_data **);
int ieee8021TpmrPortTable_add(struct ieee8021TpmrPortTable_data *);
int ieee8021TpmrPortTable_del(struct ieee8021TpmrPortTable_data *);
void parse_ieee8021TpmrPortTable(const char *, char *);
SNMPCallback store_ieee8021TpmrPortTable;
void refresh_ieee8021TpmrPortTable(int);
FindVarMethod var_ieee8021TpmrPortStatsTable;
struct ieee8021TpmrPortStatsTable_data *ieee8021TpmrPortStatsTable_create(void);
struct ieee8021TpmrPortStatsTable_data *ieee8021TpmrPortStatsTable_duplicate(struct ieee8021TpmrPortStatsTable_data *);
int ieee8021TpmrPortStatsTable_destroy(struct ieee8021TpmrPortStatsTable_data **);
int ieee8021TpmrPortStatsTable_add(struct ieee8021TpmrPortStatsTable_data *);
int ieee8021TpmrPortStatsTable_del(struct ieee8021TpmrPortStatsTable_data *);
void parse_ieee8021TpmrPortStatsTable(const char *, char *);
SNMPCallback store_ieee8021TpmrPortStatsTable;
void refresh_ieee8021TpmrPortStatsTable(int);
FindVarMethod var_ieee8021TpmrPortDiscardDetailsTable;
struct ieee8021TpmrPortDiscardDetailsTable_data *ieee8021TpmrPortDiscardDetailsTable_create(void);
struct ieee8021TpmrPortDiscardDetailsTable_data *ieee8021TpmrPortDiscardDetailsTable_duplicate(struct ieee8021TpmrPortDiscardDetailsTable_data *);
int ieee8021TpmrPortDiscardDetailsTable_destroy(struct ieee8021TpmrPortDiscardDetailsTable_data **);
int ieee8021TpmrPortDiscardDetailsTable_add(struct ieee8021TpmrPortDiscardDetailsTable_data *);
int ieee8021TpmrPortDiscardDetailsTable_del(struct ieee8021TpmrPortDiscardDetailsTable_data *);
void parse_ieee8021TpmrPortDiscardDetailsTable(const char *, char *);
SNMPCallback store_ieee8021TpmrPortDiscardDetailsTable;
void refresh_ieee8021TpmrPortDiscardDetailsTable(int);
FindVarMethod var_ieee8021TpmrMspTable;
struct ieee8021TpmrMspTable_data *ieee8021TpmrMspTable_create(void);
struct ieee8021TpmrMspTable_data *ieee8021TpmrMspTable_duplicate(struct ieee8021TpmrMspTable_data *);
int ieee8021TpmrMspTable_destroy(struct ieee8021TpmrMspTable_data **);
int ieee8021TpmrMspTable_add(struct ieee8021TpmrMspTable_data *);
int ieee8021TpmrMspTable_del(struct ieee8021TpmrMspTable_data *);
void parse_ieee8021TpmrMspTable(const char *, char *);
SNMPCallback store_ieee8021TpmrMspTable;
void refresh_ieee8021TpmrMspTable(int);
FindVarMethod var_ieee8021TpmrMspStatsTable;
struct ieee8021TpmrMspStatsTable_data *ieee8021TpmrMspStatsTable_create(void);
struct ieee8021TpmrMspStatsTable_data *ieee8021TpmrMspStatsTable_duplicate(struct ieee8021TpmrMspStatsTable_data *);
int ieee8021TpmrMspStatsTable_destroy(struct ieee8021TpmrMspStatsTable_data **);
int ieee8021TpmrMspStatsTable_add(struct ieee8021TpmrMspStatsTable_data *);
int ieee8021TpmrMspStatsTable_del(struct ieee8021TpmrMspStatsTable_data *);
void parse_ieee8021TpmrMspStatsTable(const char *, char *);
SNMPCallback store_ieee8021TpmrMspStatsTable;
void refresh_ieee8021TpmrMspStatsTable(int);

WriteMethod write_ieee8021TpmrMspLinkNotify;
WriteMethod write_ieee8021TpmrMspLinkNotifyWait;
WriteMethod write_ieee8021TpmrMspLinkNotifyRetry;
WriteMethod write_ieee8021TpmrMspMacNotify;
WriteMethod write_ieee8021TpmrMspMacNotifyTime;
WriteMethod write_ieee8021TpmrMspMacRecoverTime;
WriteMethod write_ieee8021TpmrMspStorageType;
#endif				/* __LOCAL_IEEE8021TPMRMIB_H__ */
