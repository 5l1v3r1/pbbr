/*****************************************************************************

 @(#) src/snmp/lldpmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_LLDPMIB_H__
#define __LOCAL_LLDPMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct lldpMIB_data {
	struct lldpMIB_data *lldpMIB_old;
	uint lldpMIB_rsvs;
	uint lldpMIB_tsts;
	uint lldpMIB_sets;
	uint lldpMIB_request;
	long lldpMessageTxInterval;	/* ReadWrite */
	long lldpMessageTxHoldMultiplier;	/* ReadWrite */
	long lldpReinitDelay;		/* ReadWrite */
	long lldpTxDelay;		/* ReadWrite */
	long lldpNotificationInterval;	/* ReadWrite */
	long lldpStatsRemTablesLastChangeTime;	/* ReadOnly */
	long lldpStatsRemTablesInserts;	/* ReadOnly */
	long lldpStatsRemTablesDeletes;	/* ReadOnly */
	long lldpStatsRemTablesDrops;	/* ReadOnly */
	long lldpStatsRemTablesAgeouts;	/* ReadOnly */
	long lldpLocChassisIdSubtype;	/* ReadOnly */
	uint8_t *lldpLocChassisId;	/* ReadOnly */
	size_t lldpLocChassisIdLen;
	uint8_t *lldpLocSysName;	/* ReadOnly */
	size_t lldpLocSysNameLen;
	uint8_t *lldpLocSysDesc;	/* ReadOnly */
	size_t lldpLocSysDescLen;
	uint8_t *lldpLocSysCapSupported;	/* ReadOnly */
	size_t lldpLocSysCapSupportedLen;
	uint8_t *lldpLocSysCapEnabled;	/* ReadOnly */
	size_t lldpLocSysCapEnabledLen;
};
struct lldpPortConfigTable_data {
	struct lldpPortConfigTable_data *lldpPortConfigTable_old;
	uint lldpPortConfigTable_rsvs;
	uint lldpPortConfigTable_tsts;
	uint lldpPortConfigTable_sets;
	uint lldpPortConfigTable_request;
	uint lldpPortConfigTable_refs;
	uint lldpPortConfigTable_id;
	long lldpPortConfigPortNum;	/* NoAccess */
	long lldpPortConfigAdminStatus;	/* ReadWrite */
	long lldpPortConfigNotificationEnable;	/* ReadWrite */
	uint8_t *lldpPortConfigTLVsTxEnable;	/* ReadWrite */
	size_t lldpPortConfigTLVsTxEnableLen;
};
struct lldpConfigManAddrTable_data {
	struct lldpConfigManAddrTable_data *lldpConfigManAddrTable_old;
	uint lldpConfigManAddrTable_rsvs;
	uint lldpConfigManAddrTable_tsts;
	uint lldpConfigManAddrTable_sets;
	uint lldpConfigManAddrTable_request;
	uint lldpConfigManAddrTable_refs;
	uint lldpConfigManAddrTable_id;
	long lldpLocManAddrSubtype;	/* NoAccess */
	uint8_t *lldpLocManAddr;	/* NoAccess */
	size_t lldpLocManAddrLen;
	uint8_t *lldpConfigManAddrPortsTxEnable;	/* ReadWrite */
	size_t lldpConfigManAddrPortsTxEnableLen;
};
struct lldpStatsTxPortTable_data {
	struct lldpStatsTxPortTable_data *lldpStatsTxPortTable_old;
	uint lldpStatsTxPortTable_rsvs;
	uint lldpStatsTxPortTable_tsts;
	uint lldpStatsTxPortTable_sets;
	uint lldpStatsTxPortTable_request;
	uint lldpStatsTxPortTable_refs;
	uint lldpStatsTxPortTable_id;
	long lldpStatsTxPortNum;	/* NoAccess */
	long lldpStatsTxPortFramesTotal;	/* ReadOnly */
};
struct lldpStatsRxPortTable_data {
	struct lldpStatsRxPortTable_data *lldpStatsRxPortTable_old;
	uint lldpStatsRxPortTable_rsvs;
	uint lldpStatsRxPortTable_tsts;
	uint lldpStatsRxPortTable_sets;
	uint lldpStatsRxPortTable_request;
	uint lldpStatsRxPortTable_refs;
	uint lldpStatsRxPortTable_id;
	long lldpStatsRxPortNum;	/* NoAccess */
	long lldpStatsRxPortFramesDiscardedTotal;	/* ReadOnly */
	long lldpStatsRxPortFramesErrors;	/* ReadOnly */
	long lldpStatsRxPortFramesTotal;	/* ReadOnly */
	long lldpStatsRxPortTLVsDiscardedTotal;	/* ReadOnly */
	long lldpStatsRxPortTLVsUnrecognizedTotal;	/* ReadOnly */
	long lldpStatsRxPortAgeoutsTotal;	/* ReadOnly */
};
struct lldpLocPortTable_data {
	struct lldpLocPortTable_data *lldpLocPortTable_old;
	uint lldpLocPortTable_rsvs;
	uint lldpLocPortTable_tsts;
	uint lldpLocPortTable_sets;
	uint lldpLocPortTable_request;
	uint lldpLocPortTable_refs;
	uint lldpLocPortTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpLocPortIdSubtype;	/* ReadOnly */
	uint8_t *lldpLocPortId;		/* ReadOnly */
	size_t lldpLocPortIdLen;
	uint8_t *lldpLocPortDesc;	/* ReadOnly */
	size_t lldpLocPortDescLen;
};
struct lldpLocManAddrTable_data {
	struct lldpLocManAddrTable_data *lldpLocManAddrTable_old;
	uint lldpLocManAddrTable_rsvs;
	uint lldpLocManAddrTable_tsts;
	uint lldpLocManAddrTable_sets;
	uint lldpLocManAddrTable_request;
	uint lldpLocManAddrTable_refs;
	uint lldpLocManAddrTable_id;
	long lldpLocManAddrSubtype;	/* NoAccess */
	uint8_t *lldpLocManAddr;	/* NoAccess */
	size_t lldpLocManAddrLen;
	long lldpLocManAddrLen;		/* ReadOnly */
	long lldpLocManAddrIfSubtype;	/* ReadOnly */
	long lldpLocManAddrIfId;	/* ReadOnly */
	oid *lldpLocManAddrOID;		/* ReadOnly */
	size_t lldpLocManAddrOIDLen;
};
struct lldpRemTable_data {
	struct lldpRemTable_data *lldpRemTable_old;
	uint lldpRemTable_rsvs;
	uint lldpRemTable_tsts;
	uint lldpRemTable_sets;
	uint lldpRemTable_request;
	uint lldpRemTable_refs;
	uint lldpRemTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpRemChassisIdSubtype;	/* ReadOnly */
	uint8_t *lldpRemChassisId;	/* ReadOnly */
	size_t lldpRemChassisIdLen;
	long lldpRemPortIdSubtype;	/* ReadOnly */
	uint8_t *lldpRemPortId;		/* ReadOnly */
	size_t lldpRemPortIdLen;
	uint8_t *lldpRemPortDesc;	/* ReadOnly */
	size_t lldpRemPortDescLen;
	uint8_t *lldpRemSysName;	/* ReadOnly */
	size_t lldpRemSysNameLen;
	uint8_t *lldpRemSysDesc;	/* ReadOnly */
	size_t lldpRemSysDescLen;
	uint8_t *lldpRemSysCapSupported;	/* ReadOnly */
	size_t lldpRemSysCapSupportedLen;
	uint8_t *lldpRemSysCapEnabled;	/* ReadOnly */
	size_t lldpRemSysCapEnabledLen;
};
struct lldpRemManAddrTable_data {
	struct lldpRemManAddrTable_data *lldpRemManAddrTable_old;
	uint lldpRemManAddrTable_rsvs;
	uint lldpRemManAddrTable_tsts;
	uint lldpRemManAddrTable_sets;
	uint lldpRemManAddrTable_request;
	uint lldpRemManAddrTable_refs;
	uint lldpRemManAddrTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpRemManAddrSubtype;	/* NoAccess */
	uint8_t *lldpRemManAddr;	/* NoAccess */
	size_t lldpRemManAddrLen;
	long lldpRemManAddrIfSubtype;	/* ReadOnly */
	long lldpRemManAddrIfId;	/* ReadOnly */
	oid *lldpRemManAddrOID;		/* ReadOnly */
	size_t lldpRemManAddrOIDLen;
};
struct lldpRemUnknownTLVTable_data {
	struct lldpRemUnknownTLVTable_data *lldpRemUnknownTLVTable_old;
	uint lldpRemUnknownTLVTable_rsvs;
	uint lldpRemUnknownTLVTable_tsts;
	uint lldpRemUnknownTLVTable_sets;
	uint lldpRemUnknownTLVTable_request;
	uint lldpRemUnknownTLVTable_refs;
	uint lldpRemUnknownTLVTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpRemUnknownTLVType;	/* NoAccess */
	uint8_t *lldpRemUnknownTLVInfo;	/* ReadOnly */
	size_t lldpRemUnknownTLVInfoLen;
};
struct lldpRemOrgDefInfoTable_data {
	struct lldpRemOrgDefInfoTable_data *lldpRemOrgDefInfoTable_old;
	uint lldpRemOrgDefInfoTable_rsvs;
	uint lldpRemOrgDefInfoTable_tsts;
	uint lldpRemOrgDefInfoTable_sets;
	uint lldpRemOrgDefInfoTable_request;
	uint lldpRemOrgDefInfoTable_refs;
	uint lldpRemOrgDefInfoTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	uint8_t *lldpRemOrgDefInfoOUI;	/* NoAccess */
	size_t lldpRemOrgDefInfoOUILen;
	long lldpRemOrgDefInfoSubtype;	/* NoAccess */
	long lldpRemOrgDefInfoIndex;	/* NoAccess */
	uint8_t *lldpRemOrgDefInfo;	/* ReadOnly */
	size_t lldpRemOrgDefInfoLen;
};

/* storage declarations */
extern struct lldpMIB_data *lldpMIBStorage;
extern struct header_complex_index *lldpPortConfigTableStorage;
extern struct header_complex_index *lldpConfigManAddrTableStorage;
extern struct header_complex_index *lldpStatsTxPortTableStorage;
extern struct header_complex_index *lldpStatsRxPortTableStorage;
extern struct header_complex_index *lldpLocPortTableStorage;
extern struct header_complex_index *lldpLocManAddrTableStorage;
extern struct header_complex_index *lldpRemTableStorage;
extern struct header_complex_index *lldpRemManAddrTableStorage;
extern struct header_complex_index *lldpRemUnknownTLVTableStorage;
extern struct header_complex_index *lldpRemOrgDefInfoTableStorage;

/* enum definitions from the covered mib sections */

#define LLDPPORTCONFIGADMINSTATUS_TXONLY         1
#define LLDPPORTCONFIGADMINSTATUS_RXONLY         2
#define LLDPPORTCONFIGADMINSTATUS_TXANDRX        3
#define LLDPPORTCONFIGADMINSTATUS_DISABLED       4

#define LLDPPORTCONFIGNOTIFICATIONENABLE_TRUE    1
#define LLDPPORTCONFIGNOTIFICATIONENABLE_FALSE   2

#define LLDPPORTCONFIGTLVSTXENABLE_PORTDESC      0
#define LLDPPORTCONFIGTLVSTXENABLE_SYSNAME       1
#define LLDPPORTCONFIGTLVSTXENABLE_SYSDESC       2
#define LLDPPORTCONFIGTLVSTXENABLE_SYSCAP        3

#define LLDPLOCMANADDRSUBTYPE_OTHER              0
#define LLDPLOCMANADDRSUBTYPE_IPV4               1
#define LLDPLOCMANADDRSUBTYPE_IPV6               2
#define LLDPLOCMANADDRSUBTYPE_NSAP               3
#define LLDPLOCMANADDRSUBTYPE_HDLC               4
#define LLDPLOCMANADDRSUBTYPE_BBN1822            5
#define LLDPLOCMANADDRSUBTYPE_ALL802             6
#define LLDPLOCMANADDRSUBTYPE_E163               7
#define LLDPLOCMANADDRSUBTYPE_E164               8
#define LLDPLOCMANADDRSUBTYPE_F69                9
#define LLDPLOCMANADDRSUBTYPE_X121               10
#define LLDPLOCMANADDRSUBTYPE_IPX                11
#define LLDPLOCMANADDRSUBTYPE_APPLETALK          12
#define LLDPLOCMANADDRSUBTYPE_DECNETIV           13
#define LLDPLOCMANADDRSUBTYPE_BANYANVINES        14
#define LLDPLOCMANADDRSUBTYPE_E164WITHNSAP       15
#define LLDPLOCMANADDRSUBTYPE_DNS                16
#define LLDPLOCMANADDRSUBTYPE_DISTINGUISHEDNAME  17
#define LLDPLOCMANADDRSUBTYPE_ASNUMBER           18
#define LLDPLOCMANADDRSUBTYPE_XTPOVERIPV4        19
#define LLDPLOCMANADDRSUBTYPE_XTPOVERIPV6        20
#define LLDPLOCMANADDRSUBTYPE_XTPNATIVEMODEXTP   21
#define LLDPLOCMANADDRSUBTYPE_FIBRECHANNELWWPN   22
#define LLDPLOCMANADDRSUBTYPE_FIBRECHANNELWWNN   23
#define LLDPLOCMANADDRSUBTYPE_GWID               24
#define LLDPLOCMANADDRSUBTYPE_AFI                25
#define LLDPLOCMANADDRSUBTYPE_RESERVED           65535

#define LLDPLOCCHASSISIDSUBTYPE_CHASSISCOMPONENT 1
#define LLDPLOCCHASSISIDSUBTYPE_INTERFACEALIAS   2
#define LLDPLOCCHASSISIDSUBTYPE_PORTCOMPONENT    3
#define LLDPLOCCHASSISIDSUBTYPE_MACADDRESS       4
#define LLDPLOCCHASSISIDSUBTYPE_NETWORKADDRESS   5
#define LLDPLOCCHASSISIDSUBTYPE_INTERFACENAME    6
#define LLDPLOCCHASSISIDSUBTYPE_LOCAL            7

#define LLDPLOCSYSCAPSUPPORTED_OTHER             0
#define LLDPLOCSYSCAPSUPPORTED_REPEATER          1
#define LLDPLOCSYSCAPSUPPORTED_BRIDGE            2
#define LLDPLOCSYSCAPSUPPORTED_WLANACCESSPOINT   3
#define LLDPLOCSYSCAPSUPPORTED_ROUTER            4
#define LLDPLOCSYSCAPSUPPORTED_TELEPHONE         5
#define LLDPLOCSYSCAPSUPPORTED_DOCSISCABLEDEVICE 6
#define LLDPLOCSYSCAPSUPPORTED_STATIONONLY       7

#define LLDPLOCSYSCAPENABLED_OTHER               0
#define LLDPLOCSYSCAPENABLED_REPEATER            1
#define LLDPLOCSYSCAPENABLED_BRIDGE              2
#define LLDPLOCSYSCAPENABLED_WLANACCESSPOINT     3
#define LLDPLOCSYSCAPENABLED_ROUTER              4
#define LLDPLOCSYSCAPENABLED_TELEPHONE           5
#define LLDPLOCSYSCAPENABLED_DOCSISCABLEDEVICE   6
#define LLDPLOCSYSCAPENABLED_STATIONONLY         7

#define LLDPLOCPORTIDSUBTYPE_INTERFACEALIAS      1
#define LLDPLOCPORTIDSUBTYPE_PORTCOMPONENT       2
#define LLDPLOCPORTIDSUBTYPE_MACADDRESS          3
#define LLDPLOCPORTIDSUBTYPE_NETWORKADDRESS      4
#define LLDPLOCPORTIDSUBTYPE_INTERFACENAME       5
#define LLDPLOCPORTIDSUBTYPE_AGENTCIRCUITID      6
#define LLDPLOCPORTIDSUBTYPE_LOCAL               7

#define LLDPLOCMANADDRSUBTYPE_OTHER              0
#define LLDPLOCMANADDRSUBTYPE_IPV4               1
#define LLDPLOCMANADDRSUBTYPE_IPV6               2
#define LLDPLOCMANADDRSUBTYPE_NSAP               3
#define LLDPLOCMANADDRSUBTYPE_HDLC               4
#define LLDPLOCMANADDRSUBTYPE_BBN1822            5
#define LLDPLOCMANADDRSUBTYPE_ALL802             6
#define LLDPLOCMANADDRSUBTYPE_E163               7
#define LLDPLOCMANADDRSUBTYPE_E164               8
#define LLDPLOCMANADDRSUBTYPE_F69                9
#define LLDPLOCMANADDRSUBTYPE_X121               10
#define LLDPLOCMANADDRSUBTYPE_IPX                11
#define LLDPLOCMANADDRSUBTYPE_APPLETALK          12
#define LLDPLOCMANADDRSUBTYPE_DECNETIV           13
#define LLDPLOCMANADDRSUBTYPE_BANYANVINES        14
#define LLDPLOCMANADDRSUBTYPE_E164WITHNSAP       15
#define LLDPLOCMANADDRSUBTYPE_DNS                16
#define LLDPLOCMANADDRSUBTYPE_DISTINGUISHEDNAME  17
#define LLDPLOCMANADDRSUBTYPE_ASNUMBER           18
#define LLDPLOCMANADDRSUBTYPE_XTPOVERIPV4        19
#define LLDPLOCMANADDRSUBTYPE_XTPOVERIPV6        20
#define LLDPLOCMANADDRSUBTYPE_XTPNATIVEMODEXTP   21
#define LLDPLOCMANADDRSUBTYPE_FIBRECHANNELWWPN   22
#define LLDPLOCMANADDRSUBTYPE_FIBRECHANNELWWNN   23
#define LLDPLOCMANADDRSUBTYPE_GWID               24
#define LLDPLOCMANADDRSUBTYPE_AFI                25
#define LLDPLOCMANADDRSUBTYPE_RESERVED           65535

#define LLDPLOCMANADDRIFSUBTYPE_UNKNOWN          1
#define LLDPLOCMANADDRIFSUBTYPE_IFINDEX          2
#define LLDPLOCMANADDRIFSUBTYPE_SYSTEMPORTNUMBER 3

#define LLDPREMCHASSISIDSUBTYPE_CHASSISCOMPONENT 1
#define LLDPREMCHASSISIDSUBTYPE_INTERFACEALIAS   2
#define LLDPREMCHASSISIDSUBTYPE_PORTCOMPONENT    3
#define LLDPREMCHASSISIDSUBTYPE_MACADDRESS       4
#define LLDPREMCHASSISIDSUBTYPE_NETWORKADDRESS   5
#define LLDPREMCHASSISIDSUBTYPE_INTERFACENAME    6
#define LLDPREMCHASSISIDSUBTYPE_LOCAL            7

#define LLDPREMPORTIDSUBTYPE_INTERFACEALIAS      1
#define LLDPREMPORTIDSUBTYPE_PORTCOMPONENT       2
#define LLDPREMPORTIDSUBTYPE_MACADDRESS          3
#define LLDPREMPORTIDSUBTYPE_NETWORKADDRESS      4
#define LLDPREMPORTIDSUBTYPE_INTERFACENAME       5
#define LLDPREMPORTIDSUBTYPE_AGENTCIRCUITID      6
#define LLDPREMPORTIDSUBTYPE_LOCAL               7

#define LLDPREMSYSCAPSUPPORTED_OTHER             0
#define LLDPREMSYSCAPSUPPORTED_REPEATER          1
#define LLDPREMSYSCAPSUPPORTED_BRIDGE            2
#define LLDPREMSYSCAPSUPPORTED_WLANACCESSPOINT   3
#define LLDPREMSYSCAPSUPPORTED_ROUTER            4
#define LLDPREMSYSCAPSUPPORTED_TELEPHONE         5
#define LLDPREMSYSCAPSUPPORTED_DOCSISCABLEDEVICE 6
#define LLDPREMSYSCAPSUPPORTED_STATIONONLY       7

#define LLDPREMSYSCAPENABLED_OTHER               0
#define LLDPREMSYSCAPENABLED_REPEATER            1
#define LLDPREMSYSCAPENABLED_BRIDGE              2
#define LLDPREMSYSCAPENABLED_WLANACCESSPOINT     3
#define LLDPREMSYSCAPENABLED_ROUTER              4
#define LLDPREMSYSCAPENABLED_TELEPHONE           5
#define LLDPREMSYSCAPENABLED_DOCSISCABLEDEVICE   6
#define LLDPREMSYSCAPENABLED_STATIONONLY         7

#define LLDPREMMANADDRSUBTYPE_OTHER              0
#define LLDPREMMANADDRSUBTYPE_IPV4               1
#define LLDPREMMANADDRSUBTYPE_IPV6               2
#define LLDPREMMANADDRSUBTYPE_NSAP               3
#define LLDPREMMANADDRSUBTYPE_HDLC               4
#define LLDPREMMANADDRSUBTYPE_BBN1822            5
#define LLDPREMMANADDRSUBTYPE_ALL802             6
#define LLDPREMMANADDRSUBTYPE_E163               7
#define LLDPREMMANADDRSUBTYPE_E164               8
#define LLDPREMMANADDRSUBTYPE_F69                9
#define LLDPREMMANADDRSUBTYPE_X121               10
#define LLDPREMMANADDRSUBTYPE_IPX                11
#define LLDPREMMANADDRSUBTYPE_APPLETALK          12
#define LLDPREMMANADDRSUBTYPE_DECNETIV           13
#define LLDPREMMANADDRSUBTYPE_BANYANVINES        14
#define LLDPREMMANADDRSUBTYPE_E164WITHNSAP       15
#define LLDPREMMANADDRSUBTYPE_DNS                16
#define LLDPREMMANADDRSUBTYPE_DISTINGUISHEDNAME  17
#define LLDPREMMANADDRSUBTYPE_ASNUMBER           18
#define LLDPREMMANADDRSUBTYPE_XTPOVERIPV4        19
#define LLDPREMMANADDRSUBTYPE_XTPOVERIPV6        20
#define LLDPREMMANADDRSUBTYPE_XTPNATIVEMODEXTP   21
#define LLDPREMMANADDRSUBTYPE_FIBRECHANNELWWPN   22
#define LLDPREMMANADDRSUBTYPE_FIBRECHANNELWWNN   23
#define LLDPREMMANADDRSUBTYPE_GWID               24
#define LLDPREMMANADDRSUBTYPE_AFI                25
#define LLDPREMMANADDRSUBTYPE_RESERVED           65535

#define LLDPREMMANADDRIFSUBTYPE_UNKNOWN          1
#define LLDPREMMANADDRIFSUBTYPE_IFINDEX          2
#define LLDPREMMANADDRIFSUBTYPE_SYSTEMPORTNUMBER 3

/* notifications */
extern oid lldpRemTablesChange_oid[9];

/* scalars accessible only for notify */

/* object id definitions */
extern oid lldpCompliance_oid[9];
extern oid lldpConfigGroup_oid[9];
extern oid lldpConfigRxGroup_oid[9];
extern oid lldpConfigTxGroup_oid[9];
extern oid lldpStatsRxGroup_oid[9];
extern oid lldpStatsTxGroup_oid[9];
extern oid lldpLocSysGroup_oid[9];
extern oid lldpRemSysGroup_oid[9];
extern oid lldpNotificationsGroup_oid[9];

/* function prototypes */
/* trap function prototypes */
extern void send_lldpRemTablesChange_v2trap(struct variable_list *);

/* variable function prototypes */
void init_lldpMIB(void);
void deinit_lldpMIB(void);
int term_lldpMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lldpMIB;
struct lldpMIB_data *lldpMIB_create(void);
struct lldpMIB_data *lldpMIB_duplicate(struct lldpMIB_data *);
int lldpMIB_destroy(struct lldpMIB_data **);
int lldpMIB_add(struct lldpMIB_data *);
void parse_lldpMIB(const char *, char *);
SNMPCallback store_lldpMIB;
void refresh_lldpMIB(int);
FindVarMethod var_lldpPortConfigTable;
struct lldpPortConfigTable_data *lldpPortConfigTable_create(void);
struct lldpPortConfigTable_data *lldpPortConfigTable_duplicate(struct lldpPortConfigTable_data *);
int lldpPortConfigTable_destroy(struct lldpPortConfigTable_data **);
int lldpPortConfigTable_add(struct lldpPortConfigTable_data *);
int lldpPortConfigTable_del(struct lldpPortConfigTable_data *);
void parse_lldpPortConfigTable(const char *, char *);
SNMPCallback store_lldpPortConfigTable;
void refresh_lldpPortConfigTable(int);
FindVarMethod var_lldpConfigManAddrTable;
struct lldpConfigManAddrTable_data *lldpConfigManAddrTable_create(void);
struct lldpConfigManAddrTable_data *lldpConfigManAddrTable_duplicate(struct lldpConfigManAddrTable_data *);
int lldpConfigManAddrTable_destroy(struct lldpConfigManAddrTable_data **);
int lldpConfigManAddrTable_add(struct lldpConfigManAddrTable_data *);
int lldpConfigManAddrTable_del(struct lldpConfigManAddrTable_data *);
void parse_lldpConfigManAddrTable(const char *, char *);
SNMPCallback store_lldpConfigManAddrTable;
void refresh_lldpConfigManAddrTable(int);
FindVarMethod var_lldpStatsTxPortTable;
struct lldpStatsTxPortTable_data *lldpStatsTxPortTable_create(void);
struct lldpStatsTxPortTable_data *lldpStatsTxPortTable_duplicate(struct lldpStatsTxPortTable_data *);
int lldpStatsTxPortTable_destroy(struct lldpStatsTxPortTable_data **);
int lldpStatsTxPortTable_add(struct lldpStatsTxPortTable_data *);
int lldpStatsTxPortTable_del(struct lldpStatsTxPortTable_data *);
void parse_lldpStatsTxPortTable(const char *, char *);
SNMPCallback store_lldpStatsTxPortTable;
void refresh_lldpStatsTxPortTable(int);
FindVarMethod var_lldpStatsRxPortTable;
struct lldpStatsRxPortTable_data *lldpStatsRxPortTable_create(void);
struct lldpStatsRxPortTable_data *lldpStatsRxPortTable_duplicate(struct lldpStatsRxPortTable_data *);
int lldpStatsRxPortTable_destroy(struct lldpStatsRxPortTable_data **);
int lldpStatsRxPortTable_add(struct lldpStatsRxPortTable_data *);
int lldpStatsRxPortTable_del(struct lldpStatsRxPortTable_data *);
void parse_lldpStatsRxPortTable(const char *, char *);
SNMPCallback store_lldpStatsRxPortTable;
void refresh_lldpStatsRxPortTable(int);
FindVarMethod var_lldpLocPortTable;
struct lldpLocPortTable_data *lldpLocPortTable_create(void);
struct lldpLocPortTable_data *lldpLocPortTable_duplicate(struct lldpLocPortTable_data *);
int lldpLocPortTable_destroy(struct lldpLocPortTable_data **);
int lldpLocPortTable_add(struct lldpLocPortTable_data *);
int lldpLocPortTable_del(struct lldpLocPortTable_data *);
void parse_lldpLocPortTable(const char *, char *);
SNMPCallback store_lldpLocPortTable;
void refresh_lldpLocPortTable(int);
FindVarMethod var_lldpLocManAddrTable;
struct lldpLocManAddrTable_data *lldpLocManAddrTable_create(void);
struct lldpLocManAddrTable_data *lldpLocManAddrTable_duplicate(struct lldpLocManAddrTable_data *);
int lldpLocManAddrTable_destroy(struct lldpLocManAddrTable_data **);
int lldpLocManAddrTable_add(struct lldpLocManAddrTable_data *);
int lldpLocManAddrTable_del(struct lldpLocManAddrTable_data *);
void parse_lldpLocManAddrTable(const char *, char *);
SNMPCallback store_lldpLocManAddrTable;
void refresh_lldpLocManAddrTable(int);
FindVarMethod var_lldpRemTable;
struct lldpRemTable_data *lldpRemTable_create(void);
struct lldpRemTable_data *lldpRemTable_duplicate(struct lldpRemTable_data *);
int lldpRemTable_destroy(struct lldpRemTable_data **);
int lldpRemTable_add(struct lldpRemTable_data *);
int lldpRemTable_del(struct lldpRemTable_data *);
void parse_lldpRemTable(const char *, char *);
SNMPCallback store_lldpRemTable;
void refresh_lldpRemTable(int);
FindVarMethod var_lldpRemManAddrTable;
struct lldpRemManAddrTable_data *lldpRemManAddrTable_create(void);
struct lldpRemManAddrTable_data *lldpRemManAddrTable_duplicate(struct lldpRemManAddrTable_data *);
int lldpRemManAddrTable_destroy(struct lldpRemManAddrTable_data **);
int lldpRemManAddrTable_add(struct lldpRemManAddrTable_data *);
int lldpRemManAddrTable_del(struct lldpRemManAddrTable_data *);
void parse_lldpRemManAddrTable(const char *, char *);
SNMPCallback store_lldpRemManAddrTable;
void refresh_lldpRemManAddrTable(int);
FindVarMethod var_lldpRemUnknownTLVTable;
struct lldpRemUnknownTLVTable_data *lldpRemUnknownTLVTable_create(void);
struct lldpRemUnknownTLVTable_data *lldpRemUnknownTLVTable_duplicate(struct lldpRemUnknownTLVTable_data *);
int lldpRemUnknownTLVTable_destroy(struct lldpRemUnknownTLVTable_data **);
int lldpRemUnknownTLVTable_add(struct lldpRemUnknownTLVTable_data *);
int lldpRemUnknownTLVTable_del(struct lldpRemUnknownTLVTable_data *);
void parse_lldpRemUnknownTLVTable(const char *, char *);
SNMPCallback store_lldpRemUnknownTLVTable;
void refresh_lldpRemUnknownTLVTable(int);
FindVarMethod var_lldpRemOrgDefInfoTable;
struct lldpRemOrgDefInfoTable_data *lldpRemOrgDefInfoTable_create(void);
struct lldpRemOrgDefInfoTable_data *lldpRemOrgDefInfoTable_duplicate(struct lldpRemOrgDefInfoTable_data *);
int lldpRemOrgDefInfoTable_destroy(struct lldpRemOrgDefInfoTable_data **);
int lldpRemOrgDefInfoTable_add(struct lldpRemOrgDefInfoTable_data *);
int lldpRemOrgDefInfoTable_del(struct lldpRemOrgDefInfoTable_data *);
void parse_lldpRemOrgDefInfoTable(const char *, char *);
SNMPCallback store_lldpRemOrgDefInfoTable;
void refresh_lldpRemOrgDefInfoTable(int);

WriteMethod write_lldpMessageTxInterval;
WriteMethod write_lldpMessageTxHoldMultiplier;
WriteMethod write_lldpReinitDelay;
WriteMethod write_lldpTxDelay;
WriteMethod write_lldpNotificationInterval;
WriteMethod write_lldpPortConfigAdminStatus;
WriteMethod write_lldpPortConfigNotificationEnable;
WriteMethod write_lldpPortConfigTLVsTxEnable;
WriteMethod write_lldpConfigManAddrPortsTxEnable;
#endif				/* __LOCAL_LLDPMIB_H__ */
