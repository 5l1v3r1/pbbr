/*****************************************************************************

 @(#) src/snmp/lldpxdot1evbextensions.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_LLDPXDOT1EVBEXTENSIONS_H__
#define __LOCAL_LLDPXDOT1EVBEXTENSIONS_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct lldpXDot1EvbExtensions_data {
	struct lldpXDot1EvbExtensions_data *lldpXDot1EvbExtensions_old;
	uint lldpXDot1EvbExtensions_rsvs;
	uint lldpXDot1EvbExtensions_tsts;
	uint lldpXDot1EvbExtensions_sets;
	uint lldpXDot1EvbExtensions_request;
};
struct lldpXdot1EvbConfigEvbTable_data {
	struct lldpXdot1EvbConfigEvbTable_data *lldpXdot1EvbConfigEvbTable_old;
	uint lldpXdot1EvbConfigEvbTable_rsvs;
	uint lldpXdot1EvbConfigEvbTable_tsts;
	uint lldpXdot1EvbConfigEvbTable_sets;
	uint lldpXdot1EvbConfigEvbTable_request;
	uint lldpXdot1EvbConfigEvbTable_refs;
	uint lldpXdot1EvbConfigEvbTable_id;
	long lldpV2PortConfigIfIndex;	/* NoAccess */
	ulong lldpV2PortConfigDestAddressIndex;	/* NoAccess */
	long lldpXdot1EvbConfigEvbTxEnable;	/* ReadWrite */
};
struct lldpXdot1EvbConfigCdcpTable_data {
	struct lldpXdot1EvbConfigCdcpTable_data *lldpXdot1EvbConfigCdcpTable_old;
	uint lldpXdot1EvbConfigCdcpTable_rsvs;
	uint lldpXdot1EvbConfigCdcpTable_tsts;
	uint lldpXdot1EvbConfigCdcpTable_sets;
	uint lldpXdot1EvbConfigCdcpTable_request;
	uint lldpXdot1EvbConfigCdcpTable_refs;
	uint lldpXdot1EvbConfigCdcpTable_id;
	long lldpV2PortConfigIfIndex;	/* NoAccess */
	ulong lldpV2PortConfigDestAddressIndex;	/* NoAccess */
	long lldpXdot1EvbConfigCdcpTxEnable;	/* ReadWrite */
};
struct lldpV2Xdot1LocEvbTlvTable_data {
	struct lldpV2Xdot1LocEvbTlvTable_data *lldpV2Xdot1LocEvbTlvTable_old;
	uint lldpV2Xdot1LocEvbTlvTable_rsvs;
	uint lldpV2Xdot1LocEvbTlvTable_tsts;
	uint lldpV2Xdot1LocEvbTlvTable_sets;
	uint lldpV2Xdot1LocEvbTlvTable_request;
	uint lldpV2Xdot1LocEvbTlvTable_refs;
	uint lldpV2Xdot1LocEvbTlvTable_id;
	long lldpV2LocPortIfIndex;	/* NoAccess */
	uint8_t *lldpV2Xdot1LocEvbTlvString;	/* ReadOnly */
	size_t lldpV2Xdot1LocEvbTlvStringLen;
};
struct lldpV2Xdot1LocCdcpTlvTable_data {
	struct lldpV2Xdot1LocCdcpTlvTable_data *lldpV2Xdot1LocCdcpTlvTable_old;
	uint lldpV2Xdot1LocCdcpTlvTable_rsvs;
	uint lldpV2Xdot1LocCdcpTlvTable_tsts;
	uint lldpV2Xdot1LocCdcpTlvTable_sets;
	uint lldpV2Xdot1LocCdcpTlvTable_request;
	uint lldpV2Xdot1LocCdcpTlvTable_refs;
	uint lldpV2Xdot1LocCdcpTlvTable_id;
	long lldpV2LocPortIfIndex;	/* NoAccess */
	uint8_t *lldpV2Xdot1LocCdcpTlvString;	/* ReadOnly */
	size_t lldpV2Xdot1LocCdcpTlvStringLen;
};
struct lldpV2Xdot1RemEvbTlvTable_data {
	struct lldpV2Xdot1RemEvbTlvTable_data *lldpV2Xdot1RemEvbTlvTable_old;
	uint lldpV2Xdot1RemEvbTlvTable_rsvs;
	uint lldpV2Xdot1RemEvbTlvTable_tsts;
	uint lldpV2Xdot1RemEvbTlvTable_sets;
	uint lldpV2Xdot1RemEvbTlvTable_request;
	uint lldpV2Xdot1RemEvbTlvTable_refs;
	uint lldpV2Xdot1RemEvbTlvTable_id;
	long lldpV2RemTimeMark;		/* NoAccess */
	long lldpV2RemLocalIfIndex;	/* NoAccess */
	ulong lldpV2RemLocalDestMACAddress;	/* NoAccess */
	ulong lldpV2RemIndex;		/* NoAccess */
	uint8_t *lldpV2Xdot1RemEvbTlvString;	/* ReadOnly */
	size_t lldpV2Xdot1RemEvbTlvStringLen;
};
struct lldpV2Xdot1RemCdcpTlvTable_data {
	struct lldpV2Xdot1RemCdcpTlvTable_data *lldpV2Xdot1RemCdcpTlvTable_old;
	uint lldpV2Xdot1RemCdcpTlvTable_rsvs;
	uint lldpV2Xdot1RemCdcpTlvTable_tsts;
	uint lldpV2Xdot1RemCdcpTlvTable_sets;
	uint lldpV2Xdot1RemCdcpTlvTable_request;
	uint lldpV2Xdot1RemCdcpTlvTable_refs;
	uint lldpV2Xdot1RemCdcpTlvTable_id;
	long lldpV2RemTimeMark;		/* NoAccess */
	long lldpV2RemLocalIfIndex;	/* NoAccess */
	ulong lldpV2RemLocalDestMACAddress;	/* NoAccess */
	ulong lldpV2RemIndex;		/* NoAccess */
	uint8_t *lldpV2Xdot1RemCdcpTlvString;	/* ReadOnly */
	size_t lldpV2Xdot1RemCdcpTlvStringLen;
};

/* storage declarations */
extern struct lldpXDot1EvbExtensions_data *lldpXDot1EvbExtensionsStorage;
extern struct header_complex_index *lldpXdot1EvbConfigEvbTableStorage;
extern struct header_complex_index *lldpXdot1EvbConfigCdcpTableStorage;
extern struct header_complex_index *lldpV2Xdot1LocEvbTlvTableStorage;
extern struct header_complex_index *lldpV2Xdot1LocCdcpTlvTableStorage;
extern struct header_complex_index *lldpV2Xdot1RemEvbTlvTableStorage;
extern struct header_complex_index *lldpV2Xdot1RemCdcpTlvTableStorage;

/* enum definitions from the covered mib sections */

#define LLDPXDOT1EVBCONFIGEVBTXENABLE_TRUE       1
#define LLDPXDOT1EVBCONFIGEVBTXENABLE_FALSE      2

#define LLDPXDOT1EVBCONFIGCDCPTXENABLE_TRUE      1
#define LLDPXDOT1EVBCONFIGCDCPTXENABLE_FALSE     2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid lldpXdot1EvbCompliance_oid[16];
extern oid lldpXdot1EvbGroup_oid[16];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_lldpXDot1EvbExtensions(void);
void deinit_lldpXDot1EvbExtensions(void);
int term_lldpXDot1EvbExtensions(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lldpXDot1EvbExtensions;
struct lldpXDot1EvbExtensions_data *lldpXDot1EvbExtensions_create(void);
struct lldpXDot1EvbExtensions_data *lldpXDot1EvbExtensions_duplicate(struct lldpXDot1EvbExtensions_data *);
int lldpXDot1EvbExtensions_destroy(struct lldpXDot1EvbExtensions_data **);
int lldpXDot1EvbExtensions_add(struct lldpXDot1EvbExtensions_data *);
void parse_lldpXDot1EvbExtensions(const char *, char *);
SNMPCallback store_lldpXDot1EvbExtensions;
void refresh_lldpXDot1EvbExtensions(int);
FindVarMethod var_lldpXdot1EvbConfigEvbTable;
struct lldpXdot1EvbConfigEvbTable_data *lldpXdot1EvbConfigEvbTable_create(void);
struct lldpXdot1EvbConfigEvbTable_data *lldpXdot1EvbConfigEvbTable_duplicate(struct lldpXdot1EvbConfigEvbTable_data *);
int lldpXdot1EvbConfigEvbTable_destroy(struct lldpXdot1EvbConfigEvbTable_data **);
int lldpXdot1EvbConfigEvbTable_add(struct lldpXdot1EvbConfigEvbTable_data *);
int lldpXdot1EvbConfigEvbTable_del(struct lldpXdot1EvbConfigEvbTable_data *);
void parse_lldpXdot1EvbConfigEvbTable(const char *, char *);
SNMPCallback store_lldpXdot1EvbConfigEvbTable;
void refresh_lldpXdot1EvbConfigEvbTable(int);
FindVarMethod var_lldpXdot1EvbConfigCdcpTable;
struct lldpXdot1EvbConfigCdcpTable_data *lldpXdot1EvbConfigCdcpTable_create(void);
struct lldpXdot1EvbConfigCdcpTable_data *lldpXdot1EvbConfigCdcpTable_duplicate(struct lldpXdot1EvbConfigCdcpTable_data *);
int lldpXdot1EvbConfigCdcpTable_destroy(struct lldpXdot1EvbConfigCdcpTable_data **);
int lldpXdot1EvbConfigCdcpTable_add(struct lldpXdot1EvbConfigCdcpTable_data *);
int lldpXdot1EvbConfigCdcpTable_del(struct lldpXdot1EvbConfigCdcpTable_data *);
void parse_lldpXdot1EvbConfigCdcpTable(const char *, char *);
SNMPCallback store_lldpXdot1EvbConfigCdcpTable;
void refresh_lldpXdot1EvbConfigCdcpTable(int);
FindVarMethod var_lldpV2Xdot1LocEvbTlvTable;
struct lldpV2Xdot1LocEvbTlvTable_data *lldpV2Xdot1LocEvbTlvTable_create(void);
struct lldpV2Xdot1LocEvbTlvTable_data *lldpV2Xdot1LocEvbTlvTable_duplicate(struct lldpV2Xdot1LocEvbTlvTable_data *);
int lldpV2Xdot1LocEvbTlvTable_destroy(struct lldpV2Xdot1LocEvbTlvTable_data **);
int lldpV2Xdot1LocEvbTlvTable_add(struct lldpV2Xdot1LocEvbTlvTable_data *);
int lldpV2Xdot1LocEvbTlvTable_del(struct lldpV2Xdot1LocEvbTlvTable_data *);
void parse_lldpV2Xdot1LocEvbTlvTable(const char *, char *);
SNMPCallback store_lldpV2Xdot1LocEvbTlvTable;
void refresh_lldpV2Xdot1LocEvbTlvTable(int);
FindVarMethod var_lldpV2Xdot1LocCdcpTlvTable;
struct lldpV2Xdot1LocCdcpTlvTable_data *lldpV2Xdot1LocCdcpTlvTable_create(void);
struct lldpV2Xdot1LocCdcpTlvTable_data *lldpV2Xdot1LocCdcpTlvTable_duplicate(struct lldpV2Xdot1LocCdcpTlvTable_data *);
int lldpV2Xdot1LocCdcpTlvTable_destroy(struct lldpV2Xdot1LocCdcpTlvTable_data **);
int lldpV2Xdot1LocCdcpTlvTable_add(struct lldpV2Xdot1LocCdcpTlvTable_data *);
int lldpV2Xdot1LocCdcpTlvTable_del(struct lldpV2Xdot1LocCdcpTlvTable_data *);
void parse_lldpV2Xdot1LocCdcpTlvTable(const char *, char *);
SNMPCallback store_lldpV2Xdot1LocCdcpTlvTable;
void refresh_lldpV2Xdot1LocCdcpTlvTable(int);
FindVarMethod var_lldpV2Xdot1RemEvbTlvTable;
struct lldpV2Xdot1RemEvbTlvTable_data *lldpV2Xdot1RemEvbTlvTable_create(void);
struct lldpV2Xdot1RemEvbTlvTable_data *lldpV2Xdot1RemEvbTlvTable_duplicate(struct lldpV2Xdot1RemEvbTlvTable_data *);
int lldpV2Xdot1RemEvbTlvTable_destroy(struct lldpV2Xdot1RemEvbTlvTable_data **);
int lldpV2Xdot1RemEvbTlvTable_add(struct lldpV2Xdot1RemEvbTlvTable_data *);
int lldpV2Xdot1RemEvbTlvTable_del(struct lldpV2Xdot1RemEvbTlvTable_data *);
void parse_lldpV2Xdot1RemEvbTlvTable(const char *, char *);
SNMPCallback store_lldpV2Xdot1RemEvbTlvTable;
void refresh_lldpV2Xdot1RemEvbTlvTable(int);
FindVarMethod var_lldpV2Xdot1RemCdcpTlvTable;
struct lldpV2Xdot1RemCdcpTlvTable_data *lldpV2Xdot1RemCdcpTlvTable_create(void);
struct lldpV2Xdot1RemCdcpTlvTable_data *lldpV2Xdot1RemCdcpTlvTable_duplicate(struct lldpV2Xdot1RemCdcpTlvTable_data *);
int lldpV2Xdot1RemCdcpTlvTable_destroy(struct lldpV2Xdot1RemCdcpTlvTable_data **);
int lldpV2Xdot1RemCdcpTlvTable_add(struct lldpV2Xdot1RemCdcpTlvTable_data *);
int lldpV2Xdot1RemCdcpTlvTable_del(struct lldpV2Xdot1RemCdcpTlvTable_data *);
void parse_lldpV2Xdot1RemCdcpTlvTable(const char *, char *);
SNMPCallback store_lldpV2Xdot1RemCdcpTlvTable;
void refresh_lldpV2Xdot1RemCdcpTlvTable(int);

WriteMethod write_lldpXdot1EvbConfigEvbTxEnable;
WriteMethod write_lldpXdot1EvbConfigCdcpTxEnable;
#endif				/* __LOCAL_LLDPXDOT1EVBEXTENSIONS_H__ */
