/*****************************************************************************

 @(#) src/snmp/ieee8021spanningtreemib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021SPANNINGTREEMIB_H__
#define __LOCAL_IEEE8021SPANNINGTREEMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021SpanningTreeMib_data {
	struct ieee8021SpanningTreeMib_data *ieee8021SpanningTreeMib_old;
	uint ieee8021SpanningTreeMib_rsvs;
	uint ieee8021SpanningTreeMib_tsts;
	uint ieee8021SpanningTreeMib_sets;
	uint ieee8021SpanningTreeMib_request;
};
struct ieee8021SpanningTreeTable_data {
	struct ieee8021SpanningTreeTable_data *ieee8021SpanningTreeTable_old;
	uint ieee8021SpanningTreeTable_rsvs;
	uint ieee8021SpanningTreeTable_tsts;
	uint ieee8021SpanningTreeTable_sets;
	uint ieee8021SpanningTreeTable_request;
	uint ieee8021SpanningTreeTable_refs;
	uint ieee8021SpanningTreeTable_id;
	ulong ieee8021SpanningTreeComponentId;	/* NoAccess */
	long ieee8021SpanningTreeProtocolSpecification;	/* ReadOnly */
	long ieee8021SpanningTreePriority;	/* ReadWrite */
	long ieee8021SpanningTreeTimeSinceTopologyChange;	/* ReadOnly */
	struct counter64 ieee8021SpanningTreeTopChanges;	/* ReadOnly */
	uint8_t *ieee8021SpanningTreeDesignatedRoot;	/* ReadOnly */
	size_t ieee8021SpanningTreeDesignatedRootLen;
	long ieee8021SpanningTreeRootCost;	/* ReadOnly */
	ulong ieee8021SpanningTreeRootPort;	/* ReadOnly */
	long ieee8021SpanningTreeMaxAge;	/* ReadOnly */
	long ieee8021SpanningTreeHelloTime;	/* ReadOnly */
	long ieee8021SpanningTreeHoldTime;	/* ReadOnly */
	long ieee8021SpanningTreeForwardDelay;	/* ReadWrite */
	long ieee8021SpanningTreeBridgeMaxAge;	/* ReadWrite */
	long ieee8021SpanningTreeBridgeHelloTime;	/* ReadWrite */
	long ieee8021SpanningTreeBridgeForwardDelay;	/* ReadWrite */
	long ieee8021SpanningTreeVersion;	/* ReadWrite */
	long ieee8021SpanningTreeRstpTxHoldCount;	/* ReadWrite */
};
struct ieee8021SpanningTreePortTable_data {
	struct ieee8021SpanningTreePortTable_data *ieee8021SpanningTreePortTable_old;
	uint ieee8021SpanningTreePortTable_rsvs;
	uint ieee8021SpanningTreePortTable_tsts;
	uint ieee8021SpanningTreePortTable_sets;
	uint ieee8021SpanningTreePortTable_request;
	uint ieee8021SpanningTreePortTable_refs;
	uint ieee8021SpanningTreePortTable_id;
	ulong ieee8021SpanningTreePortComponentId;	/* NoAccess */
	ulong ieee8021SpanningTreePort;	/* NoAccess */
	long ieee8021SpanningTreePortPriority;	/* ReadWrite */
	long ieee8021SpanningTreePortState;	/* ReadOnly */
	long ieee8021SpanningTreePortEnabled;	/* ReadWrite */
	long ieee8021SpanningTreePortPathCost;	/* ReadWrite */
	uint8_t *ieee8021SpanningTreePortDesignatedRoot;	/* ReadOnly */
	size_t ieee8021SpanningTreePortDesignatedRootLen;
	long ieee8021SpanningTreePortDesignatedCost;	/* ReadOnly */
	uint8_t *ieee8021SpanningTreePortDesignatedBridge;	/* ReadOnly */
	size_t ieee8021SpanningTreePortDesignatedBridgeLen;
	uint8_t *ieee8021SpanningTreePortDesignatedPort;	/* ReadOnly */
	size_t ieee8021SpanningTreePortDesignatedPortLen;
	struct counter64 ieee8021SpanningTreePortForwardTransitions;	/* ReadOnly */
	long ieee8021SpanningTreeRstpPortProtocolMigration;	/* ReadWrite */
	long ieee8021SpanningTreeRstpPortAdminEdgePort;	/* ReadWrite */
	long ieee8021SpanningTreeRstpPortOperEdgePort;	/* ReadOnly */
	long ieee8021SpanningTreeRstpPortAdminPathCost;	/* ReadWrite */
};
struct ieee8021SpanningTreePortExtensionTable_data {
	struct ieee8021SpanningTreePortExtensionTable_data *ieee8021SpanningTreePortExtensionTable_old;
	uint ieee8021SpanningTreePortExtensionTable_rsvs;
	uint ieee8021SpanningTreePortExtensionTable_tsts;
	uint ieee8021SpanningTreePortExtensionTable_sets;
	uint ieee8021SpanningTreePortExtensionTable_request;
	uint ieee8021SpanningTreePortExtensionTable_refs;
	uint ieee8021SpanningTreePortExtensionTable_id;
	ulong ieee8021SpanningTreePortComponentId;	/* NoAccess */
	ulong ieee8021SpanningTreePort;	/* NoAccess */
	long ieee8021SpanningTreeRstpPortAutoEdgePort;	/* ReadWrite */
	long ieee8021SpanningTreeRstpPortAutoIsolatePort;	/* ReadOnly */
	long ieee8021SpanningTreeRstpPortIsolatePort;	/* ReadOnly */
};

/* storage declarations */
extern struct ieee8021SpanningTreeMib_data *ieee8021SpanningTreeMibStorage;
extern struct header_complex_index *ieee8021SpanningTreeTableStorage;
extern struct header_complex_index *ieee8021SpanningTreePortTableStorage;
extern struct header_complex_index *ieee8021SpanningTreePortExtensionTableStorage;

/* enum definitions from the covered mib sections */

#define IEEE8021SPANNINGTREEPROTOCOLSPECIFICATION_UNKNOWN 1
#define IEEE8021SPANNINGTREEPROTOCOLSPECIFICATION_DECLB100 2
#define IEEE8021SPANNINGTREEPROTOCOLSPECIFICATION_IEEE8021D 3
#define IEEE8021SPANNINGTREEPROTOCOLSPECIFICATION_IEEE8021Q 4

#define IEEE8021SPANNINGTREEVERSION_STP          0
#define IEEE8021SPANNINGTREEVERSION_RSTP         2
#define IEEE8021SPANNINGTREEVERSION_MSTP         3

#define IEEE8021SPANNINGTREEPORTSTATE_DISABLED   1
#define IEEE8021SPANNINGTREEPORTSTATE_BLOCKING   2
#define IEEE8021SPANNINGTREEPORTSTATE_LISTENING  3
#define IEEE8021SPANNINGTREEPORTSTATE_LEARNING   4
#define IEEE8021SPANNINGTREEPORTSTATE_FORWARDING 5
#define IEEE8021SPANNINGTREEPORTSTATE_BROKEN     6

#define IEEE8021SPANNINGTREEPORTENABLED_TRUE     1
#define IEEE8021SPANNINGTREEPORTENABLED_FALSE    2

#define IEEE8021SPANNINGTREERSTPPORTPROTOCOLMIGRATION_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTPROTOCOLMIGRATION_FALSE 2

#define IEEE8021SPANNINGTREERSTPPORTADMINEDGEPORT_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTADMINEDGEPORT_FALSE 2

#define IEEE8021SPANNINGTREERSTPPORTOPEREDGEPORT_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTOPEREDGEPORT_FALSE 2

#define IEEE8021SPANNINGTREERSTPPORTAUTOEDGEPORT_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTAUTOEDGEPORT_FALSE 2

#define IEEE8021SPANNINGTREERSTPPORTAUTOISOLATEPORT_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTAUTOISOLATEPORT_FALSE 2

#define IEEE8021SPANNINGTREERSTPPORTISOLATEPORT_TRUE 1
#define IEEE8021SPANNINGTREERSTPPORTISOLATEPORT_FALSE 2

/* notifications */
extern oid ieee8021SpanningTreeNewRoot_oid[10];
extern oid ieee8021SpanningTreeTopologyChange_oid[10];

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021SpanningTreeCompliance_oid[11];
extern oid ieee8021SpanningTreeRstpCompliance_oid[11];
extern oid ieee8021SpanningTreeGroup_oid[11];
extern oid ieee8021SpanningTreeRstpGroup_oid[11];
extern oid ieee8021SpanningTreePortGroup_oid[11];
extern oid ieee8021SpanningTreeRstpPortGroup_oid[11];
extern oid ieee8021SpanningTreeNotificationGroup_oid[11];
extern oid ieee8021SpanningTreeRstpFragileGroup_oid[11];

/* function prototypes */
/* trap function prototypes */
extern void send_ieee8021SpanningTreeNewRoot_v2trap(struct variable_list *);
extern void send_ieee8021SpanningTreeTopologyChange_v2trap(struct variable_list *);

/* variable function prototypes */
void init_ieee8021SpanningTreeMib(void);
void deinit_ieee8021SpanningTreeMib(void);
int term_ieee8021SpanningTreeMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021SpanningTreeMib;
struct ieee8021SpanningTreeMib_data *ieee8021SpanningTreeMib_create(void);
struct ieee8021SpanningTreeMib_data *ieee8021SpanningTreeMib_duplicate(struct ieee8021SpanningTreeMib_data *);
int ieee8021SpanningTreeMib_destroy(struct ieee8021SpanningTreeMib_data **);
int ieee8021SpanningTreeMib_add(struct ieee8021SpanningTreeMib_data *);
void parse_ieee8021SpanningTreeMib(const char *, char *);
SNMPCallback store_ieee8021SpanningTreeMib;
void refresh_ieee8021SpanningTreeMib(int);
FindVarMethod var_ieee8021SpanningTreeTable;
struct ieee8021SpanningTreeTable_data *ieee8021SpanningTreeTable_create(void);
struct ieee8021SpanningTreeTable_data *ieee8021SpanningTreeTable_duplicate(struct ieee8021SpanningTreeTable_data *);
int ieee8021SpanningTreeTable_destroy(struct ieee8021SpanningTreeTable_data **);
int ieee8021SpanningTreeTable_add(struct ieee8021SpanningTreeTable_data *);
int ieee8021SpanningTreeTable_del(struct ieee8021SpanningTreeTable_data *);
void parse_ieee8021SpanningTreeTable(const char *, char *);
SNMPCallback store_ieee8021SpanningTreeTable;
void refresh_ieee8021SpanningTreeTable(int);
FindVarMethod var_ieee8021SpanningTreePortTable;
struct ieee8021SpanningTreePortTable_data *ieee8021SpanningTreePortTable_create(void);
struct ieee8021SpanningTreePortTable_data *ieee8021SpanningTreePortTable_duplicate(struct ieee8021SpanningTreePortTable_data *);
int ieee8021SpanningTreePortTable_destroy(struct ieee8021SpanningTreePortTable_data **);
int ieee8021SpanningTreePortTable_add(struct ieee8021SpanningTreePortTable_data *);
int ieee8021SpanningTreePortTable_del(struct ieee8021SpanningTreePortTable_data *);
void parse_ieee8021SpanningTreePortTable(const char *, char *);
SNMPCallback store_ieee8021SpanningTreePortTable;
void refresh_ieee8021SpanningTreePortTable(int);
FindVarMethod var_ieee8021SpanningTreePortExtensionTable;
struct ieee8021SpanningTreePortExtensionTable_data *ieee8021SpanningTreePortExtensionTable_create(void);
struct ieee8021SpanningTreePortExtensionTable_data *ieee8021SpanningTreePortExtensionTable_duplicate(struct ieee8021SpanningTreePortExtensionTable_data *);
int ieee8021SpanningTreePortExtensionTable_destroy(struct ieee8021SpanningTreePortExtensionTable_data **);
int ieee8021SpanningTreePortExtensionTable_add(struct ieee8021SpanningTreePortExtensionTable_data *);
int ieee8021SpanningTreePortExtensionTable_del(struct ieee8021SpanningTreePortExtensionTable_data *);
void parse_ieee8021SpanningTreePortExtensionTable(const char *, char *);
SNMPCallback store_ieee8021SpanningTreePortExtensionTable;
void refresh_ieee8021SpanningTreePortExtensionTable(int);

WriteMethod write_ieee8021SpanningTreePriority;
WriteMethod write_ieee8021SpanningTreeForwardDelay;
WriteMethod write_ieee8021SpanningTreeBridgeMaxAge;
WriteMethod write_ieee8021SpanningTreeBridgeHelloTime;
WriteMethod write_ieee8021SpanningTreeBridgeForwardDelay;
WriteMethod write_ieee8021SpanningTreeVersion;
WriteMethod write_ieee8021SpanningTreeRstpTxHoldCount;
WriteMethod write_ieee8021SpanningTreePortPriority;
WriteMethod write_ieee8021SpanningTreePortEnabled;
WriteMethod write_ieee8021SpanningTreePortPathCost;
WriteMethod write_ieee8021SpanningTreeRstpPortProtocolMigration;
WriteMethod write_ieee8021SpanningTreeRstpPortAdminEdgePort;
WriteMethod write_ieee8021SpanningTreeRstpPortAdminPathCost;
WriteMethod write_ieee8021SpanningTreeRstpPortAutoEdgePort;
#endif				/* __LOCAL_IEEE8021SPANNINGTREEMIB_H__ */
