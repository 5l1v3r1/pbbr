/*****************************************************************************

 @(#) src/snmp/ieee8021bridgeevbmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021BRIDGEEVBMIB_H__
#define __LOCAL_IEEE8021BRIDGEEVBMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021BridgeEvbMib_data {
	struct ieee8021BridgeEvbMib_data *ieee8021BridgeEvbMib_old;
	uint ieee8021BridgeEvbMib_rsvs;
	uint ieee8021BridgeEvbMib_tsts;
	uint ieee8021BridgeEvbMib_sets;
	uint ieee8021BridgeEvbMib_request;
	long ieee8021BridgeEvbSysType;	/* ReadOnly */
	ulong ieee8021BridgeEvbSysNumExternalPorts;	/* ReadOnly */
	long ieee8021BridgeEvbSysEvbLldpTxEnable;	/* ReadWrite */
	long ieee8021BridgeEvbSysEvbLldpManual;	/* ReadWrite */
	long ieee8021BridgeEvbSysEvbLldpGidCapable;	/* ReadWrite */
	long ieee8021BridgeEvbSysEcpAckTimer;	/* ReadWrite */
	long ieee8021BridgeEvbSysEcpMaxRetries;	/* ReadWrite */
	long ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay;	/* ReadWrite */
	long ieee8021BridgeEvbSysVdpDfltReinitKeepAlive;	/* ReadWrite */
};
struct ieee8021BridgeEvbSbpTable_data {
	struct ieee8021BridgeEvbSbpTable_data *ieee8021BridgeEvbSbpTable_old;
	uint ieee8021BridgeEvbSbpTable_rsvs;
	uint ieee8021BridgeEvbSbpTable_tsts;
	uint ieee8021BridgeEvbSbpTable_sets;
	uint ieee8021BridgeEvbSbpTable_request;
	uint ieee8021BridgeEvbSbpTable_refs;
	uint ieee8021BridgeEvbSbpTable_id;
	ulong ieee8021BridgeEvbSbpComponentID;	/* NoAccess */
	ulong ieee8021BridgeEvbSbpPortNumber;	/* NoAccess */
	long ieee8021BridgeEvbSbpLldpManual;	/* ReadWrite */
	ulong ieee8021BridgeEvbSbpVdpOperRsrcWaitDelay;	/* ReadOnly */
	ulong ieee8021BridgeEvbSbpVdpOperReinitKeepAlive;	/* ReadOnly */
	ulong ieee8021BridgeEvbSbpVdpOperToutKeepAlive;	/* ReadOnly */
};
struct ieee8021BridgeEvbVSIDBTable_data {
	struct ieee8021BridgeEvbVSIDBTable_data *ieee8021BridgeEvbVSIDBTable_old;
	uint ieee8021BridgeEvbVSIDBTable_rsvs;
	uint ieee8021BridgeEvbVSIDBTable_tsts;
	uint ieee8021BridgeEvbVSIDBTable_sets;
	uint ieee8021BridgeEvbVSIDBTable_request;
	uint ieee8021BridgeEvbVSIDBTable_refs;
	uint ieee8021BridgeEvbVSIDBTable_id;
	ulong ieee8021BridgeEvbVSIComponentID;	/* NoAccess */
	ulong ieee8021BridgeEvbVSIPortNumber;	/* NoAccess */
	long ieee8021BridgeEvbVSIIDType;	/* NoAccess */
	uint8_t *ieee8021BridgeEvbVSIID;	/* NoAccess */
	size_t ieee8021BridgeEvbVSIIDLen;
	ulong ieee8021BridgeEvbVSITimeSinceCreate;	/* ReadOnly */
	long ieee8021BridgeEvbVsiVdpOperCmd;	/* ReadOnly */
	long ieee8021BridgeEvbVsiOperRevert;	/* ReadOnly */
	long ieee8021BridgeEvbVsiOperHard;	/* ReadOnly */
	uint8_t *ieee8021BridgeEvbVsiOperReason;	/* ReadOnly */
	size_t ieee8021BridgeEvbVsiOperReasonLen;
	uint8_t *ieee8021BridgeEvbVSIMgrID;	/* ReadOnly */
	size_t ieee8021BridgeEvbVSIMgrIDLen;
	long ieee8021BridgeEvbVSIType;	/* ReadOnly */
	uint8_t *ieee8021BridgeEvbVSITypeVersion;	/* ReadOnly */
	size_t ieee8021BridgeEvbVSITypeVersionLen;
	long ieee8021BridgeEvbVSIMvFormat;	/* ReadOnly */
	long ieee8021BridgeEvbVSINumMACs;	/* ReadOnly */
	long ieee8021BridgeEvbVDPMachineState;	/* ReadOnly */
	long ieee8021BridgeEvbVDPCommandsSucceeded;	/* ReadOnly */
	long ieee8021BridgeEvbVDPCommandsFailed;	/* ReadOnly */
	long ieee8021BridgeEvbVDPCommandReverts;	/* ReadOnly */
	long ieee8021BridgeEvbVDPCounterDiscontinuity;	/* ReadOnly */
};
struct ieee8021BridgeEvbVSIDBMacTable_data {
	struct ieee8021BridgeEvbVSIDBMacTable_data *ieee8021BridgeEvbVSIDBMacTable_old;
	uint ieee8021BridgeEvbVSIDBMacTable_rsvs;
	uint ieee8021BridgeEvbVSIDBMacTable_tsts;
	uint ieee8021BridgeEvbVSIDBMacTable_sets;
	uint ieee8021BridgeEvbVSIDBMacTable_request;
	uint ieee8021BridgeEvbVSIDBMacTable_refs;
	uint ieee8021BridgeEvbVSIDBMacTable_id;
	ulong ieee8021BridgeEvbVSIComponentID;	/* NoAccess */
	ulong ieee8021BridgeEvbVSIPortNumber;	/* NoAccess */
	long ieee8021BridgeEvbVSIIDType;	/* NoAccess */
	uint8_t *ieee8021BridgeEvbVSIID;	/* NoAccess */
	size_t ieee8021BridgeEvbVSIIDLen;
	ulong ieee8021BridgeEvbGroupID;	/* NoAccess */
	uint8_t *ieee8021BridgeEvbVSIMac;	/* NoAccess */
	size_t ieee8021BridgeEvbVSIMacLen;
	ulong ieee8021BridgeEvbVSIVlanId;	/* ReadOnly */
};
struct ieee8021BridgeEvbUAPConfigTable_data {
	struct ieee8021BridgeEvbUAPConfigTable_data *ieee8021BridgeEvbUAPConfigTable_old;
	uint ieee8021BridgeEvbUAPConfigTable_rsvs;
	uint ieee8021BridgeEvbUAPConfigTable_tsts;
	uint ieee8021BridgeEvbUAPConfigTable_sets;
	uint ieee8021BridgeEvbUAPConfigTable_request;
	uint ieee8021BridgeEvbUAPConfigTable_refs;
	uint ieee8021BridgeEvbUAPConfigTable_id;
	ulong ieee8021BridgePhyPort;	/* NoAccess */
	ulong ieee8021BridgeEvbUAPComponentId;	/* ReadOnly */
	ulong ieee8021BridgeEvbUAPPort;	/* ReadOnly */
	long ieee8021BridgeEvbUapConfigIfIndex;	/* ReadOnly */
	long ieee8021BridgeEvbUAPSchCdcpAdminEnable;	/* Create */
	long ieee8021BridgeEvbUAPSchAdminCDCPRole;	/* Create */
	long ieee8021BridgeEvbUAPSchAdminCDCPChanCap;	/* Create */
	long ieee8021BridgeEvbUAPSchOperCDCPChanCap;	/* ReadOnly */
	ulong ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow;	/* Create */
	ulong ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh;	/* Create */
	long ieee8021BridgeEvbUAPSchOperState;	/* ReadOnly */
	long ieee8021BridgeEvbSchCdcpRemoteEnabled;	/* ReadOnly */
	long ieee8021BridgeEvbSchCdcpRemoteRole;	/* ReadOnly */
	long ieee8021BridgeEvbUAPConfigStorageType;	/* Create */
	long ieee8021BridgeEvbUAPConfigRowStatus;	/* Create */
};
struct ieee8021BridgeEvbCAPConfigTable_data {
	struct ieee8021BridgeEvbCAPConfigTable_data *ieee8021BridgeEvbCAPConfigTable_old;
	uint ieee8021BridgeEvbCAPConfigTable_rsvs;
	uint ieee8021BridgeEvbCAPConfigTable_tsts;
	uint ieee8021BridgeEvbCAPConfigTable_sets;
	uint ieee8021BridgeEvbCAPConfigTable_request;
	uint ieee8021BridgeEvbCAPConfigTable_refs;
	uint ieee8021BridgeEvbCAPConfigTable_id;
	ulong ieee8021BridgePhyPort;	/* NoAccess */
	ulong ieee8021BridgeEvbSchID;	/* NoAccess */
	ulong ieee8021BridgeEvbCAPComponentId;	/* ReadOnly */
	long ieee8021BridgeEvbCapConfigIfIndex;	/* ReadOnly */
	ulong ieee8021BridgeEvbCAPPort;	/* ReadOnly */
	ulong ieee8021BridgeEvbCAPSChannelID;	/* ReadOnly */
	ulong ieee8021BridgeEvbCAPAssociateSBPOrURPCompID;	/* Create */
	ulong ieee8021BridgeEvbCAPAssociateSBPOrURPPort;	/* Create */
	long ieee8021BridgeEvbCAPRowStatus;	/* Create */
};
struct ieee8021BridgeEvbURPTable_data {
	struct ieee8021BridgeEvbURPTable_data *ieee8021BridgeEvbURPTable_old;
	uint ieee8021BridgeEvbURPTable_rsvs;
	uint ieee8021BridgeEvbURPTable_tsts;
	uint ieee8021BridgeEvbURPTable_sets;
	uint ieee8021BridgeEvbURPTable_request;
	uint ieee8021BridgeEvbURPTable_refs;
	uint ieee8021BridgeEvbURPTable_id;
	ulong ieee8021BridgeEvbURPComponentId;	/* NoAccess */
	ulong ieee8021BridgeEvbURPPort;	/* NoAccess */
	long ieee8021BridgeEvbURPIfIndex;	/* ReadWrite */
	ulong ieee8021BridgeEvbURPBindToISSPort;	/* ReadWrite */
	long ieee8021BridgeEvbURPLldpManual;	/* ReadWrite */
	ulong ieee8021BridgeEvbURPVdpOperRsrcWaitDelay;	/* ReadOnly */
	ulong ieee8021BridgeEvbURPVdpOperRespWaitDelay;	/* ReadWrite */
	ulong ieee8021BridgeEvbURPVdpOperReinitKeepAlive;	/* ReadWrite */
};
struct ieee8021BridgeEvbEcpTable_data {
	struct ieee8021BridgeEvbEcpTable_data *ieee8021BridgeEvbEcpTable_old;
	uint ieee8021BridgeEvbEcpTable_rsvs;
	uint ieee8021BridgeEvbEcpTable_tsts;
	uint ieee8021BridgeEvbEcpTable_sets;
	uint ieee8021BridgeEvbEcpTable_request;
	uint ieee8021BridgeEvbEcpTable_refs;
	uint ieee8021BridgeEvbEcpTable_id;
	ulong ieee8021BridgeEvbEcpComponentId;	/* NoAccess */
	ulong ieee8021BridgeEvbEcpPort;	/* NoAccess */
	ulong ieee8021BridgeEvbEcpOperAckTimerInit;	/* ReadOnly */
	ulong ieee8021BridgeEvbEcpOperMaxRetries;	/* ReadOnly */
	long ieee8021BridgeEvbEcpTxFrameCount;	/* ReadOnly */
	long ieee8021BridgeEvbEcpTxRetryCount;	/* ReadOnly */
	long ieee8021BridgeEvbEcpTxFailures;	/* ReadOnly */
	long ieee8021BridgeEvbEcpRxFrameCount;	/* ReadOnly */
};

/* storage declarations */
extern struct ieee8021BridgeEvbMib_data *ieee8021BridgeEvbMibStorage;
extern struct header_complex_index *ieee8021BridgeEvbSbpTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbVSIDBTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbVSIDBMacTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbUAPConfigTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbCAPConfigTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbURPTableStorage;
extern struct header_complex_index *ieee8021BridgeEvbEcpTableStorage;

/* enum definitions from the covered mib sections */
#define IEEE8021BRIDGEEVBSYSTYPE_EVBBRIDGE       1
#define IEEE8021BRIDGEEVBSYSTYPE_EVBSTATION      2

#define IEEE8021BRIDGEEVBSYSEVBLLDPTXENABLE_TRUE 1
#define IEEE8021BRIDGEEVBSYSEVBLLDPTXENABLE_FALSE 2

#define IEEE8021BRIDGEEVBSYSEVBLLDPMANUAL_TRUE   1
#define IEEE8021BRIDGEEVBSYSEVBLLDPMANUAL_FALSE  2

#define IEEE8021BRIDGEEVBSYSEVBLLDPGIDCAPABLE_TRUE 1
#define IEEE8021BRIDGEEVBSYSEVBLLDPGIDCAPABLE_FALSE 2

#define IEEE8021BRIDGEEVBSBPLLDPMANUAL_TRUE      1
#define IEEE8021BRIDGEEVBSBPLLDPMANUAL_FALSE     2

#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDIPV4     1
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDIPV6     2
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDMAC      3
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDLOCAL    4
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDUUID     5

#define IEEE8021BRIDGEEVBVSIVDPOPERCMD_PREASSOCIATE 1
#define IEEE8021BRIDGEEVBVSIVDPOPERCMD_PREASSOCIATEWITHRSRCRESERVATION 2
#define IEEE8021BRIDGEEVBVSIVDPOPERCMD_ASSOCIATE 3
#define IEEE8021BRIDGEEVBVSIVDPOPERCMD_DEASSOCIATE 4

#define IEEE8021BRIDGEEVBVSIOPERREVERT_TRUE      1
#define IEEE8021BRIDGEEVBVSIOPERREVERT_FALSE     2

#define IEEE8021BRIDGEEVBVSIOPERHARD_TRUE        1
#define IEEE8021BRIDGEEVBVSIOPERHARD_FALSE       2

#define IEEE8021BRIDGEEVBVSIOPERREASON_SUCCESS   0
#define IEEE8021BRIDGEEVBVSIOPERREASON_INVALIDFORMAT 1
#define IEEE8021BRIDGEEVBVSIOPERREASON_INSUFFICIENTRESOURCES 2
#define IEEE8021BRIDGEEVBVSIOPERREASON_OTHERFAILURE 3

#define IEEE8021BRIDGEEVBVSIMVFORMAT_BASIC       1
#define IEEE8021BRIDGEEVBVSIMVFORMAT_PARTIAL     2
#define IEEE8021BRIDGEEVBVSIMVFORMAT_VLANONLY    3

#define IEEE8021BRIDGEEVBVDPMACHINESTATE_PREASSOCIATE 1
#define IEEE8021BRIDGEEVBVDPMACHINESTATE_PREASSOCIATEWITHRSRCRESERVATION 2
#define IEEE8021BRIDGEEVBVDPMACHINESTATE_ASSOCIATE 3
#define IEEE8021BRIDGEEVBVDPMACHINESTATE_DEASSOCIATE 4

#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDIPV4     1
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDIPV6     2
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDMAC      3
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDLOCAL    4
#define IEEE8021BRIDGEEVBVSIIDTYPE_VSIIDUUID     5

#define IEEE8021BRIDGEEVBUAPSCHCDCPADMINENABLE_ENABLE 1
#define IEEE8021BRIDGEEVBUAPSCHCDCPADMINENABLE_DISABLE 2

#define IEEE8021BRIDGEEVBUAPSCHADMINCDCPROLE_CDCPROLEB 1
#define IEEE8021BRIDGEEVBUAPSCHADMINCDCPROLE_CDCPROLES 2

#define IEEE8021BRIDGEEVBUAPSCHOPERSTATE_RUNNING 1
#define IEEE8021BRIDGEEVBUAPSCHOPERSTATE_NOTRUNNING 2

#define IEEE8021BRIDGEEVBSCHCDCPREMOTEENABLED_ENABLE 1
#define IEEE8021BRIDGEEVBSCHCDCPREMOTEENABLED_DISABLE 2

#define IEEE8021BRIDGEEVBSCHCDCPREMOTEROLE_CDCPROLEB 1
#define IEEE8021BRIDGEEVBSCHCDCPREMOTEROLE_CDCPROLES 2

#define IEEE8021BRIDGEEVBURPLLDPMANUAL_TRUE      1
#define IEEE8021BRIDGEEVBURPLLDPMANUAL_FALSE     2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021BridgeEvbSysGroup_oid[11];
extern oid ieee8021BridgeEvbSbpGroup_oid[11];
extern oid ieee8021BridgeEvbVSIDBGroup_oid[11];
extern oid ieee8021BridgeEvbUAPGroup_oid[11];
extern oid ieee8021BridgeEvbCAPConfigGroup_oid[11];
extern oid ieee8021BridgeEvbsURPGroup_oid[11];
extern oid ieee8021BridgeEvbEcpGroup_oid[11];
extern oid ieee8021BridgeEvbbCompliance_oid[11];
extern oid ieee8021BridgeEvbsCompliance_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ieee8021BridgeEvbMib(void);
void deinit_ieee8021BridgeEvbMib(void);
int term_ieee8021BridgeEvbMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021BridgeEvbMib;
struct ieee8021BridgeEvbMib_data *ieee8021BridgeEvbMib_create(void);
struct ieee8021BridgeEvbMib_data *ieee8021BridgeEvbMib_duplicate(struct ieee8021BridgeEvbMib_data *);
int ieee8021BridgeEvbMib_destroy(struct ieee8021BridgeEvbMib_data **);
int ieee8021BridgeEvbMib_add(struct ieee8021BridgeEvbMib_data *);
void parse_ieee8021BridgeEvbMib(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbMib;
void refresh_ieee8021BridgeEvbMib(int);
FindVarMethod var_ieee8021BridgeEvbSbpTable;
struct ieee8021BridgeEvbSbpTable_data *ieee8021BridgeEvbSbpTable_create(void);
struct ieee8021BridgeEvbSbpTable_data *ieee8021BridgeEvbSbpTable_duplicate(struct ieee8021BridgeEvbSbpTable_data *);
int ieee8021BridgeEvbSbpTable_destroy(struct ieee8021BridgeEvbSbpTable_data **);
int ieee8021BridgeEvbSbpTable_add(struct ieee8021BridgeEvbSbpTable_data *);
int ieee8021BridgeEvbSbpTable_del(struct ieee8021BridgeEvbSbpTable_data *);
void parse_ieee8021BridgeEvbSbpTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbSbpTable;
void refresh_ieee8021BridgeEvbSbpTable(int);
FindVarMethod var_ieee8021BridgeEvbVSIDBTable;
struct ieee8021BridgeEvbVSIDBTable_data *ieee8021BridgeEvbVSIDBTable_create(void);
struct ieee8021BridgeEvbVSIDBTable_data *ieee8021BridgeEvbVSIDBTable_duplicate(struct ieee8021BridgeEvbVSIDBTable_data *);
int ieee8021BridgeEvbVSIDBTable_destroy(struct ieee8021BridgeEvbVSIDBTable_data **);
int ieee8021BridgeEvbVSIDBTable_add(struct ieee8021BridgeEvbVSIDBTable_data *);
int ieee8021BridgeEvbVSIDBTable_del(struct ieee8021BridgeEvbVSIDBTable_data *);
void parse_ieee8021BridgeEvbVSIDBTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbVSIDBTable;
void refresh_ieee8021BridgeEvbVSIDBTable(int);
FindVarMethod var_ieee8021BridgeEvbVSIDBMacTable;
struct ieee8021BridgeEvbVSIDBMacTable_data *ieee8021BridgeEvbVSIDBMacTable_create(void);
struct ieee8021BridgeEvbVSIDBMacTable_data *ieee8021BridgeEvbVSIDBMacTable_duplicate(struct ieee8021BridgeEvbVSIDBMacTable_data *);
int ieee8021BridgeEvbVSIDBMacTable_destroy(struct ieee8021BridgeEvbVSIDBMacTable_data **);
int ieee8021BridgeEvbVSIDBMacTable_add(struct ieee8021BridgeEvbVSIDBMacTable_data *);
int ieee8021BridgeEvbVSIDBMacTable_del(struct ieee8021BridgeEvbVSIDBMacTable_data *);
void parse_ieee8021BridgeEvbVSIDBMacTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbVSIDBMacTable;
void refresh_ieee8021BridgeEvbVSIDBMacTable(int);
FindVarMethod var_ieee8021BridgeEvbUAPConfigTable;
struct ieee8021BridgeEvbUAPConfigTable_data *ieee8021BridgeEvbUAPConfigTable_create(void);
struct ieee8021BridgeEvbUAPConfigTable_data *ieee8021BridgeEvbUAPConfigTable_duplicate(struct ieee8021BridgeEvbUAPConfigTable_data *);
int ieee8021BridgeEvbUAPConfigTable_destroy(struct ieee8021BridgeEvbUAPConfigTable_data **);
int ieee8021BridgeEvbUAPConfigTable_add(struct ieee8021BridgeEvbUAPConfigTable_data *);
int ieee8021BridgeEvbUAPConfigTable_del(struct ieee8021BridgeEvbUAPConfigTable_data *);
void parse_ieee8021BridgeEvbUAPConfigTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbUAPConfigTable;
void refresh_ieee8021BridgeEvbUAPConfigTable(int);
FindVarMethod var_ieee8021BridgeEvbCAPConfigTable;
struct ieee8021BridgeEvbCAPConfigTable_data *ieee8021BridgeEvbCAPConfigTable_create(void);
struct ieee8021BridgeEvbCAPConfigTable_data *ieee8021BridgeEvbCAPConfigTable_duplicate(struct ieee8021BridgeEvbCAPConfigTable_data *);
int ieee8021BridgeEvbCAPConfigTable_destroy(struct ieee8021BridgeEvbCAPConfigTable_data **);
int ieee8021BridgeEvbCAPConfigTable_add(struct ieee8021BridgeEvbCAPConfigTable_data *);
int ieee8021BridgeEvbCAPConfigTable_del(struct ieee8021BridgeEvbCAPConfigTable_data *);
void parse_ieee8021BridgeEvbCAPConfigTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbCAPConfigTable;
void refresh_ieee8021BridgeEvbCAPConfigTable(int);
FindVarMethod var_ieee8021BridgeEvbURPTable;
struct ieee8021BridgeEvbURPTable_data *ieee8021BridgeEvbURPTable_create(void);
struct ieee8021BridgeEvbURPTable_data *ieee8021BridgeEvbURPTable_duplicate(struct ieee8021BridgeEvbURPTable_data *);
int ieee8021BridgeEvbURPTable_destroy(struct ieee8021BridgeEvbURPTable_data **);
int ieee8021BridgeEvbURPTable_add(struct ieee8021BridgeEvbURPTable_data *);
int ieee8021BridgeEvbURPTable_del(struct ieee8021BridgeEvbURPTable_data *);
void parse_ieee8021BridgeEvbURPTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbURPTable;
void refresh_ieee8021BridgeEvbURPTable(int);
FindVarMethod var_ieee8021BridgeEvbEcpTable;
struct ieee8021BridgeEvbEcpTable_data *ieee8021BridgeEvbEcpTable_create(void);
struct ieee8021BridgeEvbEcpTable_data *ieee8021BridgeEvbEcpTable_duplicate(struct ieee8021BridgeEvbEcpTable_data *);
int ieee8021BridgeEvbEcpTable_destroy(struct ieee8021BridgeEvbEcpTable_data **);
int ieee8021BridgeEvbEcpTable_add(struct ieee8021BridgeEvbEcpTable_data *);
int ieee8021BridgeEvbEcpTable_del(struct ieee8021BridgeEvbEcpTable_data *);
void parse_ieee8021BridgeEvbEcpTable(const char *, char *);
SNMPCallback store_ieee8021BridgeEvbEcpTable;
void refresh_ieee8021BridgeEvbEcpTable(int);

WriteMethod write_ieee8021BridgeEvbSysEvbLldpTxEnable;
WriteMethod write_ieee8021BridgeEvbSysEvbLldpManual;
WriteMethod write_ieee8021BridgeEvbSysEvbLldpGidCapable;
WriteMethod write_ieee8021BridgeEvbSysEcpAckTimer;
WriteMethod write_ieee8021BridgeEvbSysEcpMaxRetries;
WriteMethod write_ieee8021BridgeEvbSysVdpDfltRsrcWaitDelay;
WriteMethod write_ieee8021BridgeEvbSysVdpDfltReinitKeepAlive;
WriteMethod write_ieee8021BridgeEvbSbpLldpManual;
WriteMethod write_ieee8021BridgeEvbUAPSchCdcpAdminEnable;
WriteMethod write_ieee8021BridgeEvbUAPSchAdminCDCPRole;
WriteMethod write_ieee8021BridgeEvbUAPSchAdminCDCPChanCap;
WriteMethod write_ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolLow;
WriteMethod write_ieee8021BridgeEvbUAPSchAdminCDCPSVIDPoolHigh;
WriteMethod write_ieee8021BridgeEvbUAPConfigStorageType;
WriteMethod write_ieee8021BridgeEvbUAPConfigRowStatus;
WriteMethod write_ieee8021BridgeEvbCAPAssociateSBPOrURPCompID;
WriteMethod write_ieee8021BridgeEvbCAPAssociateSBPOrURPPort;
WriteMethod write_ieee8021BridgeEvbCAPRowStatus;
WriteMethod write_ieee8021BridgeEvbURPIfIndex;
WriteMethod write_ieee8021BridgeEvbURPBindToISSPort;
WriteMethod write_ieee8021BridgeEvbURPLldpManual;
WriteMethod write_ieee8021BridgeEvbURPVdpOperRespWaitDelay;
WriteMethod write_ieee8021BridgeEvbURPVdpOperReinitKeepAlive;
#endif				/* __LOCAL_IEEE8021BRIDGEEVBMIB_H__ */
