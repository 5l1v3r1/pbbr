/*****************************************************************************

 @(#) src/snmp/lldpxmedmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_LLDPXMEDMIB_H__
#define __LOCAL_LLDPXMEDMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct lldpXMedMIB_data {
	struct lldpXMedMIB_data *lldpXMedMIB_old;
	uint lldpXMedMIB_rsvs;
	uint lldpXMedMIB_tsts;
	uint lldpXMedMIB_sets;
	uint lldpXMedMIB_request;
	long lldpXMedLocDeviceClass;	/* ReadOnly */
	ulong lldpXMedFastStartRepeatCount;	/* ReadWrite */
	uint8_t *lldpXMedLocHardwareRev;	/* ReadOnly */
	size_t lldpXMedLocHardwareRevLen;
	uint8_t *lldpXMedLocFirmwareRev;	/* ReadOnly */
	size_t lldpXMedLocFirmwareRevLen;
	uint8_t *lldpXMedLocSoftwareRev;	/* ReadOnly */
	size_t lldpXMedLocSoftwareRevLen;
	uint8_t *lldpXMedLocSerialNum;	/* ReadOnly */
	size_t lldpXMedLocSerialNumLen;
	uint8_t *lldpXMedLocMfgName;	/* ReadOnly */
	size_t lldpXMedLocMfgNameLen;
	uint8_t *lldpXMedLocModelName;	/* ReadOnly */
	size_t lldpXMedLocModelNameLen;
	uint8_t *lldpXMedLocAssetID;	/* ReadOnly */
	size_t lldpXMedLocAssetIDLen;
	long lldpXMedLocXPoEDeviceType;	/* ReadOnly */
	long lldpXMedLocXPoEPSEPowerSource;	/* ReadOnly */
	long lldpXMedLocXPoEPDPowerReq;	/* ReadOnly */
	long lldpXMedLocXPoEPDPowerSource;	/* ReadOnly */
	long lldpXMedLocXPoEPDPowerPriority;	/* ReadOnly */
};
struct lldpXMedPortConfigTable_data {
	struct lldpXMedPortConfigTable_data *lldpXMedPortConfigTable_old;
	uint lldpXMedPortConfigTable_rsvs;
	uint lldpXMedPortConfigTable_tsts;
	uint lldpXMedPortConfigTable_sets;
	uint lldpXMedPortConfigTable_request;
	uint lldpXMedPortConfigTable_refs;
	uint lldpXMedPortConfigTable_id;
	long lldpPortConfigPortNum;	/* NoAccess */
	uint8_t *lldpXMedPortCapSupported;	/* ReadOnly */
	size_t lldpXMedPortCapSupportedLen;
	uint8_t *lldpXMedPortConfigTLVsTxEnable;	/* ReadWrite */
	size_t lldpXMedPortConfigTLVsTxEnableLen;
	long lldpXMedPortConfigNotifEnable;	/* ReadWrite */
};
struct lldpXMedLocMediaPolicyTable_data {
	struct lldpXMedLocMediaPolicyTable_data *lldpXMedLocMediaPolicyTable_old;
	uint lldpXMedLocMediaPolicyTable_rsvs;
	uint lldpXMedLocMediaPolicyTable_tsts;
	uint lldpXMedLocMediaPolicyTable_sets;
	uint lldpXMedLocMediaPolicyTable_request;
	uint lldpXMedLocMediaPolicyTable_refs;
	uint lldpXMedLocMediaPolicyTable_id;
	long lldpLocPortNum;		/* NoAccess */
	uint8_t *lldpXMedLocMediaPolicyAppType;	/* NoAccess */
	size_t lldpXMedLocMediaPolicyAppTypeLen;
	long lldpXMedLocMediaPolicyVlanID;	/* ReadOnly */
	long lldpXMedLocMediaPolicyPriority;	/* ReadOnly */
	long lldpXMedLocMediaPolicyDscp;	/* ReadOnly */
	long lldpXMedLocMediaPolicyUnknown;	/* ReadOnly */
	long lldpXMedLocMediaPolicyTagged;	/* ReadOnly */
};
struct lldpXMedLocLocationTable_data {
	struct lldpXMedLocLocationTable_data *lldpXMedLocLocationTable_old;
	uint lldpXMedLocLocationTable_rsvs;
	uint lldpXMedLocLocationTable_tsts;
	uint lldpXMedLocLocationTable_sets;
	uint lldpXMedLocLocationTable_request;
	uint lldpXMedLocLocationTable_refs;
	uint lldpXMedLocLocationTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXMedLocLocationSubtype;	/* NoAccess */
	uint8_t *lldpXMedLocLocationInfo;	/* ReadWrite */
	size_t lldpXMedLocLocationInfoLen;
};
struct lldpXMedLocXPoEPSEPortTable_data {
	struct lldpXMedLocXPoEPSEPortTable_data *lldpXMedLocXPoEPSEPortTable_old;
	uint lldpXMedLocXPoEPSEPortTable_rsvs;
	uint lldpXMedLocXPoEPSEPortTable_tsts;
	uint lldpXMedLocXPoEPSEPortTable_sets;
	uint lldpXMedLocXPoEPSEPortTable_request;
	uint lldpXMedLocXPoEPSEPortTable_refs;
	uint lldpXMedLocXPoEPSEPortTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXMedLocXPoEPSEPortPowerAv;	/* ReadOnly */
	long lldpXMedLocXPoEPSEPortPDPriority;	/* ReadOnly */
};
struct lldpXMedRemCapabilitiesTable_data {
	struct lldpXMedRemCapabilitiesTable_data *lldpXMedRemCapabilitiesTable_old;
	uint lldpXMedRemCapabilitiesTable_rsvs;
	uint lldpXMedRemCapabilitiesTable_tsts;
	uint lldpXMedRemCapabilitiesTable_sets;
	uint lldpXMedRemCapabilitiesTable_request;
	uint lldpXMedRemCapabilitiesTable_refs;
	uint lldpXMedRemCapabilitiesTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	uint8_t *lldpXMedRemCapSupported;	/* ReadOnly */
	size_t lldpXMedRemCapSupportedLen;
	uint8_t *lldpXMedRemCapCurrent;	/* ReadOnly */
	size_t lldpXMedRemCapCurrentLen;
	long lldpXMedRemDeviceClass;	/* ReadOnly */
};
struct lldpXMedRemMediaPolicyTable_data {
	struct lldpXMedRemMediaPolicyTable_data *lldpXMedRemMediaPolicyTable_old;
	uint lldpXMedRemMediaPolicyTable_rsvs;
	uint lldpXMedRemMediaPolicyTable_tsts;
	uint lldpXMedRemMediaPolicyTable_sets;
	uint lldpXMedRemMediaPolicyTable_request;
	uint lldpXMedRemMediaPolicyTable_refs;
	uint lldpXMedRemMediaPolicyTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	uint8_t *lldpXMedRemMediaPolicyAppType;	/* NoAccess */
	size_t lldpXMedRemMediaPolicyAppTypeLen;
	long lldpXMedRemMediaPolicyVlanID;	/* ReadOnly */
	long lldpXMedRemMediaPolicyPriority;	/* ReadOnly */
	long lldpXMedRemMediaPolicyDscp;	/* ReadOnly */
	long lldpXMedRemMediaPolicyUnknown;	/* ReadOnly */
	long lldpXMedRemMediaPolicyTagged;	/* ReadOnly */
};
struct lldpXMedRemInventoryTable_data {
	struct lldpXMedRemInventoryTable_data *lldpXMedRemInventoryTable_old;
	uint lldpXMedRemInventoryTable_rsvs;
	uint lldpXMedRemInventoryTable_tsts;
	uint lldpXMedRemInventoryTable_sets;
	uint lldpXMedRemInventoryTable_request;
	uint lldpXMedRemInventoryTable_refs;
	uint lldpXMedRemInventoryTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	uint8_t *lldpXMedRemHardwareRev;	/* ReadOnly */
	size_t lldpXMedRemHardwareRevLen;
	uint8_t *lldpXMedRemFirmwareRev;	/* ReadOnly */
	size_t lldpXMedRemFirmwareRevLen;
	uint8_t *lldpXMedRemSoftwareRev;	/* ReadOnly */
	size_t lldpXMedRemSoftwareRevLen;
	uint8_t *lldpXMedRemSerialNum;	/* ReadOnly */
	size_t lldpXMedRemSerialNumLen;
	uint8_t *lldpXMedRemMfgName;	/* ReadOnly */
	size_t lldpXMedRemMfgNameLen;
	uint8_t *lldpXMedRemModelName;	/* ReadOnly */
	size_t lldpXMedRemModelNameLen;
	uint8_t *lldpXMedRemAssetID;	/* ReadOnly */
	size_t lldpXMedRemAssetIDLen;
};
struct lldpXMedRemLocationTable_data {
	struct lldpXMedRemLocationTable_data *lldpXMedRemLocationTable_old;
	uint lldpXMedRemLocationTable_rsvs;
	uint lldpXMedRemLocationTable_tsts;
	uint lldpXMedRemLocationTable_sets;
	uint lldpXMedRemLocationTable_request;
	uint lldpXMedRemLocationTable_refs;
	uint lldpXMedRemLocationTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXMedRemLocationSubtype;	/* NoAccess */
	uint8_t *lldpXMedRemLocationInfo;	/* ReadOnly */
	size_t lldpXMedRemLocationInfoLen;
};
struct lldpXMedRemXPoETable_data {
	struct lldpXMedRemXPoETable_data *lldpXMedRemXPoETable_old;
	uint lldpXMedRemXPoETable_rsvs;
	uint lldpXMedRemXPoETable_tsts;
	uint lldpXMedRemXPoETable_sets;
	uint lldpXMedRemXPoETable_request;
	uint lldpXMedRemXPoETable_refs;
	uint lldpXMedRemXPoETable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXMedRemXPoEDeviceType;	/* ReadOnly */
};
struct lldpXMedRemXPoEPSETable_data {
	struct lldpXMedRemXPoEPSETable_data *lldpXMedRemXPoEPSETable_old;
	uint lldpXMedRemXPoEPSETable_rsvs;
	uint lldpXMedRemXPoEPSETable_tsts;
	uint lldpXMedRemXPoEPSETable_sets;
	uint lldpXMedRemXPoEPSETable_request;
	uint lldpXMedRemXPoEPSETable_refs;
	uint lldpXMedRemXPoEPSETable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXMedRemXPoEPSEPowerAv;	/* ReadOnly */
	long lldpXMedRemXPoEPSEPowerSource;	/* ReadOnly */
	long lldpXMedRemXPoEPSEPowerPriority;	/* ReadOnly */
};
struct lldpXMedRemXPoEPDTable_data {
	struct lldpXMedRemXPoEPDTable_data *lldpXMedRemXPoEPDTable_old;
	uint lldpXMedRemXPoEPDTable_rsvs;
	uint lldpXMedRemXPoEPDTable_tsts;
	uint lldpXMedRemXPoEPDTable_sets;
	uint lldpXMedRemXPoEPDTable_request;
	uint lldpXMedRemXPoEPDTable_refs;
	uint lldpXMedRemXPoEPDTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXMedRemXPoEPDPowerReq;	/* ReadOnly */
	long lldpXMedRemXPoEPDPowerSource;	/* ReadOnly */
	long lldpXMedRemXPoEPDPowerPriority;	/* ReadOnly */
};

/* storage declarations */
extern struct lldpXMedMIB_data *lldpXMedMIBStorage;
extern struct header_complex_index *lldpXMedPortConfigTableStorage;
extern struct header_complex_index *lldpXMedLocMediaPolicyTableStorage;
extern struct header_complex_index *lldpXMedLocLocationTableStorage;
extern struct header_complex_index *lldpXMedLocXPoEPSEPortTableStorage;
extern struct header_complex_index *lldpXMedRemCapabilitiesTableStorage;
extern struct header_complex_index *lldpXMedRemMediaPolicyTableStorage;
extern struct header_complex_index *lldpXMedRemInventoryTableStorage;
extern struct header_complex_index *lldpXMedRemLocationTableStorage;
extern struct header_complex_index *lldpXMedRemXPoETableStorage;
extern struct header_complex_index *lldpXMedRemXPoEPSETableStorage;
extern struct header_complex_index *lldpXMedRemXPoEPDTableStorage;

/* enum definitions from the covered mib sections */
#define LLDPXMEDLOCDEVICECLASS_NOTDEFINED        0
#define LLDPXMEDLOCDEVICECLASS_ENDPOINTCLASS1    1
#define LLDPXMEDLOCDEVICECLASS_ENDPOINTCLASS2    2
#define LLDPXMEDLOCDEVICECLASS_ENDPOINTCLASS3    3
#define LLDPXMEDLOCDEVICECLASS_NETWORKCONNECTIVITY 4

#define LLDPXMEDPORTCAPSUPPORTED_CAPABILITIES    0
#define LLDPXMEDPORTCAPSUPPORTED_NETWORKPOLICY   1
#define LLDPXMEDPORTCAPSUPPORTED_LOCATION        2
#define LLDPXMEDPORTCAPSUPPORTED_EXTENDEDPSE     3
#define LLDPXMEDPORTCAPSUPPORTED_EXTENDEDPD      4
#define LLDPXMEDPORTCAPSUPPORTED_INVENTORY       5

#define LLDPXMEDPORTCONFIGTLVSTXENABLE_CAPABILITIES 0
#define LLDPXMEDPORTCONFIGTLVSTXENABLE_NETWORKPOLICY 1
#define LLDPXMEDPORTCONFIGTLVSTXENABLE_LOCATION  2
#define LLDPXMEDPORTCONFIGTLVSTXENABLE_EXTENDEDPSE 3
#define LLDPXMEDPORTCONFIGTLVSTXENABLE_EXTENDEDPD 4
#define LLDPXMEDPORTCONFIGTLVSTXENABLE_INVENTORY 5

#define LLDPXMEDPORTCONFIGNOTIFENABLE_TRUE       1
#define LLDPXMEDPORTCONFIGNOTIFENABLE_FALSE      2

#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_UNKNOWN    0
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_VOICE      1
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_VOICESIGNALING 2
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_GUESTVOICE 3
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_GUESTVOICESIGNALING 4
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_SOFTPHONEVOICE 5
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_VIDEOCONFERENCING 6
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_STREAMINGVIDEO 7
#define LLDPXMEDLOCMEDIAPOLICYAPPTYPE_VIDEOSIGNALING 8

#define LLDPXMEDLOCMEDIAPOLICYUNKNOWN_TRUE       1
#define LLDPXMEDLOCMEDIAPOLICYUNKNOWN_FALSE      2

#define LLDPXMEDLOCMEDIAPOLICYTAGGED_TRUE        1
#define LLDPXMEDLOCMEDIAPOLICYTAGGED_FALSE       2

#define LLDPXMEDLOCLOCATIONSUBTYPE_UNKNOWN       1
#define LLDPXMEDLOCLOCATIONSUBTYPE_COORDINATEBASED 2
#define LLDPXMEDLOCLOCATIONSUBTYPE_CIVICADDRESS  3
#define LLDPXMEDLOCLOCATIONSUBTYPE_ELIN          4

#define LLDPXMEDLOCXPOEDEVICETYPE_UNKNOWN        1
#define LLDPXMEDLOCXPOEDEVICETYPE_PSEDEVICE      2
#define LLDPXMEDLOCXPOEDEVICETYPE_PDDEVICE       3
#define LLDPXMEDLOCXPOEDEVICETYPE_NONE           4

#define LLDPXMEDLOCXPOEPSEPORTPDPRIORITY_UNKNOWN 1
#define LLDPXMEDLOCXPOEPSEPORTPDPRIORITY_CRITICAL 2
#define LLDPXMEDLOCXPOEPSEPORTPDPRIORITY_HIGH    3
#define LLDPXMEDLOCXPOEPSEPORTPDPRIORITY_LOW     4

#define LLDPXMEDLOCXPOEPSEPOWERSOURCE_UNKNOWN    1
#define LLDPXMEDLOCXPOEPSEPOWERSOURCE_PRIMARY    2
#define LLDPXMEDLOCXPOEPSEPOWERSOURCE_BACKUP     3

#define LLDPXMEDLOCXPOEPDPOWERSOURCE_UNKNOWN     1
#define LLDPXMEDLOCXPOEPDPOWERSOURCE_FROMPSE     2
#define LLDPXMEDLOCXPOEPDPOWERSOURCE_LOCAL       3
#define LLDPXMEDLOCXPOEPDPOWERSOURCE_LOCALANDPSE 4

#define LLDPXMEDLOCXPOEPDPOWERPRIORITY_UNKNOWN   1
#define LLDPXMEDLOCXPOEPDPOWERPRIORITY_CRITICAL  2
#define LLDPXMEDLOCXPOEPDPOWERPRIORITY_HIGH      3
#define LLDPXMEDLOCXPOEPDPOWERPRIORITY_LOW       4

#define LLDPXMEDREMCAPSUPPORTED_CAPABILITIES     0
#define LLDPXMEDREMCAPSUPPORTED_NETWORKPOLICY    1
#define LLDPXMEDREMCAPSUPPORTED_LOCATION         2
#define LLDPXMEDREMCAPSUPPORTED_EXTENDEDPSE      3
#define LLDPXMEDREMCAPSUPPORTED_EXTENDEDPD       4
#define LLDPXMEDREMCAPSUPPORTED_INVENTORY        5

#define LLDPXMEDREMCAPCURRENT_CAPABILITIES       0
#define LLDPXMEDREMCAPCURRENT_NETWORKPOLICY      1
#define LLDPXMEDREMCAPCURRENT_LOCATION           2
#define LLDPXMEDREMCAPCURRENT_EXTENDEDPSE        3
#define LLDPXMEDREMCAPCURRENT_EXTENDEDPD         4
#define LLDPXMEDREMCAPCURRENT_INVENTORY          5

#define LLDPXMEDREMDEVICECLASS_NOTDEFINED        0
#define LLDPXMEDREMDEVICECLASS_ENDPOINTCLASS1    1
#define LLDPXMEDREMDEVICECLASS_ENDPOINTCLASS2    2
#define LLDPXMEDREMDEVICECLASS_ENDPOINTCLASS3    3
#define LLDPXMEDREMDEVICECLASS_NETWORKCONNECTIVITY 4

#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_UNKNOWN    0
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_VOICE      1
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_VOICESIGNALING 2
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_GUESTVOICE 3
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_GUESTVOICESIGNALING 4
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_SOFTPHONEVOICE 5
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_VIDEOCONFERENCING 6
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_STREAMINGVIDEO 7
#define LLDPXMEDREMMEDIAPOLICYAPPTYPE_VIDEOSIGNALING 8

#define LLDPXMEDREMMEDIAPOLICYUNKNOWN_TRUE       1
#define LLDPXMEDREMMEDIAPOLICYUNKNOWN_FALSE      2

#define LLDPXMEDREMMEDIAPOLICYTAGGED_TRUE        1
#define LLDPXMEDREMMEDIAPOLICYTAGGED_FALSE       2

#define LLDPXMEDREMLOCATIONSUBTYPE_UNKNOWN       1
#define LLDPXMEDREMLOCATIONSUBTYPE_COORDINATEBASED 2
#define LLDPXMEDREMLOCATIONSUBTYPE_CIVICADDRESS  3
#define LLDPXMEDREMLOCATIONSUBTYPE_ELIN          4

#define LLDPXMEDREMXPOEDEVICETYPE_UNKNOWN        1
#define LLDPXMEDREMXPOEDEVICETYPE_PSEDEVICE      2
#define LLDPXMEDREMXPOEDEVICETYPE_PDDEVICE       3
#define LLDPXMEDREMXPOEDEVICETYPE_NONE           4

#define LLDPXMEDREMXPOEPSEPOWERSOURCE_UNKNOWN    1
#define LLDPXMEDREMXPOEPSEPOWERSOURCE_PRIMARY    2
#define LLDPXMEDREMXPOEPSEPOWERSOURCE_BACKUP     3

#define LLDPXMEDREMXPOEPSEPOWERPRIORITY_UNKNOWN  1
#define LLDPXMEDREMXPOEPSEPOWERPRIORITY_CRITICAL 2
#define LLDPXMEDREMXPOEPSEPOWERPRIORITY_HIGH     3
#define LLDPXMEDREMXPOEPSEPOWERPRIORITY_LOW      4

#define LLDPXMEDREMXPOEPDPOWERSOURCE_UNKNOWN     1
#define LLDPXMEDREMXPOEPDPOWERSOURCE_FROMPSE     2
#define LLDPXMEDREMXPOEPDPOWERSOURCE_LOCAL       3
#define LLDPXMEDREMXPOEPDPOWERSOURCE_LOCALANDPSE 4

#define LLDPXMEDREMXPOEPDPOWERPRIORITY_UNKNOWN   1
#define LLDPXMEDREMXPOEPDPOWERPRIORITY_CRITICAL  2
#define LLDPXMEDREMXPOEPDPOWERPRIORITY_HIGH      3
#define LLDPXMEDREMXPOEPDPOWERPRIORITY_LOW       4

/* notifications */
extern oid lldpXMedTopologyChangeDetected_oid[11];

/* scalars accessible only for notify */

/* object id definitions */
extern oid lldpXMedCompliance_oid[12];
extern oid lldpXMedConfigGroup_oid[12];
extern oid lldpXMedOptMediaPolicyGroup_oid[12];
extern oid lldpXMedOptInventoryGroup_oid[12];
extern oid lldpXMedOptLocationGroup_oid[12];
extern oid lldpXMedOptPoEPSEGroup_oid[12];
extern oid lldpXMedOptPoEPDGroup_oid[12];
extern oid lldpXMedRemSysGroup_oid[12];
extern oid lldpXMedNotificationsGroup_oid[12];

/* function prototypes */
/* trap function prototypes */
extern void send_lldpXMedTopologyChangeDetected_v2trap(struct variable_list *);

/* variable function prototypes */
void init_lldpXMedMIB(void);
void deinit_lldpXMedMIB(void);
int term_lldpXMedMIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lldpXMedMIB;
struct lldpXMedMIB_data *lldpXMedMIB_create(void);
struct lldpXMedMIB_data *lldpXMedMIB_duplicate(struct lldpXMedMIB_data *);
int lldpXMedMIB_destroy(struct lldpXMedMIB_data **);
int lldpXMedMIB_add(struct lldpXMedMIB_data *);
void parse_lldpXMedMIB(const char *, char *);
SNMPCallback store_lldpXMedMIB;
void refresh_lldpXMedMIB(int);
FindVarMethod var_lldpXMedPortConfigTable;
struct lldpXMedPortConfigTable_data *lldpXMedPortConfigTable_create(void);
struct lldpXMedPortConfigTable_data *lldpXMedPortConfigTable_duplicate(struct lldpXMedPortConfigTable_data *);
int lldpXMedPortConfigTable_destroy(struct lldpXMedPortConfigTable_data **);
int lldpXMedPortConfigTable_add(struct lldpXMedPortConfigTable_data *);
int lldpXMedPortConfigTable_del(struct lldpXMedPortConfigTable_data *);
void parse_lldpXMedPortConfigTable(const char *, char *);
SNMPCallback store_lldpXMedPortConfigTable;
void refresh_lldpXMedPortConfigTable(int);
FindVarMethod var_lldpXMedLocMediaPolicyTable;
struct lldpXMedLocMediaPolicyTable_data *lldpXMedLocMediaPolicyTable_create(void);
struct lldpXMedLocMediaPolicyTable_data *lldpXMedLocMediaPolicyTable_duplicate(struct lldpXMedLocMediaPolicyTable_data *);
int lldpXMedLocMediaPolicyTable_destroy(struct lldpXMedLocMediaPolicyTable_data **);
int lldpXMedLocMediaPolicyTable_add(struct lldpXMedLocMediaPolicyTable_data *);
int lldpXMedLocMediaPolicyTable_del(struct lldpXMedLocMediaPolicyTable_data *);
void parse_lldpXMedLocMediaPolicyTable(const char *, char *);
SNMPCallback store_lldpXMedLocMediaPolicyTable;
void refresh_lldpXMedLocMediaPolicyTable(int);
FindVarMethod var_lldpXMedLocLocationTable;
struct lldpXMedLocLocationTable_data *lldpXMedLocLocationTable_create(void);
struct lldpXMedLocLocationTable_data *lldpXMedLocLocationTable_duplicate(struct lldpXMedLocLocationTable_data *);
int lldpXMedLocLocationTable_destroy(struct lldpXMedLocLocationTable_data **);
int lldpXMedLocLocationTable_add(struct lldpXMedLocLocationTable_data *);
int lldpXMedLocLocationTable_del(struct lldpXMedLocLocationTable_data *);
void parse_lldpXMedLocLocationTable(const char *, char *);
SNMPCallback store_lldpXMedLocLocationTable;
void refresh_lldpXMedLocLocationTable(int);
FindVarMethod var_lldpXMedLocXPoEPSEPortTable;
struct lldpXMedLocXPoEPSEPortTable_data *lldpXMedLocXPoEPSEPortTable_create(void);
struct lldpXMedLocXPoEPSEPortTable_data *lldpXMedLocXPoEPSEPortTable_duplicate(struct lldpXMedLocXPoEPSEPortTable_data *);
int lldpXMedLocXPoEPSEPortTable_destroy(struct lldpXMedLocXPoEPSEPortTable_data **);
int lldpXMedLocXPoEPSEPortTable_add(struct lldpXMedLocXPoEPSEPortTable_data *);
int lldpXMedLocXPoEPSEPortTable_del(struct lldpXMedLocXPoEPSEPortTable_data *);
void parse_lldpXMedLocXPoEPSEPortTable(const char *, char *);
SNMPCallback store_lldpXMedLocXPoEPSEPortTable;
void refresh_lldpXMedLocXPoEPSEPortTable(int);
FindVarMethod var_lldpXMedRemCapabilitiesTable;
struct lldpXMedRemCapabilitiesTable_data *lldpXMedRemCapabilitiesTable_create(void);
struct lldpXMedRemCapabilitiesTable_data *lldpXMedRemCapabilitiesTable_duplicate(struct lldpXMedRemCapabilitiesTable_data *);
int lldpXMedRemCapabilitiesTable_destroy(struct lldpXMedRemCapabilitiesTable_data **);
int lldpXMedRemCapabilitiesTable_add(struct lldpXMedRemCapabilitiesTable_data *);
int lldpXMedRemCapabilitiesTable_del(struct lldpXMedRemCapabilitiesTable_data *);
void parse_lldpXMedRemCapabilitiesTable(const char *, char *);
SNMPCallback store_lldpXMedRemCapabilitiesTable;
void refresh_lldpXMedRemCapabilitiesTable(int);
FindVarMethod var_lldpXMedRemMediaPolicyTable;
struct lldpXMedRemMediaPolicyTable_data *lldpXMedRemMediaPolicyTable_create(void);
struct lldpXMedRemMediaPolicyTable_data *lldpXMedRemMediaPolicyTable_duplicate(struct lldpXMedRemMediaPolicyTable_data *);
int lldpXMedRemMediaPolicyTable_destroy(struct lldpXMedRemMediaPolicyTable_data **);
int lldpXMedRemMediaPolicyTable_add(struct lldpXMedRemMediaPolicyTable_data *);
int lldpXMedRemMediaPolicyTable_del(struct lldpXMedRemMediaPolicyTable_data *);
void parse_lldpXMedRemMediaPolicyTable(const char *, char *);
SNMPCallback store_lldpXMedRemMediaPolicyTable;
void refresh_lldpXMedRemMediaPolicyTable(int);
FindVarMethod var_lldpXMedRemInventoryTable;
struct lldpXMedRemInventoryTable_data *lldpXMedRemInventoryTable_create(void);
struct lldpXMedRemInventoryTable_data *lldpXMedRemInventoryTable_duplicate(struct lldpXMedRemInventoryTable_data *);
int lldpXMedRemInventoryTable_destroy(struct lldpXMedRemInventoryTable_data **);
int lldpXMedRemInventoryTable_add(struct lldpXMedRemInventoryTable_data *);
int lldpXMedRemInventoryTable_del(struct lldpXMedRemInventoryTable_data *);
void parse_lldpXMedRemInventoryTable(const char *, char *);
SNMPCallback store_lldpXMedRemInventoryTable;
void refresh_lldpXMedRemInventoryTable(int);
FindVarMethod var_lldpXMedRemLocationTable;
struct lldpXMedRemLocationTable_data *lldpXMedRemLocationTable_create(void);
struct lldpXMedRemLocationTable_data *lldpXMedRemLocationTable_duplicate(struct lldpXMedRemLocationTable_data *);
int lldpXMedRemLocationTable_destroy(struct lldpXMedRemLocationTable_data **);
int lldpXMedRemLocationTable_add(struct lldpXMedRemLocationTable_data *);
int lldpXMedRemLocationTable_del(struct lldpXMedRemLocationTable_data *);
void parse_lldpXMedRemLocationTable(const char *, char *);
SNMPCallback store_lldpXMedRemLocationTable;
void refresh_lldpXMedRemLocationTable(int);
FindVarMethod var_lldpXMedRemXPoETable;
struct lldpXMedRemXPoETable_data *lldpXMedRemXPoETable_create(void);
struct lldpXMedRemXPoETable_data *lldpXMedRemXPoETable_duplicate(struct lldpXMedRemXPoETable_data *);
int lldpXMedRemXPoETable_destroy(struct lldpXMedRemXPoETable_data **);
int lldpXMedRemXPoETable_add(struct lldpXMedRemXPoETable_data *);
int lldpXMedRemXPoETable_del(struct lldpXMedRemXPoETable_data *);
void parse_lldpXMedRemXPoETable(const char *, char *);
SNMPCallback store_lldpXMedRemXPoETable;
void refresh_lldpXMedRemXPoETable(int);
FindVarMethod var_lldpXMedRemXPoEPSETable;
struct lldpXMedRemXPoEPSETable_data *lldpXMedRemXPoEPSETable_create(void);
struct lldpXMedRemXPoEPSETable_data *lldpXMedRemXPoEPSETable_duplicate(struct lldpXMedRemXPoEPSETable_data *);
int lldpXMedRemXPoEPSETable_destroy(struct lldpXMedRemXPoEPSETable_data **);
int lldpXMedRemXPoEPSETable_add(struct lldpXMedRemXPoEPSETable_data *);
int lldpXMedRemXPoEPSETable_del(struct lldpXMedRemXPoEPSETable_data *);
void parse_lldpXMedRemXPoEPSETable(const char *, char *);
SNMPCallback store_lldpXMedRemXPoEPSETable;
void refresh_lldpXMedRemXPoEPSETable(int);
FindVarMethod var_lldpXMedRemXPoEPDTable;
struct lldpXMedRemXPoEPDTable_data *lldpXMedRemXPoEPDTable_create(void);
struct lldpXMedRemXPoEPDTable_data *lldpXMedRemXPoEPDTable_duplicate(struct lldpXMedRemXPoEPDTable_data *);
int lldpXMedRemXPoEPDTable_destroy(struct lldpXMedRemXPoEPDTable_data **);
int lldpXMedRemXPoEPDTable_add(struct lldpXMedRemXPoEPDTable_data *);
int lldpXMedRemXPoEPDTable_del(struct lldpXMedRemXPoEPDTable_data *);
void parse_lldpXMedRemXPoEPDTable(const char *, char *);
SNMPCallback store_lldpXMedRemXPoEPDTable;
void refresh_lldpXMedRemXPoEPDTable(int);

WriteMethod write_lldpXMedPortConfigTLVsTxEnable;
WriteMethod write_lldpXMedPortConfigNotifEnable;
WriteMethod write_lldpXMedFastStartRepeatCount;
WriteMethod write_lldpXMedLocLocationInfo;
#endif				/* __LOCAL_LLDPXMEDMIB_H__ */
