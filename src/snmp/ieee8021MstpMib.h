/*****************************************************************************

 @(#) src/snmp/ieee8021mstpmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021MSTPMIB_H__
#define __LOCAL_IEEE8021MSTPMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021MstpMib_data {
	struct ieee8021MstpMib_data *ieee8021MstpMib_old;
	uint ieee8021MstpMib_rsvs;
	uint ieee8021MstpMib_tsts;
	uint ieee8021MstpMib_sets;
	uint ieee8021MstpMib_request;
};
struct ieee8021MstpCistTable_data {
	struct ieee8021MstpCistTable_data *ieee8021MstpCistTable_old;
	uint ieee8021MstpCistTable_rsvs;
	uint ieee8021MstpCistTable_tsts;
	uint ieee8021MstpCistTable_sets;
	uint ieee8021MstpCistTable_request;
	uint ieee8021MstpCistTable_refs;
	uint ieee8021MstpCistTable_id;
	ulong ieee8021MstpCistComponentId;	/* NoAccess */
	uint8_t *ieee8021MstpCistBridgeIdentifier;	/* ReadOnly */
	size_t ieee8021MstpCistBridgeIdentifierLen;
	long ieee8021MstpCistTopologyChange;	/* ReadOnly */
	uint8_t *ieee8021MstpCistRegionalRootIdentifier;	/* ReadOnly */
	size_t ieee8021MstpCistRegionalRootIdentifierLen;
	ulong ieee8021MstpCistPathCost;	/* ReadOnly */
	long ieee8021MstpCistMaxHops;	/* ReadWrite */
};
struct ieee8021MstpTable_data {
	struct ieee8021MstpTable_data *ieee8021MstpTable_old;
	uint ieee8021MstpTable_rsvs;
	uint ieee8021MstpTable_tsts;
	uint ieee8021MstpTable_sets;
	uint ieee8021MstpTable_request;
	uint ieee8021MstpTable_refs;
	uint ieee8021MstpTable_id;
	ulong ieee8021MstpComponentId;	/* NoAccess */
	ulong ieee8021MstpId;		/* NoAccess */
	uint8_t *ieee8021MstpBridgeId;	/* ReadOnly */
	size_t ieee8021MstpBridgeIdLen;
	long ieee8021MstpTimeSinceTopologyChange;	/* ReadOnly */
	struct counter64 ieee8021MstpTopologyChanges;	/* ReadOnly */
	long ieee8021MstpTopologyChange;	/* ReadOnly */
	uint8_t *ieee8021MstpDesignatedRoot;	/* ReadOnly */
	size_t ieee8021MstpDesignatedRootLen;
	long ieee8021MstpRootPathCost;	/* ReadOnly */
	ulong ieee8021MstpRootPort;	/* ReadOnly */
	long ieee8021MstpBridgePriority;	/* Create */
	uint8_t *ieee8021MstpVids0;	/* ReadOnly */
	size_t ieee8021MstpVids0Len;
	uint8_t *ieee8021MstpVids1;	/* ReadOnly */
	size_t ieee8021MstpVids1Len;
	uint8_t *ieee8021MstpVids2;	/* ReadOnly */
	size_t ieee8021MstpVids2Len;
	uint8_t *ieee8021MstpVids3;	/* ReadOnly */
	size_t ieee8021MstpVids3Len;
	long ieee8021MstpRowStatus;	/* Create */
};
struct ieee8021MstpCistPortTable_data {
	struct ieee8021MstpCistPortTable_data *ieee8021MstpCistPortTable_old;
	uint ieee8021MstpCistPortTable_rsvs;
	uint ieee8021MstpCistPortTable_tsts;
	uint ieee8021MstpCistPortTable_sets;
	uint ieee8021MstpCistPortTable_request;
	uint ieee8021MstpCistPortTable_refs;
	uint ieee8021MstpCistPortTable_id;
	ulong ieee8021MstpCistPortComponentId;	/* NoAccess */
	ulong ieee8021MstpCistPortNum;	/* NoAccess */
	long ieee8021MstpCistPortUptime;	/* ReadOnly */
	long ieee8021MstpCistPortAdminPathCost;	/* ReadWrite */
	uint8_t *ieee8021MstpCistPortDesignatedRoot;	/* ReadOnly */
	size_t ieee8021MstpCistPortDesignatedRootLen;
	long ieee8021MstpCistPortTopologyChangeAck;	/* ReadOnly */
	long ieee8021MstpCistPortHelloTime;	/* ReadOnly */
	long ieee8021MstpCistPortAdminEdgePort;	/* ReadWrite */
	long ieee8021MstpCistPortOperEdgePort;	/* ReadOnly */
	long ieee8021MstpCistPortMacEnabled;	/* ReadWrite */
	long ieee8021MstpCistPortMacOperational;	/* ReadOnly */
	long ieee8021MstpCistPortRestrictedRole;	/* ReadWrite */
	long ieee8021MstpCistPortRestrictedTcn;	/* ReadWrite */
	long ieee8021MstpCistPortRole;	/* ReadOnly */
	long ieee8021MstpCistPortDisputed;	/* ReadOnly */
	uint8_t *ieee8021MstpCistPortCistRegionalRootId;	/* ReadOnly */
	size_t ieee8021MstpCistPortCistRegionalRootIdLen;
	ulong ieee8021MstpCistPortCistPathCost;	/* ReadOnly */
	long ieee8021MstpCistPortProtocolMigration;	/* ReadWrite */
	long ieee8021MstpCistPortEnableBPDURx;	/* ReadWrite */
	long ieee8021MstpCistPortEnableBPDUTx;	/* ReadWrite */
	uint8_t *ieee8021MstpCistPortPseudoRootId;	/* ReadWrite */
	size_t ieee8021MstpCistPortPseudoRootIdLen;
	long ieee8021MstpCistPortIsL2Gp;	/* ReadWrite */
};
struct ieee8021MstpPortTable_data {
	struct ieee8021MstpPortTable_data *ieee8021MstpPortTable_old;
	uint ieee8021MstpPortTable_rsvs;
	uint ieee8021MstpPortTable_tsts;
	uint ieee8021MstpPortTable_sets;
	uint ieee8021MstpPortTable_request;
	uint ieee8021MstpPortTable_refs;
	uint ieee8021MstpPortTable_id;
	ulong ieee8021MstpPortComponentId;	/* NoAccess */
	ulong ieee8021MstpPortMstId;	/* NoAccess */
	ulong ieee8021MstpPortNum;	/* NoAccess */
	long ieee8021MstpPortUptime;	/* ReadOnly */
	long ieee8021MstpPortState;	/* ReadOnly */
	long ieee8021MstpPortPriority;	/* ReadWrite */
	long ieee8021MstpPortPathCost;	/* ReadWrite */
	uint8_t *ieee8021MstpPortDesignatedRoot;	/* ReadOnly */
	size_t ieee8021MstpPortDesignatedRootLen;
	long ieee8021MstpPortDesignatedCost;	/* ReadOnly */
	uint8_t *ieee8021MstpPortDesignatedBridge;	/* ReadOnly */
	size_t ieee8021MstpPortDesignatedBridgeLen;
	ulong ieee8021MstpPortDesignatedPort;	/* ReadOnly */
	long ieee8021MstpPortRole;	/* ReadOnly */
	long ieee8021MstpPortDisputed;	/* ReadOnly */
};
struct ieee8021MstpFidToMstiTable_data {
	struct ieee8021MstpFidToMstiTable_data *ieee8021MstpFidToMstiTable_old;
	uint ieee8021MstpFidToMstiTable_rsvs;
	uint ieee8021MstpFidToMstiTable_tsts;
	uint ieee8021MstpFidToMstiTable_sets;
	uint ieee8021MstpFidToMstiTable_request;
	uint ieee8021MstpFidToMstiTable_refs;
	uint ieee8021MstpFidToMstiTable_id;
	ulong ieee8021MstpFidToMstiComponentId;	/* NoAccess */
	ulong ieee8021MstpFidToMstiFid;	/* NoAccess */
	ulong ieee8021MstpFidToMstiMstId;	/* ReadWrite */
};
struct ieee8021MstpVlanTable_data {
	struct ieee8021MstpVlanTable_data *ieee8021MstpVlanTable_old;
	uint ieee8021MstpVlanTable_rsvs;
	uint ieee8021MstpVlanTable_tsts;
	uint ieee8021MstpVlanTable_sets;
	uint ieee8021MstpVlanTable_request;
	uint ieee8021MstpVlanTable_refs;
	uint ieee8021MstpVlanTable_id;
	ulong ieee8021MstpVlanComponentId;	/* NoAccess */
	ulong ieee8021MstpVlanId;	/* NoAccess */
	ulong ieee8021MstpVlanMstId;	/* ReadOnly */
};
struct ieee8021MstpConfigIdTable_data {
	struct ieee8021MstpConfigIdTable_data *ieee8021MstpConfigIdTable_old;
	uint ieee8021MstpConfigIdTable_rsvs;
	uint ieee8021MstpConfigIdTable_tsts;
	uint ieee8021MstpConfigIdTable_sets;
	uint ieee8021MstpConfigIdTable_request;
	uint ieee8021MstpConfigIdTable_refs;
	uint ieee8021MstpConfigIdTable_id;
	ulong ieee8021MstpConfigIdComponentId;	/* NoAccess */
	long ieee8021MstpConfigIdFormatSelector;	/* ReadWrite */
	uint8_t *ieee8021MstpConfigurationName;	/* ReadWrite */
	size_t ieee8021MstpConfigurationNameLen;
	ulong ieee8021MstpRevisionLevel;	/* ReadWrite */
	uint8_t *ieee8021MstpConfigurationDigest;	/* ReadOnly */
	size_t ieee8021MstpConfigurationDigestLen;
};
struct ieee8021MstpCistPortExtensionTable_data {
	struct ieee8021MstpCistPortExtensionTable_data *ieee8021MstpCistPortExtensionTable_old;
	uint ieee8021MstpCistPortExtensionTable_rsvs;
	uint ieee8021MstpCistPortExtensionTable_tsts;
	uint ieee8021MstpCistPortExtensionTable_sets;
	uint ieee8021MstpCistPortExtensionTable_request;
	uint ieee8021MstpCistPortExtensionTable_refs;
	uint ieee8021MstpCistPortExtensionTable_id;
	ulong ieee8021MstpCistPortComponentId;	/* NoAccess */
	ulong ieee8021MstpCistPortNum;	/* NoAccess */
	long ieee8021MstpCistPortAutoEdgePort;	/* ReadWrite */
	long ieee8021MstpCistPortAutoIsolatePort;	/* ReadOnly */
};
struct ieee8021MstpFidToMstiV2Table_data {
	struct ieee8021MstpFidToMstiV2Table_data *ieee8021MstpFidToMstiV2Table_old;
	uint ieee8021MstpFidToMstiV2Table_rsvs;
	uint ieee8021MstpFidToMstiV2Table_tsts;
	uint ieee8021MstpFidToMstiV2Table_sets;
	uint ieee8021MstpFidToMstiV2Table_request;
	uint ieee8021MstpFidToMstiV2Table_refs;
	uint ieee8021MstpFidToMstiV2Table_id;
	ulong ieee8021MstpFidToMstiV2ComponentId;	/* NoAccess */
	ulong ieee8021MstpFidToMstiV2Fid;	/* NoAccess */
	ulong ieee8021MstpFidToMstiV2MstId;	/* ReadWrite */
};
struct ieee8021MstpVlanV2Table_data {
	struct ieee8021MstpVlanV2Table_data *ieee8021MstpVlanV2Table_old;
	uint ieee8021MstpVlanV2Table_rsvs;
	uint ieee8021MstpVlanV2Table_tsts;
	uint ieee8021MstpVlanV2Table_sets;
	uint ieee8021MstpVlanV2Table_request;
	uint ieee8021MstpVlanV2Table_refs;
	uint ieee8021MstpVlanV2Table_id;
	ulong ieee8021MstpVlanV2ComponentId;	/* NoAccess */
	ulong ieee8021MstpVlanV2Id;	/* NoAccess */
	ulong ieee8021MstpVlanV2MstId;	/* ReadOnly */
};

/* storage declarations */
extern struct ieee8021MstpMib_data *ieee8021MstpMibStorage;
extern struct header_complex_index *ieee8021MstpCistTableStorage;
extern struct header_complex_index *ieee8021MstpTableStorage;
extern struct header_complex_index *ieee8021MstpCistPortTableStorage;
extern struct header_complex_index *ieee8021MstpPortTableStorage;
extern struct header_complex_index *ieee8021MstpFidToMstiTableStorage;
extern struct header_complex_index *ieee8021MstpVlanTableStorage;
extern struct header_complex_index *ieee8021MstpConfigIdTableStorage;
extern struct header_complex_index *ieee8021MstpCistPortExtensionTableStorage;
extern struct header_complex_index *ieee8021MstpFidToMstiV2TableStorage;
extern struct header_complex_index *ieee8021MstpVlanV2TableStorage;

/* enum definitions from the covered mib sections */

#define IEEE8021MSTPCISTTOPOLOGYCHANGE_TRUE      1
#define IEEE8021MSTPCISTTOPOLOGYCHANGE_FALSE     2

#define IEEE8021MSTPTOPOLOGYCHANGE_TRUE          1
#define IEEE8021MSTPTOPOLOGYCHANGE_FALSE         2

#define IEEE8021MSTPCISTPORTTOPOLOGYCHANGEACK_TRUE 1
#define IEEE8021MSTPCISTPORTTOPOLOGYCHANGEACK_FALSE 2

#define IEEE8021MSTPCISTPORTADMINEDGEPORT_TRUE   1
#define IEEE8021MSTPCISTPORTADMINEDGEPORT_FALSE  2

#define IEEE8021MSTPCISTPORTOPEREDGEPORT_TRUE    1
#define IEEE8021MSTPCISTPORTOPEREDGEPORT_FALSE   2

#define IEEE8021MSTPCISTPORTMACENABLED_TRUE      1
#define IEEE8021MSTPCISTPORTMACENABLED_FALSE     2

#define IEEE8021MSTPCISTPORTMACOPERATIONAL_TRUE  1
#define IEEE8021MSTPCISTPORTMACOPERATIONAL_FALSE 2

#define IEEE8021MSTPCISTPORTRESTRICTEDROLE_TRUE  1
#define IEEE8021MSTPCISTPORTRESTRICTEDROLE_FALSE 2

#define IEEE8021MSTPCISTPORTRESTRICTEDTCN_TRUE   1
#define IEEE8021MSTPCISTPORTRESTRICTEDTCN_FALSE  2

#define IEEE8021MSTPCISTPORTROLE_ROOT            1
#define IEEE8021MSTPCISTPORTROLE_ALTERNATE       2
#define IEEE8021MSTPCISTPORTROLE_DESIGNATED      3
#define IEEE8021MSTPCISTPORTROLE_BACKUP          4

#define IEEE8021MSTPCISTPORTDISPUTED_TRUE        1
#define IEEE8021MSTPCISTPORTDISPUTED_FALSE       2

#define IEEE8021MSTPCISTPORTPROTOCOLMIGRATION_TRUE 1
#define IEEE8021MSTPCISTPORTPROTOCOLMIGRATION_FALSE 2

#define IEEE8021MSTPCISTPORTENABLEBPDURX_TRUE    1
#define IEEE8021MSTPCISTPORTENABLEBPDURX_FALSE   2

#define IEEE8021MSTPCISTPORTENABLEBPDUTX_TRUE    1
#define IEEE8021MSTPCISTPORTENABLEBPDUTX_FALSE   2

#define IEEE8021MSTPCISTPORTISL2GP_TRUE          1
#define IEEE8021MSTPCISTPORTISL2GP_FALSE         2

#define IEEE8021MSTPPORTSTATE_DISABLED           1
#define IEEE8021MSTPPORTSTATE_LISTENING          2
#define IEEE8021MSTPPORTSTATE_LEARNING           3
#define IEEE8021MSTPPORTSTATE_FORWARDING         4
#define IEEE8021MSTPPORTSTATE_BLOCKING           5

#define IEEE8021MSTPPORTROLE_ROOT                1
#define IEEE8021MSTPPORTROLE_ALTERNATE           2
#define IEEE8021MSTPPORTROLE_DESIGNATED          3
#define IEEE8021MSTPPORTROLE_BACKUP              4

#define IEEE8021MSTPPORTDISPUTED_TRUE            1
#define IEEE8021MSTPPORTDISPUTED_FALSE           2

#define IEEE8021MSTPCISTPORTAUTOEDGEPORT_TRUE    1
#define IEEE8021MSTPCISTPORTAUTOEDGEPORT_FALSE   2

#define IEEE8021MSTPCISTPORTAUTOISOLATEPORT_TRUE 1
#define IEEE8021MSTPCISTPORTAUTOISOLATEPORT_FALSE 2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021MstpCistGroup_oid[11];
extern oid ieee8021MstpGroup_oid[11];
extern oid ieee8021MstpCistPortGroup_oid[11];
extern oid ieee8021MstpPortGroup_oid[11];
extern oid ieee8021MstpFidToMstiGroup_oid[11];
extern oid ieee8021MstpVlanGroup_oid[11];
extern oid ieee8021MstpConfigIdGroup_oid[11];
extern oid ieee8021MstpCistPortExtensionGroup_oid[11];
extern oid ieee8021MstpFidToMstiV2Group_oid[11];
extern oid ieee8021MstpVlanV2Group_oid[11];
extern oid ieee8021MstpCompliance_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ieee8021MstpMib(void);
void deinit_ieee8021MstpMib(void);
int term_ieee8021MstpMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021MstpMib;
struct ieee8021MstpMib_data *ieee8021MstpMib_create(void);
struct ieee8021MstpMib_data *ieee8021MstpMib_duplicate(struct ieee8021MstpMib_data *);
int ieee8021MstpMib_destroy(struct ieee8021MstpMib_data **);
int ieee8021MstpMib_add(struct ieee8021MstpMib_data *);
void parse_ieee8021MstpMib(const char *, char *);
SNMPCallback store_ieee8021MstpMib;
void refresh_ieee8021MstpMib(int);
FindVarMethod var_ieee8021MstpCistTable;
struct ieee8021MstpCistTable_data *ieee8021MstpCistTable_create(void);
struct ieee8021MstpCistTable_data *ieee8021MstpCistTable_duplicate(struct ieee8021MstpCistTable_data *);
int ieee8021MstpCistTable_destroy(struct ieee8021MstpCistTable_data **);
int ieee8021MstpCistTable_add(struct ieee8021MstpCistTable_data *);
int ieee8021MstpCistTable_del(struct ieee8021MstpCistTable_data *);
void parse_ieee8021MstpCistTable(const char *, char *);
SNMPCallback store_ieee8021MstpCistTable;
void refresh_ieee8021MstpCistTable(int);
FindVarMethod var_ieee8021MstpTable;
struct ieee8021MstpTable_data *ieee8021MstpTable_create(void);
struct ieee8021MstpTable_data *ieee8021MstpTable_duplicate(struct ieee8021MstpTable_data *);
int ieee8021MstpTable_destroy(struct ieee8021MstpTable_data **);
int ieee8021MstpTable_add(struct ieee8021MstpTable_data *);
int ieee8021MstpTable_del(struct ieee8021MstpTable_data *);
void parse_ieee8021MstpTable(const char *, char *);
SNMPCallback store_ieee8021MstpTable;
void refresh_ieee8021MstpTable(int);
FindVarMethod var_ieee8021MstpCistPortTable;
struct ieee8021MstpCistPortTable_data *ieee8021MstpCistPortTable_create(void);
struct ieee8021MstpCistPortTable_data *ieee8021MstpCistPortTable_duplicate(struct ieee8021MstpCistPortTable_data *);
int ieee8021MstpCistPortTable_destroy(struct ieee8021MstpCistPortTable_data **);
int ieee8021MstpCistPortTable_add(struct ieee8021MstpCistPortTable_data *);
int ieee8021MstpCistPortTable_del(struct ieee8021MstpCistPortTable_data *);
void parse_ieee8021MstpCistPortTable(const char *, char *);
SNMPCallback store_ieee8021MstpCistPortTable;
void refresh_ieee8021MstpCistPortTable(int);
FindVarMethod var_ieee8021MstpPortTable;
struct ieee8021MstpPortTable_data *ieee8021MstpPortTable_create(void);
struct ieee8021MstpPortTable_data *ieee8021MstpPortTable_duplicate(struct ieee8021MstpPortTable_data *);
int ieee8021MstpPortTable_destroy(struct ieee8021MstpPortTable_data **);
int ieee8021MstpPortTable_add(struct ieee8021MstpPortTable_data *);
int ieee8021MstpPortTable_del(struct ieee8021MstpPortTable_data *);
void parse_ieee8021MstpPortTable(const char *, char *);
SNMPCallback store_ieee8021MstpPortTable;
void refresh_ieee8021MstpPortTable(int);
FindVarMethod var_ieee8021MstpFidToMstiTable;
struct ieee8021MstpFidToMstiTable_data *ieee8021MstpFidToMstiTable_create(void);
struct ieee8021MstpFidToMstiTable_data *ieee8021MstpFidToMstiTable_duplicate(struct ieee8021MstpFidToMstiTable_data *);
int ieee8021MstpFidToMstiTable_destroy(struct ieee8021MstpFidToMstiTable_data **);
int ieee8021MstpFidToMstiTable_add(struct ieee8021MstpFidToMstiTable_data *);
int ieee8021MstpFidToMstiTable_del(struct ieee8021MstpFidToMstiTable_data *);
void parse_ieee8021MstpFidToMstiTable(const char *, char *);
SNMPCallback store_ieee8021MstpFidToMstiTable;
void refresh_ieee8021MstpFidToMstiTable(int);
FindVarMethod var_ieee8021MstpVlanTable;
struct ieee8021MstpVlanTable_data *ieee8021MstpVlanTable_create(void);
struct ieee8021MstpVlanTable_data *ieee8021MstpVlanTable_duplicate(struct ieee8021MstpVlanTable_data *);
int ieee8021MstpVlanTable_destroy(struct ieee8021MstpVlanTable_data **);
int ieee8021MstpVlanTable_add(struct ieee8021MstpVlanTable_data *);
int ieee8021MstpVlanTable_del(struct ieee8021MstpVlanTable_data *);
void parse_ieee8021MstpVlanTable(const char *, char *);
SNMPCallback store_ieee8021MstpVlanTable;
void refresh_ieee8021MstpVlanTable(int);
FindVarMethod var_ieee8021MstpConfigIdTable;
struct ieee8021MstpConfigIdTable_data *ieee8021MstpConfigIdTable_create(void);
struct ieee8021MstpConfigIdTable_data *ieee8021MstpConfigIdTable_duplicate(struct ieee8021MstpConfigIdTable_data *);
int ieee8021MstpConfigIdTable_destroy(struct ieee8021MstpConfigIdTable_data **);
int ieee8021MstpConfigIdTable_add(struct ieee8021MstpConfigIdTable_data *);
int ieee8021MstpConfigIdTable_del(struct ieee8021MstpConfigIdTable_data *);
void parse_ieee8021MstpConfigIdTable(const char *, char *);
SNMPCallback store_ieee8021MstpConfigIdTable;
void refresh_ieee8021MstpConfigIdTable(int);
FindVarMethod var_ieee8021MstpCistPortExtensionTable;
struct ieee8021MstpCistPortExtensionTable_data *ieee8021MstpCistPortExtensionTable_create(void);
struct ieee8021MstpCistPortExtensionTable_data *ieee8021MstpCistPortExtensionTable_duplicate(struct ieee8021MstpCistPortExtensionTable_data *);
int ieee8021MstpCistPortExtensionTable_destroy(struct ieee8021MstpCistPortExtensionTable_data **);
int ieee8021MstpCistPortExtensionTable_add(struct ieee8021MstpCistPortExtensionTable_data *);
int ieee8021MstpCistPortExtensionTable_del(struct ieee8021MstpCistPortExtensionTable_data *);
void parse_ieee8021MstpCistPortExtensionTable(const char *, char *);
SNMPCallback store_ieee8021MstpCistPortExtensionTable;
void refresh_ieee8021MstpCistPortExtensionTable(int);
FindVarMethod var_ieee8021MstpFidToMstiV2Table;
struct ieee8021MstpFidToMstiV2Table_data *ieee8021MstpFidToMstiV2Table_create(void);
struct ieee8021MstpFidToMstiV2Table_data *ieee8021MstpFidToMstiV2Table_duplicate(struct ieee8021MstpFidToMstiV2Table_data *);
int ieee8021MstpFidToMstiV2Table_destroy(struct ieee8021MstpFidToMstiV2Table_data **);
int ieee8021MstpFidToMstiV2Table_add(struct ieee8021MstpFidToMstiV2Table_data *);
int ieee8021MstpFidToMstiV2Table_del(struct ieee8021MstpFidToMstiV2Table_data *);
void parse_ieee8021MstpFidToMstiV2Table(const char *, char *);
SNMPCallback store_ieee8021MstpFidToMstiV2Table;
void refresh_ieee8021MstpFidToMstiV2Table(int);
FindVarMethod var_ieee8021MstpVlanV2Table;
struct ieee8021MstpVlanV2Table_data *ieee8021MstpVlanV2Table_create(void);
struct ieee8021MstpVlanV2Table_data *ieee8021MstpVlanV2Table_duplicate(struct ieee8021MstpVlanV2Table_data *);
int ieee8021MstpVlanV2Table_destroy(struct ieee8021MstpVlanV2Table_data **);
int ieee8021MstpVlanV2Table_add(struct ieee8021MstpVlanV2Table_data *);
int ieee8021MstpVlanV2Table_del(struct ieee8021MstpVlanV2Table_data *);
void parse_ieee8021MstpVlanV2Table(const char *, char *);
SNMPCallback store_ieee8021MstpVlanV2Table;
void refresh_ieee8021MstpVlanV2Table(int);

WriteMethod write_ieee8021MstpCistMaxHops;
WriteMethod write_ieee8021MstpBridgePriority;
WriteMethod write_ieee8021MstpRowStatus;
WriteMethod write_ieee8021MstpCistPortAdminPathCost;
WriteMethod write_ieee8021MstpCistPortAdminEdgePort;
WriteMethod write_ieee8021MstpCistPortMacEnabled;
WriteMethod write_ieee8021MstpCistPortRestrictedRole;
WriteMethod write_ieee8021MstpCistPortRestrictedTcn;
WriteMethod write_ieee8021MstpCistPortProtocolMigration;
WriteMethod write_ieee8021MstpCistPortEnableBPDURx;
WriteMethod write_ieee8021MstpCistPortEnableBPDUTx;
WriteMethod write_ieee8021MstpCistPortPseudoRootId;
WriteMethod write_ieee8021MstpCistPortIsL2Gp;
WriteMethod write_ieee8021MstpPortPriority;
WriteMethod write_ieee8021MstpPortPathCost;
WriteMethod write_ieee8021MstpFidToMstiMstId;
WriteMethod write_ieee8021MstpConfigIdFormatSelector;
WriteMethod write_ieee8021MstpConfigurationName;
WriteMethod write_ieee8021MstpRevisionLevel;
WriteMethod write_ieee8021MstpCistPortAutoEdgePort;
WriteMethod write_ieee8021MstpFidToMstiV2MstId;
#endif				/* __LOCAL_IEEE8021MSTPMIB_H__ */
