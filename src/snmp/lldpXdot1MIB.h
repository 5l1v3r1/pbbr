/*****************************************************************************

 @(#) src/snmp/lldpxdot1mib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_LLDPXDOT1MIB_H__
#define __LOCAL_LLDPXDOT1MIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct lldpXdot1MIB_data {
	struct lldpXdot1MIB_data *lldpXdot1MIB_old;
	uint lldpXdot1MIB_rsvs;
	uint lldpXdot1MIB_tsts;
	uint lldpXdot1MIB_sets;
	uint lldpXdot1MIB_request;
};
struct lldpXdot1ConfigPortVlanTable_data {
	struct lldpXdot1ConfigPortVlanTable_data *lldpXdot1ConfigPortVlanTable_old;
	uint lldpXdot1ConfigPortVlanTable_rsvs;
	uint lldpXdot1ConfigPortVlanTable_tsts;
	uint lldpXdot1ConfigPortVlanTable_sets;
	uint lldpXdot1ConfigPortVlanTable_request;
	uint lldpXdot1ConfigPortVlanTable_refs;
	uint lldpXdot1ConfigPortVlanTable_id;
	long lldpPortConfigPortNum;	/* NoAccess */
	long lldpXdot1ConfigPortVlanTxEnable;	/* ReadWrite */
};
struct lldpXdot1ConfigVlanNameTable_data {
	struct lldpXdot1ConfigVlanNameTable_data *lldpXdot1ConfigVlanNameTable_old;
	uint lldpXdot1ConfigVlanNameTable_rsvs;
	uint lldpXdot1ConfigVlanNameTable_tsts;
	uint lldpXdot1ConfigVlanNameTable_sets;
	uint lldpXdot1ConfigVlanNameTable_request;
	uint lldpXdot1ConfigVlanNameTable_refs;
	uint lldpXdot1ConfigVlanNameTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocVlanId;	/* NoAccess */
	long lldpXdot1ConfigVlanNameTxEnable;	/* ReadWrite */
};
struct lldpXdot1ConfigProtoVlanTable_data {
	struct lldpXdot1ConfigProtoVlanTable_data *lldpXdot1ConfigProtoVlanTable_old;
	uint lldpXdot1ConfigProtoVlanTable_rsvs;
	uint lldpXdot1ConfigProtoVlanTable_tsts;
	uint lldpXdot1ConfigProtoVlanTable_sets;
	uint lldpXdot1ConfigProtoVlanTable_request;
	uint lldpXdot1ConfigProtoVlanTable_refs;
	uint lldpXdot1ConfigProtoVlanTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocProtoVlanId;	/* NoAccess */
	long lldpXdot1ConfigProtoVlanTxEnable;	/* ReadWrite */
};
struct lldpXdot1ConfigProtocolTable_data {
	struct lldpXdot1ConfigProtocolTable_data *lldpXdot1ConfigProtocolTable_old;
	uint lldpXdot1ConfigProtocolTable_rsvs;
	uint lldpXdot1ConfigProtocolTable_tsts;
	uint lldpXdot1ConfigProtocolTable_sets;
	uint lldpXdot1ConfigProtocolTable_request;
	uint lldpXdot1ConfigProtocolTable_refs;
	uint lldpXdot1ConfigProtocolTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocProtocolIndex;	/* NoAccess */
	long lldpXdot1ConfigProtocolTxEnable;	/* ReadWrite */
};
struct lldpXdot1LocTable_data {
	struct lldpXdot1LocTable_data *lldpXdot1LocTable_old;
	uint lldpXdot1LocTable_rsvs;
	uint lldpXdot1LocTable_tsts;
	uint lldpXdot1LocTable_sets;
	uint lldpXdot1LocTable_request;
	uint lldpXdot1LocTable_refs;
	uint lldpXdot1LocTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocPortVlanId;	/* ReadOnly */
};
struct lldpXdot1LocProtoVlanTable_data {
	struct lldpXdot1LocProtoVlanTable_data *lldpXdot1LocProtoVlanTable_old;
	uint lldpXdot1LocProtoVlanTable_rsvs;
	uint lldpXdot1LocProtoVlanTable_tsts;
	uint lldpXdot1LocProtoVlanTable_sets;
	uint lldpXdot1LocProtoVlanTable_request;
	uint lldpXdot1LocProtoVlanTable_refs;
	uint lldpXdot1LocProtoVlanTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocProtoVlanId;	/* NoAccess */
	long lldpXdot1LocProtoVlanSupported;	/* ReadOnly */
	long lldpXdot1LocProtoVlanEnabled;	/* ReadOnly */
};
struct lldpXdot1LocVlanNameTable_data {
	struct lldpXdot1LocVlanNameTable_data *lldpXdot1LocVlanNameTable_old;
	uint lldpXdot1LocVlanNameTable_rsvs;
	uint lldpXdot1LocVlanNameTable_tsts;
	uint lldpXdot1LocVlanNameTable_sets;
	uint lldpXdot1LocVlanNameTable_request;
	uint lldpXdot1LocVlanNameTable_refs;
	uint lldpXdot1LocVlanNameTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocVlanId;	/* NoAccess */
	uint8_t *lldpXdot1LocVlanName;	/* ReadOnly */
	size_t lldpXdot1LocVlanNameLen;
};
struct lldpXdot1LocProtocolTable_data {
	struct lldpXdot1LocProtocolTable_data *lldpXdot1LocProtocolTable_old;
	uint lldpXdot1LocProtocolTable_rsvs;
	uint lldpXdot1LocProtocolTable_tsts;
	uint lldpXdot1LocProtocolTable_sets;
	uint lldpXdot1LocProtocolTable_request;
	uint lldpXdot1LocProtocolTable_refs;
	uint lldpXdot1LocProtocolTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot1LocProtocolIndex;	/* NoAccess */
	uint8_t *lldpXdot1LocProtocolId;	/* ReadOnly */
	size_t lldpXdot1LocProtocolIdLen;
};
struct lldpXdot1RemTable_data {
	struct lldpXdot1RemTable_data *lldpXdot1RemTable_old;
	uint lldpXdot1RemTable_rsvs;
	uint lldpXdot1RemTable_tsts;
	uint lldpXdot1RemTable_sets;
	uint lldpXdot1RemTable_request;
	uint lldpXdot1RemTable_refs;
	uint lldpXdot1RemTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot1RemPortVlanId;	/* ReadOnly */
};
struct lldpXdot1RemProtoVlanTable_data {
	struct lldpXdot1RemProtoVlanTable_data *lldpXdot1RemProtoVlanTable_old;
	uint lldpXdot1RemProtoVlanTable_rsvs;
	uint lldpXdot1RemProtoVlanTable_tsts;
	uint lldpXdot1RemProtoVlanTable_sets;
	uint lldpXdot1RemProtoVlanTable_request;
	uint lldpXdot1RemProtoVlanTable_refs;
	uint lldpXdot1RemProtoVlanTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot1RemProtoVlanId;	/* NoAccess */
	long lldpXdot1RemProtoVlanSupported;	/* ReadOnly */
	long lldpXdot1RemProtoVlanEnabled;	/* ReadOnly */
};
struct lldpXdot1RemVlanNameTable_data {
	struct lldpXdot1RemVlanNameTable_data *lldpXdot1RemVlanNameTable_old;
	uint lldpXdot1RemVlanNameTable_rsvs;
	uint lldpXdot1RemVlanNameTable_tsts;
	uint lldpXdot1RemVlanNameTable_sets;
	uint lldpXdot1RemVlanNameTable_request;
	uint lldpXdot1RemVlanNameTable_refs;
	uint lldpXdot1RemVlanNameTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot1RemVlanId;	/* NoAccess */
	uint8_t *lldpXdot1RemVlanName;	/* ReadOnly */
	size_t lldpXdot1RemVlanNameLen;
};
struct lldpXdot1RemProtocolTable_data {
	struct lldpXdot1RemProtocolTable_data *lldpXdot1RemProtocolTable_old;
	uint lldpXdot1RemProtocolTable_rsvs;
	uint lldpXdot1RemProtocolTable_tsts;
	uint lldpXdot1RemProtocolTable_sets;
	uint lldpXdot1RemProtocolTable_request;
	uint lldpXdot1RemProtocolTable_refs;
	uint lldpXdot1RemProtocolTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot1RemProtocolIndex;	/* NoAccess */
	uint8_t *lldpXdot1RemProtocolId;	/* ReadOnly */
	size_t lldpXdot1RemProtocolIdLen;
};

/* storage declarations */
extern struct lldpXdot1MIB_data *lldpXdot1MIBStorage;
extern struct header_complex_index *lldpXdot1ConfigPortVlanTableStorage;
extern struct header_complex_index *lldpXdot1ConfigVlanNameTableStorage;
extern struct header_complex_index *lldpXdot1ConfigProtoVlanTableStorage;
extern struct header_complex_index *lldpXdot1ConfigProtocolTableStorage;
extern struct header_complex_index *lldpXdot1LocTableStorage;
extern struct header_complex_index *lldpXdot1LocProtoVlanTableStorage;
extern struct header_complex_index *lldpXdot1LocVlanNameTableStorage;
extern struct header_complex_index *lldpXdot1LocProtocolTableStorage;
extern struct header_complex_index *lldpXdot1RemTableStorage;
extern struct header_complex_index *lldpXdot1RemProtoVlanTableStorage;
extern struct header_complex_index *lldpXdot1RemVlanNameTableStorage;
extern struct header_complex_index *lldpXdot1RemProtocolTableStorage;

/* enum definitions from the covered mib sections */

#define LLDPXDOT1CONFIGPORTVLANTXENABLE_TRUE     1
#define LLDPXDOT1CONFIGPORTVLANTXENABLE_FALSE    2

#define LLDPXDOT1CONFIGVLANNAMETXENABLE_TRUE     1
#define LLDPXDOT1CONFIGVLANNAMETXENABLE_FALSE    2

#define LLDPXDOT1CONFIGPROTOVLANTXENABLE_TRUE    1
#define LLDPXDOT1CONFIGPROTOVLANTXENABLE_FALSE   2

#define LLDPXDOT1CONFIGPROTOCOLTXENABLE_TRUE     1
#define LLDPXDOT1CONFIGPROTOCOLTXENABLE_FALSE    2

#define LLDPXDOT1LOCPROTOVLANSUPPORTED_TRUE      1
#define LLDPXDOT1LOCPROTOVLANSUPPORTED_FALSE     2

#define LLDPXDOT1LOCPROTOVLANENABLED_TRUE        1
#define LLDPXDOT1LOCPROTOVLANENABLED_FALSE       2

#define LLDPXDOT1REMPROTOVLANSUPPORTED_TRUE      1
#define LLDPXDOT1REMPROTOVLANSUPPORTED_FALSE     2

#define LLDPXDOT1REMPROTOVLANENABLED_TRUE        1
#define LLDPXDOT1REMPROTOVLANENABLED_FALSE       2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid lldpXdot1Compliance_oid[12];
extern oid lldpXdot1ConfigGroup_oid[12];
extern oid lldpXdot1LocSysGroup_oid[12];
extern oid lldpXdot1RemSysGroup_oid[12];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_lldpXdot1MIB(void);
void deinit_lldpXdot1MIB(void);
int term_lldpXdot1MIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lldpXdot1MIB;
struct lldpXdot1MIB_data *lldpXdot1MIB_create(void);
struct lldpXdot1MIB_data *lldpXdot1MIB_duplicate(struct lldpXdot1MIB_data *);
int lldpXdot1MIB_destroy(struct lldpXdot1MIB_data **);
int lldpXdot1MIB_add(struct lldpXdot1MIB_data *);
void parse_lldpXdot1MIB(const char *, char *);
SNMPCallback store_lldpXdot1MIB;
void refresh_lldpXdot1MIB(int);
FindVarMethod var_lldpXdot1ConfigPortVlanTable;
struct lldpXdot1ConfigPortVlanTable_data *lldpXdot1ConfigPortVlanTable_create(void);
struct lldpXdot1ConfigPortVlanTable_data *lldpXdot1ConfigPortVlanTable_duplicate(struct lldpXdot1ConfigPortVlanTable_data *);
int lldpXdot1ConfigPortVlanTable_destroy(struct lldpXdot1ConfigPortVlanTable_data **);
int lldpXdot1ConfigPortVlanTable_add(struct lldpXdot1ConfigPortVlanTable_data *);
int lldpXdot1ConfigPortVlanTable_del(struct lldpXdot1ConfigPortVlanTable_data *);
void parse_lldpXdot1ConfigPortVlanTable(const char *, char *);
SNMPCallback store_lldpXdot1ConfigPortVlanTable;
void refresh_lldpXdot1ConfigPortVlanTable(int);
FindVarMethod var_lldpXdot1ConfigVlanNameTable;
struct lldpXdot1ConfigVlanNameTable_data *lldpXdot1ConfigVlanNameTable_create(void);
struct lldpXdot1ConfigVlanNameTable_data *lldpXdot1ConfigVlanNameTable_duplicate(struct lldpXdot1ConfigVlanNameTable_data *);
int lldpXdot1ConfigVlanNameTable_destroy(struct lldpXdot1ConfigVlanNameTable_data **);
int lldpXdot1ConfigVlanNameTable_add(struct lldpXdot1ConfigVlanNameTable_data *);
int lldpXdot1ConfigVlanNameTable_del(struct lldpXdot1ConfigVlanNameTable_data *);
void parse_lldpXdot1ConfigVlanNameTable(const char *, char *);
SNMPCallback store_lldpXdot1ConfigVlanNameTable;
void refresh_lldpXdot1ConfigVlanNameTable(int);
FindVarMethod var_lldpXdot1ConfigProtoVlanTable;
struct lldpXdot1ConfigProtoVlanTable_data *lldpXdot1ConfigProtoVlanTable_create(void);
struct lldpXdot1ConfigProtoVlanTable_data *lldpXdot1ConfigProtoVlanTable_duplicate(struct lldpXdot1ConfigProtoVlanTable_data *);
int lldpXdot1ConfigProtoVlanTable_destroy(struct lldpXdot1ConfigProtoVlanTable_data **);
int lldpXdot1ConfigProtoVlanTable_add(struct lldpXdot1ConfigProtoVlanTable_data *);
int lldpXdot1ConfigProtoVlanTable_del(struct lldpXdot1ConfigProtoVlanTable_data *);
void parse_lldpXdot1ConfigProtoVlanTable(const char *, char *);
SNMPCallback store_lldpXdot1ConfigProtoVlanTable;
void refresh_lldpXdot1ConfigProtoVlanTable(int);
FindVarMethod var_lldpXdot1ConfigProtocolTable;
struct lldpXdot1ConfigProtocolTable_data *lldpXdot1ConfigProtocolTable_create(void);
struct lldpXdot1ConfigProtocolTable_data *lldpXdot1ConfigProtocolTable_duplicate(struct lldpXdot1ConfigProtocolTable_data *);
int lldpXdot1ConfigProtocolTable_destroy(struct lldpXdot1ConfigProtocolTable_data **);
int lldpXdot1ConfigProtocolTable_add(struct lldpXdot1ConfigProtocolTable_data *);
int lldpXdot1ConfigProtocolTable_del(struct lldpXdot1ConfigProtocolTable_data *);
void parse_lldpXdot1ConfigProtocolTable(const char *, char *);
SNMPCallback store_lldpXdot1ConfigProtocolTable;
void refresh_lldpXdot1ConfigProtocolTable(int);
FindVarMethod var_lldpXdot1LocTable;
struct lldpXdot1LocTable_data *lldpXdot1LocTable_create(void);
struct lldpXdot1LocTable_data *lldpXdot1LocTable_duplicate(struct lldpXdot1LocTable_data *);
int lldpXdot1LocTable_destroy(struct lldpXdot1LocTable_data **);
int lldpXdot1LocTable_add(struct lldpXdot1LocTable_data *);
int lldpXdot1LocTable_del(struct lldpXdot1LocTable_data *);
void parse_lldpXdot1LocTable(const char *, char *);
SNMPCallback store_lldpXdot1LocTable;
void refresh_lldpXdot1LocTable(int);
FindVarMethod var_lldpXdot1LocProtoVlanTable;
struct lldpXdot1LocProtoVlanTable_data *lldpXdot1LocProtoVlanTable_create(void);
struct lldpXdot1LocProtoVlanTable_data *lldpXdot1LocProtoVlanTable_duplicate(struct lldpXdot1LocProtoVlanTable_data *);
int lldpXdot1LocProtoVlanTable_destroy(struct lldpXdot1LocProtoVlanTable_data **);
int lldpXdot1LocProtoVlanTable_add(struct lldpXdot1LocProtoVlanTable_data *);
int lldpXdot1LocProtoVlanTable_del(struct lldpXdot1LocProtoVlanTable_data *);
void parse_lldpXdot1LocProtoVlanTable(const char *, char *);
SNMPCallback store_lldpXdot1LocProtoVlanTable;
void refresh_lldpXdot1LocProtoVlanTable(int);
FindVarMethod var_lldpXdot1LocVlanNameTable;
struct lldpXdot1LocVlanNameTable_data *lldpXdot1LocVlanNameTable_create(void);
struct lldpXdot1LocVlanNameTable_data *lldpXdot1LocVlanNameTable_duplicate(struct lldpXdot1LocVlanNameTable_data *);
int lldpXdot1LocVlanNameTable_destroy(struct lldpXdot1LocVlanNameTable_data **);
int lldpXdot1LocVlanNameTable_add(struct lldpXdot1LocVlanNameTable_data *);
int lldpXdot1LocVlanNameTable_del(struct lldpXdot1LocVlanNameTable_data *);
void parse_lldpXdot1LocVlanNameTable(const char *, char *);
SNMPCallback store_lldpXdot1LocVlanNameTable;
void refresh_lldpXdot1LocVlanNameTable(int);
FindVarMethod var_lldpXdot1LocProtocolTable;
struct lldpXdot1LocProtocolTable_data *lldpXdot1LocProtocolTable_create(void);
struct lldpXdot1LocProtocolTable_data *lldpXdot1LocProtocolTable_duplicate(struct lldpXdot1LocProtocolTable_data *);
int lldpXdot1LocProtocolTable_destroy(struct lldpXdot1LocProtocolTable_data **);
int lldpXdot1LocProtocolTable_add(struct lldpXdot1LocProtocolTable_data *);
int lldpXdot1LocProtocolTable_del(struct lldpXdot1LocProtocolTable_data *);
void parse_lldpXdot1LocProtocolTable(const char *, char *);
SNMPCallback store_lldpXdot1LocProtocolTable;
void refresh_lldpXdot1LocProtocolTable(int);
FindVarMethod var_lldpXdot1RemTable;
struct lldpXdot1RemTable_data *lldpXdot1RemTable_create(void);
struct lldpXdot1RemTable_data *lldpXdot1RemTable_duplicate(struct lldpXdot1RemTable_data *);
int lldpXdot1RemTable_destroy(struct lldpXdot1RemTable_data **);
int lldpXdot1RemTable_add(struct lldpXdot1RemTable_data *);
int lldpXdot1RemTable_del(struct lldpXdot1RemTable_data *);
void parse_lldpXdot1RemTable(const char *, char *);
SNMPCallback store_lldpXdot1RemTable;
void refresh_lldpXdot1RemTable(int);
FindVarMethod var_lldpXdot1RemProtoVlanTable;
struct lldpXdot1RemProtoVlanTable_data *lldpXdot1RemProtoVlanTable_create(void);
struct lldpXdot1RemProtoVlanTable_data *lldpXdot1RemProtoVlanTable_duplicate(struct lldpXdot1RemProtoVlanTable_data *);
int lldpXdot1RemProtoVlanTable_destroy(struct lldpXdot1RemProtoVlanTable_data **);
int lldpXdot1RemProtoVlanTable_add(struct lldpXdot1RemProtoVlanTable_data *);
int lldpXdot1RemProtoVlanTable_del(struct lldpXdot1RemProtoVlanTable_data *);
void parse_lldpXdot1RemProtoVlanTable(const char *, char *);
SNMPCallback store_lldpXdot1RemProtoVlanTable;
void refresh_lldpXdot1RemProtoVlanTable(int);
FindVarMethod var_lldpXdot1RemVlanNameTable;
struct lldpXdot1RemVlanNameTable_data *lldpXdot1RemVlanNameTable_create(void);
struct lldpXdot1RemVlanNameTable_data *lldpXdot1RemVlanNameTable_duplicate(struct lldpXdot1RemVlanNameTable_data *);
int lldpXdot1RemVlanNameTable_destroy(struct lldpXdot1RemVlanNameTable_data **);
int lldpXdot1RemVlanNameTable_add(struct lldpXdot1RemVlanNameTable_data *);
int lldpXdot1RemVlanNameTable_del(struct lldpXdot1RemVlanNameTable_data *);
void parse_lldpXdot1RemVlanNameTable(const char *, char *);
SNMPCallback store_lldpXdot1RemVlanNameTable;
void refresh_lldpXdot1RemVlanNameTable(int);
FindVarMethod var_lldpXdot1RemProtocolTable;
struct lldpXdot1RemProtocolTable_data *lldpXdot1RemProtocolTable_create(void);
struct lldpXdot1RemProtocolTable_data *lldpXdot1RemProtocolTable_duplicate(struct lldpXdot1RemProtocolTable_data *);
int lldpXdot1RemProtocolTable_destroy(struct lldpXdot1RemProtocolTable_data **);
int lldpXdot1RemProtocolTable_add(struct lldpXdot1RemProtocolTable_data *);
int lldpXdot1RemProtocolTable_del(struct lldpXdot1RemProtocolTable_data *);
void parse_lldpXdot1RemProtocolTable(const char *, char *);
SNMPCallback store_lldpXdot1RemProtocolTable;
void refresh_lldpXdot1RemProtocolTable(int);

WriteMethod write_lldpXdot1ConfigPortVlanTxEnable;
WriteMethod write_lldpXdot1ConfigVlanNameTxEnable;
WriteMethod write_lldpXdot1ConfigProtoVlanTxEnable;
WriteMethod write_lldpXdot1ConfigProtocolTxEnable;
#endif				/* __LOCAL_LLDPXDOT1MIB_H__ */
