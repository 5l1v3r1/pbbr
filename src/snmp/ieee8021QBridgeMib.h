/*****************************************************************************

 @(#) src/snmp/ieee8021qbridgemib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021QBRIDGEMIB_H__
#define __LOCAL_IEEE8021QBRIDGEMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021QBridgeMib_data {
	struct ieee8021QBridgeMib_data *ieee8021QBridgeMib_old;
	uint ieee8021QBridgeMib_rsvs;
	uint ieee8021QBridgeMib_tsts;
	uint ieee8021QBridgeMib_sets;
	uint ieee8021QBridgeMib_request;
	struct counter64 ieee8021QBridgeVlanNumDeletes;	/* ReadOnly */
};
struct ieee8021QBridgeTable_data {
	struct ieee8021QBridgeTable_data *ieee8021QBridgeTable_old;
	uint ieee8021QBridgeTable_rsvs;
	uint ieee8021QBridgeTable_tsts;
	uint ieee8021QBridgeTable_sets;
	uint ieee8021QBridgeTable_request;
	uint ieee8021QBridgeTable_refs;
	uint ieee8021QBridgeTable_id;
	ulong ieee8021QBridgeComponentId;	/* NoAccess */
	long ieee8021QBridgeVlanVersionNumber;	/* ReadOnly */
	long ieee8021QBridgeMaxVlanId;	/* ReadOnly */
	ulong ieee8021QBridgeMaxSupportedVlans;	/* ReadOnly */
	long ieee8021QBridgeNumVlans;	/* ReadOnly */
	long ieee8021QBridgeMvrpEnabledStatus;	/* ReadWrite */
};
struct ieee8021QBridgeCVlanPortTable_data {
	struct ieee8021QBridgeCVlanPortTable_data *ieee8021QBridgeCVlanPortTable_old;
	uint ieee8021QBridgeCVlanPortTable_rsvs;
	uint ieee8021QBridgeCVlanPortTable_tsts;
	uint ieee8021QBridgeCVlanPortTable_sets;
	uint ieee8021QBridgeCVlanPortTable_request;
	uint ieee8021QBridgeCVlanPortTable_refs;
	uint ieee8021QBridgeCVlanPortTable_id;
	ulong ieee8021QBridgeCVlanPortComponentId;	/* NoAccess */
	ulong ieee8021QBridgeCVlanPortNumber;	/* NoAccess */
	long ieee8021QBridgeCVlanPortRowStatus;	/* Create */
};
struct ieee8021QBridgeFdbTable_data {
	struct ieee8021QBridgeFdbTable_data *ieee8021QBridgeFdbTable_old;
	uint ieee8021QBridgeFdbTable_rsvs;
	uint ieee8021QBridgeFdbTable_tsts;
	uint ieee8021QBridgeFdbTable_sets;
	uint ieee8021QBridgeFdbTable_request;
	uint ieee8021QBridgeFdbTable_refs;
	uint ieee8021QBridgeFdbTable_id;
	ulong ieee8021QBridgeFdbComponentId;	/* NoAccess */
	ulong ieee8021QBridgeFdbId;	/* NoAccess */
	long ieee8021QBridgeFdbDynamicCount;	/* ReadOnly */
	struct counter64 ieee8021QBridgeFdbLearnedEntryDiscards;	/* ReadOnly */
	long ieee8021QBridgeFdbAgingTime;	/* ReadWrite */
};
struct ieee8021QBridgeTpFdbTable_data {
	struct ieee8021QBridgeTpFdbTable_data *ieee8021QBridgeTpFdbTable_old;
	uint ieee8021QBridgeTpFdbTable_rsvs;
	uint ieee8021QBridgeTpFdbTable_tsts;
	uint ieee8021QBridgeTpFdbTable_sets;
	uint ieee8021QBridgeTpFdbTable_request;
	uint ieee8021QBridgeTpFdbTable_refs;
	uint ieee8021QBridgeTpFdbTable_id;
	ulong ieee8021QBridgeFdbComponentId;	/* NoAccess */
	ulong ieee8021QBridgeFdbId;	/* NoAccess */
	uint8_t *ieee8021QBridgeTpFdbAddress;	/* NoAccess */
	size_t ieee8021QBridgeTpFdbAddressLen;
	ulong ieee8021QBridgeTpFdbPort;	/* ReadOnly */
	long ieee8021QBridgeTpFdbStatus;	/* ReadOnly */
};
struct ieee8021QBridgeTpGroupTable_data {
	struct ieee8021QBridgeTpGroupTable_data *ieee8021QBridgeTpGroupTable_old;
	uint ieee8021QBridgeTpGroupTable_rsvs;
	uint ieee8021QBridgeTpGroupTable_tsts;
	uint ieee8021QBridgeTpGroupTable_sets;
	uint ieee8021QBridgeTpGroupTable_request;
	uint ieee8021QBridgeTpGroupTable_refs;
	uint ieee8021QBridgeTpGroupTable_id;
	ulong ieee8021QBridgeVlanCurrentComponentId;	/* NoAccess */
	ulong ieee8021QBridgeVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeTpGroupAddress;	/* NoAccess */
	size_t ieee8021QBridgeTpGroupAddressLen;
	uint8_t *ieee8021QBridgeTpGroupEgressPorts;	/* ReadOnly */
	size_t ieee8021QBridgeTpGroupEgressPortsLen;
	uint8_t *ieee8021QBridgeTpGroupLearnt;	/* ReadOnly */
	size_t ieee8021QBridgeTpGroupLearntLen;
};
struct ieee8021QBridgeForwardAllTable_data {
	struct ieee8021QBridgeForwardAllTable_data *ieee8021QBridgeForwardAllTable_old;
	uint ieee8021QBridgeForwardAllTable_rsvs;
	uint ieee8021QBridgeForwardAllTable_tsts;
	uint ieee8021QBridgeForwardAllTable_sets;
	uint ieee8021QBridgeForwardAllTable_request;
	uint ieee8021QBridgeForwardAllTable_refs;
	uint ieee8021QBridgeForwardAllTable_id;
	ulong ieee8021QBridgeVlanCurrentComponentId;	/* NoAccess */
	ulong ieee8021QBridgeForwardAllVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeForwardAllPorts;	/* ReadOnly */
	size_t ieee8021QBridgeForwardAllPortsLen;
	uint8_t *ieee8021QBridgeForwardAllStaticPorts;	/* ReadWrite */
	size_t ieee8021QBridgeForwardAllStaticPortsLen;
	uint8_t *ieee8021QBridgeForwardAllForbiddenPorts;	/* ReadWrite */
	size_t ieee8021QBridgeForwardAllForbiddenPortsLen;
};
struct ieee8021QBridgeForwardUnregisteredTable_data {
	struct ieee8021QBridgeForwardUnregisteredTable_data *ieee8021QBridgeForwardUnregisteredTable_old;
	uint ieee8021QBridgeForwardUnregisteredTable_rsvs;
	uint ieee8021QBridgeForwardUnregisteredTable_tsts;
	uint ieee8021QBridgeForwardUnregisteredTable_sets;
	uint ieee8021QBridgeForwardUnregisteredTable_request;
	uint ieee8021QBridgeForwardUnregisteredTable_refs;
	uint ieee8021QBridgeForwardUnregisteredTable_id;
	ulong ieee8021QBridgeVlanCurrentComponentId;	/* NoAccess */
	ulong ieee8021QBridgeForwardUnregisteredVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeForwardUnregisteredPorts;	/* ReadOnly */
	size_t ieee8021QBridgeForwardUnregisteredPortsLen;
	uint8_t *ieee8021QBridgeForwardUnregisteredStaticPorts;	/* ReadWrite */
	size_t ieee8021QBridgeForwardUnregisteredStaticPortsLen;
	uint8_t *ieee8021QBridgeForwardUnregisteredForbiddenPorts;	/* ReadWrite */
	size_t ieee8021QBridgeForwardUnregisteredForbiddenPortsLen;
};
struct ieee8021QBridgeStaticUnicastTable_data {
	struct ieee8021QBridgeStaticUnicastTable_data *ieee8021QBridgeStaticUnicastTable_old;
	uint ieee8021QBridgeStaticUnicastTable_rsvs;
	uint ieee8021QBridgeStaticUnicastTable_tsts;
	uint ieee8021QBridgeStaticUnicastTable_sets;
	uint ieee8021QBridgeStaticUnicastTable_request;
	uint ieee8021QBridgeStaticUnicastTable_refs;
	uint ieee8021QBridgeStaticUnicastTable_id;
	ulong ieee8021QBridgeStaticUnicastComponentId;	/* NoAccess */
	ulong ieee8021QBridgeStaticUnicastVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeStaticUnicastAddress;	/* NoAccess */
	size_t ieee8021QBridgeStaticUnicastAddressLen;
	ulong ieee8021QBridgeStaticUnicastReceivePort;	/* NoAccess */
	uint8_t *ieee8021QBridgeStaticUnicastStaticEgressPorts;	/* Create */
	size_t ieee8021QBridgeStaticUnicastStaticEgressPortsLen;
	uint8_t *ieee8021QBridgeStaticUnicastForbiddenEgressPorts;	/* Create */
	size_t ieee8021QBridgeStaticUnicastForbiddenEgressPortsLen;
	long ieee8021QBridgeStaticUnicastStorageType;	/* Create */
	long ieee8021QBridgeStaticUnicastRowStatus;	/* Create */
};
struct ieee8021QBridgeStaticMulticastTable_data {
	struct ieee8021QBridgeStaticMulticastTable_data *ieee8021QBridgeStaticMulticastTable_old;
	uint ieee8021QBridgeStaticMulticastTable_rsvs;
	uint ieee8021QBridgeStaticMulticastTable_tsts;
	uint ieee8021QBridgeStaticMulticastTable_sets;
	uint ieee8021QBridgeStaticMulticastTable_request;
	uint ieee8021QBridgeStaticMulticastTable_refs;
	uint ieee8021QBridgeStaticMulticastTable_id;
	ulong ieee8021QBridgeVlanCurrentComponentId;	/* NoAccess */
	ulong ieee8021QBridgeVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeStaticMulticastAddress;	/* NoAccess */
	size_t ieee8021QBridgeStaticMulticastAddressLen;
	ulong ieee8021QBridgeStaticMulticastReceivePort;	/* NoAccess */
	uint8_t *ieee8021QBridgeStaticMulticastStaticEgressPorts;	/* Create */
	size_t ieee8021QBridgeStaticMulticastStaticEgressPortsLen;
	uint8_t *ieee8021QBridgeStaticMulticastForbiddenEgressPorts;	/* Create */
	size_t ieee8021QBridgeStaticMulticastForbiddenEgressPortsLen;
	long ieee8021QBridgeStaticMulticastStorageType;	/* Create */
	long ieee8021QBridgeStaticMulticastRowStatus;	/* Create */
};
struct ieee8021QBridgeVlanCurrentTable_data {
	struct ieee8021QBridgeVlanCurrentTable_data *ieee8021QBridgeVlanCurrentTable_old;
	uint ieee8021QBridgeVlanCurrentTable_rsvs;
	uint ieee8021QBridgeVlanCurrentTable_tsts;
	uint ieee8021QBridgeVlanCurrentTable_sets;
	uint ieee8021QBridgeVlanCurrentTable_request;
	uint ieee8021QBridgeVlanCurrentTable_refs;
	uint ieee8021QBridgeVlanCurrentTable_id;
	long ieee8021QBridgeVlanTimeMark;	/* NoAccess */
	ulong ieee8021QBridgeVlanCurrentComponentId;	/* NoAccess */
	ulong ieee8021QBridgeVlanIndex;	/* NoAccess */
	ulong ieee8021QBridgeVlanFdbId;	/* ReadOnly */
	uint8_t *ieee8021QBridgeVlanCurrentEgressPorts;	/* ReadOnly */
	size_t ieee8021QBridgeVlanCurrentEgressPortsLen;
	uint8_t *ieee8021QBridgeVlanUntaggedPorts;	/* ReadOnly */
	size_t ieee8021QBridgeVlanUntaggedPortsLen;
	long ieee8021QBridgeVlanStatus;	/* ReadOnly */
	long ieee8021QBridgeVlanCreationTime;	/* ReadOnly */
};
struct ieee8021QBridgeVlanStaticTable_data {
	struct ieee8021QBridgeVlanStaticTable_data *ieee8021QBridgeVlanStaticTable_old;
	uint ieee8021QBridgeVlanStaticTable_rsvs;
	uint ieee8021QBridgeVlanStaticTable_tsts;
	uint ieee8021QBridgeVlanStaticTable_sets;
	uint ieee8021QBridgeVlanStaticTable_request;
	uint ieee8021QBridgeVlanStaticTable_refs;
	uint ieee8021QBridgeVlanStaticTable_id;
	ulong ieee8021QBridgeVlanStaticComponentId;	/* NoAccess */
	ulong ieee8021QBridgeVlanStaticVlanIndex;	/* NoAccess */
	uint8_t *ieee8021QBridgeVlanStaticName;	/* Create */
	size_t ieee8021QBridgeVlanStaticNameLen;
	uint8_t *ieee8021QBridgeVlanStaticEgressPorts;	/* Create */
	size_t ieee8021QBridgeVlanStaticEgressPortsLen;
	uint8_t *ieee8021QBridgeVlanForbiddenEgressPorts;	/* Create */
	size_t ieee8021QBridgeVlanForbiddenEgressPortsLen;
	uint8_t *ieee8021QBridgeVlanStaticUntaggedPorts;	/* Create */
	size_t ieee8021QBridgeVlanStaticUntaggedPortsLen;
	long ieee8021QBridgeVlanStaticRowStatus;	/* Create */
};
struct ieee8021QBridgeNextFreeLocalVlanTable_data {
	struct ieee8021QBridgeNextFreeLocalVlanTable_data *ieee8021QBridgeNextFreeLocalVlanTable_old;
	uint ieee8021QBridgeNextFreeLocalVlanTable_rsvs;
	uint ieee8021QBridgeNextFreeLocalVlanTable_tsts;
	uint ieee8021QBridgeNextFreeLocalVlanTable_sets;
	uint ieee8021QBridgeNextFreeLocalVlanTable_request;
	uint ieee8021QBridgeNextFreeLocalVlanTable_refs;
	uint ieee8021QBridgeNextFreeLocalVlanTable_id;
	ulong ieee8021QBridgeNextFreeLocalVlanComponentId;	/* NoAccess */
	ulong ieee8021QBridgeNextFreeLocalVlanIndex;	/* ReadOnly */
};
struct ieee8021QBridgePortVlanTable_data {
	struct ieee8021QBridgePortVlanTable_data *ieee8021QBridgePortVlanTable_old;
	uint ieee8021QBridgePortVlanTable_rsvs;
	uint ieee8021QBridgePortVlanTable_tsts;
	uint ieee8021QBridgePortVlanTable_sets;
	uint ieee8021QBridgePortVlanTable_request;
	uint ieee8021QBridgePortVlanTable_refs;
	uint ieee8021QBridgePortVlanTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	ulong ieee8021QBridgePvid;	/* ReadWrite */
	long ieee8021QBridgePortAcceptableFrameTypes;	/* ReadWrite */
	long ieee8021QBridgePortIngressFiltering;	/* ReadWrite */
	long ieee8021QBridgePortMvrpEnabledStatus;	/* ReadWrite */
	struct counter64 ieee8021QBridgePortMvrpFailedRegistrations;	/* ReadOnly */
	uint8_t *ieee8021QBridgePortMvrpLastPduOrigin;	/* ReadOnly */
	size_t ieee8021QBridgePortMvrpLastPduOriginLen;
	long ieee8021QBridgePortRestrictedVlanRegistration;	/* ReadWrite */
};
struct ieee8021QBridgePortVlanStatisticsTable_data {
	struct ieee8021QBridgePortVlanStatisticsTable_data *ieee8021QBridgePortVlanStatisticsTable_old;
	uint ieee8021QBridgePortVlanStatisticsTable_rsvs;
	uint ieee8021QBridgePortVlanStatisticsTable_tsts;
	uint ieee8021QBridgePortVlanStatisticsTable_sets;
	uint ieee8021QBridgePortVlanStatisticsTable_request;
	uint ieee8021QBridgePortVlanStatisticsTable_refs;
	uint ieee8021QBridgePortVlanStatisticsTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	ulong ieee8021QBridgeVlanIndex;	/* NoAccess */
	struct counter64 ieee8021QBridgeTpVlanPortInFrames;	/* ReadOnly */
	struct counter64 ieee8021QBridgeTpVlanPortOutFrames;	/* ReadOnly */
	struct counter64 ieee8021QBridgeTpVlanPortInDiscards;	/* ReadOnly */
};
struct ieee8021QBridgeLearningConstraintsTable_data {
	struct ieee8021QBridgeLearningConstraintsTable_data *ieee8021QBridgeLearningConstraintsTable_old;
	uint ieee8021QBridgeLearningConstraintsTable_rsvs;
	uint ieee8021QBridgeLearningConstraintsTable_tsts;
	uint ieee8021QBridgeLearningConstraintsTable_sets;
	uint ieee8021QBridgeLearningConstraintsTable_request;
	uint ieee8021QBridgeLearningConstraintsTable_refs;
	uint ieee8021QBridgeLearningConstraintsTable_id;
	ulong ieee8021QBridgeLearningConstraintsComponentId;	/* NoAccess */
	ulong ieee8021QBridgeLearningConstraintsVlan;	/* NoAccess */
	long ieee8021QBridgeLearningConstraintsSet;	/* NoAccess */
	long ieee8021QBridgeLearningConstraintsType;	/* Create */
	long ieee8021QBridgeLearningConstraintsStatus;	/* Create */
};
struct ieee8021QBridgeLearningConstraintsDefaultsTable_data {
	struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *ieee8021QBridgeLearningConstraintsDefaultsTable_old;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_rsvs;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_tsts;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_sets;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_request;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_refs;
	uint ieee8021QBridgeLearningConstraintsDefaultsTable_id;
	ulong ieee8021QBridgeLearningConstraintDefaultComponentId;	/* NoAccess */
	long ieee8021QBridgeLearningConstraintDefaultSet;	/* ReadWrite */
	long ieee8021QBridgeLearningConstraintDefaultType;	/* ReadWrite */
};
struct ieee8021QBridgeProtocolGroupTable_data {
	struct ieee8021QBridgeProtocolGroupTable_data *ieee8021QBridgeProtocolGroupTable_old;
	uint ieee8021QBridgeProtocolGroupTable_rsvs;
	uint ieee8021QBridgeProtocolGroupTable_tsts;
	uint ieee8021QBridgeProtocolGroupTable_sets;
	uint ieee8021QBridgeProtocolGroupTable_request;
	uint ieee8021QBridgeProtocolGroupTable_refs;
	uint ieee8021QBridgeProtocolGroupTable_id;
	ulong ieee8021QBridgeProtocolGroupComponentId;	/* NoAccess */
	long ieee8021QBridgeProtocolTemplateFrameType;	/* NoAccess */
	uint8_t *ieee8021QBridgeProtocolTemplateProtocolValue;	/* NoAccess */
	size_t ieee8021QBridgeProtocolTemplateProtocolValueLen;
	long ieee8021QBridgeProtocolGroupId;	/* Create */
	long ieee8021QBridgeProtocolGroupRowStatus;	/* Create */
};
struct ieee8021QBridgeProtocolPortTable_data {
	struct ieee8021QBridgeProtocolPortTable_data *ieee8021QBridgeProtocolPortTable_old;
	uint ieee8021QBridgeProtocolPortTable_rsvs;
	uint ieee8021QBridgeProtocolPortTable_tsts;
	uint ieee8021QBridgeProtocolPortTable_sets;
	uint ieee8021QBridgeProtocolPortTable_request;
	uint ieee8021QBridgeProtocolPortTable_refs;
	uint ieee8021QBridgeProtocolPortTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	long ieee8021QBridgeProtocolPortGroupId;	/* NoAccess */
	long ieee8021QBridgeProtocolPortGroupVid;	/* Create */
	long ieee8021QBridgeProtocolPortRowStatus;	/* Create */
};
struct ieee8021QBridgeVIDXTable_data {
	struct ieee8021QBridgeVIDXTable_data *ieee8021QBridgeVIDXTable_old;
	uint ieee8021QBridgeVIDXTable_rsvs;
	uint ieee8021QBridgeVIDXTable_tsts;
	uint ieee8021QBridgeVIDXTable_sets;
	uint ieee8021QBridgeVIDXTable_request;
	uint ieee8021QBridgeVIDXTable_refs;
	uint ieee8021QBridgeVIDXTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	long ieee8021QBridgeVIDXLocalVid;	/* NoAccess */
	long ieee8021QBridgeVIDXRelayVid;	/* Create */
	long ieee8021QBridgeVIDXRowStatus;	/* Create */
};
struct ieee8021QBridgeEgressVidXTable_data {
	struct ieee8021QBridgeEgressVidXTable_data *ieee8021QBridgeEgressVidXTable_old;
	uint ieee8021QBridgeEgressVidXTable_rsvs;
	uint ieee8021QBridgeEgressVidXTable_tsts;
	uint ieee8021QBridgeEgressVidXTable_sets;
	uint ieee8021QBridgeEgressVidXTable_request;
	uint ieee8021QBridgeEgressVidXTable_refs;
	uint ieee8021QBridgeEgressVidXTable_id;
	ulong ieee8021BridgeBasePortComponentId;	/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	long ieee8021QBridgeEgressVidXRelayVid;	/* NoAccess */
	long ieee8021QBridgeEgressVidXLocalVid;	/* Create */
	long ieee8021QBridgeEgressVidXRowStatus;	/* Create */
};

/* storage declarations */
extern struct ieee8021QBridgeMib_data *ieee8021QBridgeMibStorage;
extern struct header_complex_index *ieee8021QBridgeTableStorage;
extern struct header_complex_index *ieee8021QBridgeCVlanPortTableStorage;
extern struct header_complex_index *ieee8021QBridgeFdbTableStorage;
extern struct header_complex_index *ieee8021QBridgeTpFdbTableStorage;
extern struct header_complex_index *ieee8021QBridgeTpGroupTableStorage;
extern struct header_complex_index *ieee8021QBridgeForwardAllTableStorage;
extern struct header_complex_index *ieee8021QBridgeForwardUnregisteredTableStorage;
extern struct header_complex_index *ieee8021QBridgeStaticUnicastTableStorage;
extern struct header_complex_index *ieee8021QBridgeStaticMulticastTableStorage;
extern struct header_complex_index *ieee8021QBridgeVlanCurrentTableStorage;
extern struct header_complex_index *ieee8021QBridgeVlanStaticTableStorage;
extern struct header_complex_index *ieee8021QBridgeNextFreeLocalVlanTableStorage;
extern struct header_complex_index *ieee8021QBridgePortVlanTableStorage;
extern struct header_complex_index *ieee8021QBridgePortVlanStatisticsTableStorage;
extern struct header_complex_index *ieee8021QBridgeLearningConstraintsTableStorage;
extern struct header_complex_index *ieee8021QBridgeLearningConstraintsDefaultsTableStorage;
extern struct header_complex_index *ieee8021QBridgeProtocolGroupTableStorage;
extern struct header_complex_index *ieee8021QBridgeProtocolPortTableStorage;
extern struct header_complex_index *ieee8021QBridgeVIDXTableStorage;
extern struct header_complex_index *ieee8021QBridgeEgressVidXTableStorage;

/* enum definitions from the covered mib sections */

#define IEEE8021QBRIDGEVLANVERSIONNUMBER_VERSION1 1
#define IEEE8021QBRIDGEVLANVERSIONNUMBER_VERSION2 2

#define IEEE8021QBRIDGEMVRPENABLEDSTATUS_TRUE    1
#define IEEE8021QBRIDGEMVRPENABLEDSTATUS_FALSE   2

#define IEEE8021QBRIDGETPFDBSTATUS_OTHER         1
#define IEEE8021QBRIDGETPFDBSTATUS_INVALID       2
#define IEEE8021QBRIDGETPFDBSTATUS_LEARNED       3
#define IEEE8021QBRIDGETPFDBSTATUS_SELF          4
#define IEEE8021QBRIDGETPFDBSTATUS_MGMT          5

#define IEEE8021QBRIDGEVLANSTATUS_OTHER          1
#define IEEE8021QBRIDGEVLANSTATUS_PERMANENT      2
#define IEEE8021QBRIDGEVLANSTATUS_DYNAMICMVRP    3

#define IEEE8021QBRIDGEPORTACCEPTABLEFRAMETYPES_ADMITALL 1
#define IEEE8021QBRIDGEPORTACCEPTABLEFRAMETYPES_ADMITUNTAGGEDANDPRIORITY 2
#define IEEE8021QBRIDGEPORTACCEPTABLEFRAMETYPES_ADMITTAGGED 3

#define IEEE8021QBRIDGEPORTINGRESSFILTERING_TRUE 1
#define IEEE8021QBRIDGEPORTINGRESSFILTERING_FALSE 2

#define IEEE8021QBRIDGEPORTMVRPENABLEDSTATUS_TRUE 1
#define IEEE8021QBRIDGEPORTMVRPENABLEDSTATUS_FALSE 2

#define IEEE8021QBRIDGEPORTRESTRICTEDVLANREGISTRATION_TRUE 1
#define IEEE8021QBRIDGEPORTRESTRICTEDVLANREGISTRATION_FALSE 2

#define IEEE8021QBRIDGELEARNINGCONSTRAINTSTYPE_INDEPENDENT 1
#define IEEE8021QBRIDGELEARNINGCONSTRAINTSTYPE_SHARED 2

#define IEEE8021QBRIDGELEARNINGCONSTRAINTDEFAULTTYPE_INDEPENDENT 1
#define IEEE8021QBRIDGELEARNINGCONSTRAINTDEFAULTTYPE_SHARED 2

#define IEEE8021QBRIDGEPROTOCOLTEMPLATEFRAMETYPE_ETHERNET 1
#define IEEE8021QBRIDGEPROTOCOLTEMPLATEFRAMETYPE_RFC1042 2
#define IEEE8021QBRIDGEPROTOCOLTEMPLATEFRAMETYPE_SNAP8021H 3
#define IEEE8021QBRIDGEPROTOCOLTEMPLATEFRAMETYPE_SNAPOTHER 4
#define IEEE8021QBRIDGEPROTOCOLTEMPLATEFRAMETYPE_LLCOTHER 5

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021QBridgeBaseGroup_oid[11];
extern oid ieee8021QBridgeFdbUnicastGroup_oid[11];
extern oid ieee8021QBridgeFdbMulticastGroup_oid[11];
extern oid ieee8021QBridgeServiceRequirementGroup_oid[11];
extern oid ieee8021QBridgeFdbStaticGroup_oid[11];
extern oid ieee8021QBridgeVlanGroup_oid[11];
extern oid ieee8021QBridgeVlanStaticGroup_oid[11];
extern oid ieee8021QBridgeVlanStatisticsGroup_oid[11];
extern oid ieee8021QBridgeLearningConstraintsGroup_oid[11];
extern oid ieee8021QBridgeLearningConstraintDefaultGroup_oid[11];
extern oid ieee8021QBridgeClassificationDeviceGroup_oid[11];
extern oid ieee8021QBridgeClassificationPortGroup_oid[11];
extern oid ieee8021QBridgePortGroup2_oid[11];
extern oid ieee8021QBridgeCVlanPortGroup_oid[11];
extern oid ieee8021QBridgeVIDXGroup_oid[11];
extern oid ieee8021QBridgeEgressVIDXGroup_oid[11];
extern oid ieee8021QBridgeCompliance_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ieee8021QBridgeMib(void);
void deinit_ieee8021QBridgeMib(void);
int term_ieee8021QBridgeMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021QBridgeMib;
struct ieee8021QBridgeMib_data *ieee8021QBridgeMib_create(void);
struct ieee8021QBridgeMib_data *ieee8021QBridgeMib_duplicate(struct ieee8021QBridgeMib_data *);
int ieee8021QBridgeMib_destroy(struct ieee8021QBridgeMib_data **);
int ieee8021QBridgeMib_add(struct ieee8021QBridgeMib_data *);
void parse_ieee8021QBridgeMib(const char *, char *);
SNMPCallback store_ieee8021QBridgeMib;
void refresh_ieee8021QBridgeMib(int);
FindVarMethod var_ieee8021QBridgeTable;
struct ieee8021QBridgeTable_data *ieee8021QBridgeTable_create(void);
struct ieee8021QBridgeTable_data *ieee8021QBridgeTable_duplicate(struct ieee8021QBridgeTable_data *);
int ieee8021QBridgeTable_destroy(struct ieee8021QBridgeTable_data **);
int ieee8021QBridgeTable_add(struct ieee8021QBridgeTable_data *);
int ieee8021QBridgeTable_del(struct ieee8021QBridgeTable_data *);
void parse_ieee8021QBridgeTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeTable;
void refresh_ieee8021QBridgeTable(int);
FindVarMethod var_ieee8021QBridgeCVlanPortTable;
struct ieee8021QBridgeCVlanPortTable_data *ieee8021QBridgeCVlanPortTable_create(void);
struct ieee8021QBridgeCVlanPortTable_data *ieee8021QBridgeCVlanPortTable_duplicate(struct ieee8021QBridgeCVlanPortTable_data *);
int ieee8021QBridgeCVlanPortTable_destroy(struct ieee8021QBridgeCVlanPortTable_data **);
int ieee8021QBridgeCVlanPortTable_add(struct ieee8021QBridgeCVlanPortTable_data *);
int ieee8021QBridgeCVlanPortTable_del(struct ieee8021QBridgeCVlanPortTable_data *);
void parse_ieee8021QBridgeCVlanPortTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeCVlanPortTable;
void refresh_ieee8021QBridgeCVlanPortTable(int);
FindVarMethod var_ieee8021QBridgeFdbTable;
struct ieee8021QBridgeFdbTable_data *ieee8021QBridgeFdbTable_create(void);
struct ieee8021QBridgeFdbTable_data *ieee8021QBridgeFdbTable_duplicate(struct ieee8021QBridgeFdbTable_data *);
int ieee8021QBridgeFdbTable_destroy(struct ieee8021QBridgeFdbTable_data **);
int ieee8021QBridgeFdbTable_add(struct ieee8021QBridgeFdbTable_data *);
int ieee8021QBridgeFdbTable_del(struct ieee8021QBridgeFdbTable_data *);
void parse_ieee8021QBridgeFdbTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeFdbTable;
void refresh_ieee8021QBridgeFdbTable(int);
FindVarMethod var_ieee8021QBridgeTpFdbTable;
struct ieee8021QBridgeTpFdbTable_data *ieee8021QBridgeTpFdbTable_create(void);
struct ieee8021QBridgeTpFdbTable_data *ieee8021QBridgeTpFdbTable_duplicate(struct ieee8021QBridgeTpFdbTable_data *);
int ieee8021QBridgeTpFdbTable_destroy(struct ieee8021QBridgeTpFdbTable_data **);
int ieee8021QBridgeTpFdbTable_add(struct ieee8021QBridgeTpFdbTable_data *);
int ieee8021QBridgeTpFdbTable_del(struct ieee8021QBridgeTpFdbTable_data *);
void parse_ieee8021QBridgeTpFdbTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeTpFdbTable;
void refresh_ieee8021QBridgeTpFdbTable(int);
FindVarMethod var_ieee8021QBridgeTpGroupTable;
struct ieee8021QBridgeTpGroupTable_data *ieee8021QBridgeTpGroupTable_create(void);
struct ieee8021QBridgeTpGroupTable_data *ieee8021QBridgeTpGroupTable_duplicate(struct ieee8021QBridgeTpGroupTable_data *);
int ieee8021QBridgeTpGroupTable_destroy(struct ieee8021QBridgeTpGroupTable_data **);
int ieee8021QBridgeTpGroupTable_add(struct ieee8021QBridgeTpGroupTable_data *);
int ieee8021QBridgeTpGroupTable_del(struct ieee8021QBridgeTpGroupTable_data *);
void parse_ieee8021QBridgeTpGroupTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeTpGroupTable;
void refresh_ieee8021QBridgeTpGroupTable(int);
FindVarMethod var_ieee8021QBridgeForwardAllTable;
struct ieee8021QBridgeForwardAllTable_data *ieee8021QBridgeForwardAllTable_create(void);
struct ieee8021QBridgeForwardAllTable_data *ieee8021QBridgeForwardAllTable_duplicate(struct ieee8021QBridgeForwardAllTable_data *);
int ieee8021QBridgeForwardAllTable_destroy(struct ieee8021QBridgeForwardAllTable_data **);
int ieee8021QBridgeForwardAllTable_add(struct ieee8021QBridgeForwardAllTable_data *);
int ieee8021QBridgeForwardAllTable_del(struct ieee8021QBridgeForwardAllTable_data *);
void parse_ieee8021QBridgeForwardAllTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeForwardAllTable;
void refresh_ieee8021QBridgeForwardAllTable(int);
FindVarMethod var_ieee8021QBridgeForwardUnregisteredTable;
struct ieee8021QBridgeForwardUnregisteredTable_data *ieee8021QBridgeForwardUnregisteredTable_create(void);
struct ieee8021QBridgeForwardUnregisteredTable_data *ieee8021QBridgeForwardUnregisteredTable_duplicate(struct ieee8021QBridgeForwardUnregisteredTable_data *);
int ieee8021QBridgeForwardUnregisteredTable_destroy(struct ieee8021QBridgeForwardUnregisteredTable_data **);
int ieee8021QBridgeForwardUnregisteredTable_add(struct ieee8021QBridgeForwardUnregisteredTable_data *);
int ieee8021QBridgeForwardUnregisteredTable_del(struct ieee8021QBridgeForwardUnregisteredTable_data *);
void parse_ieee8021QBridgeForwardUnregisteredTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeForwardUnregisteredTable;
void refresh_ieee8021QBridgeForwardUnregisteredTable(int);
FindVarMethod var_ieee8021QBridgeStaticUnicastTable;
struct ieee8021QBridgeStaticUnicastTable_data *ieee8021QBridgeStaticUnicastTable_create(void);
struct ieee8021QBridgeStaticUnicastTable_data *ieee8021QBridgeStaticUnicastTable_duplicate(struct ieee8021QBridgeStaticUnicastTable_data *);
int ieee8021QBridgeStaticUnicastTable_destroy(struct ieee8021QBridgeStaticUnicastTable_data **);
int ieee8021QBridgeStaticUnicastTable_add(struct ieee8021QBridgeStaticUnicastTable_data *);
int ieee8021QBridgeStaticUnicastTable_del(struct ieee8021QBridgeStaticUnicastTable_data *);
void parse_ieee8021QBridgeStaticUnicastTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeStaticUnicastTable;
void refresh_ieee8021QBridgeStaticUnicastTable(int);
FindVarMethod var_ieee8021QBridgeStaticMulticastTable;
struct ieee8021QBridgeStaticMulticastTable_data *ieee8021QBridgeStaticMulticastTable_create(void);
struct ieee8021QBridgeStaticMulticastTable_data *ieee8021QBridgeStaticMulticastTable_duplicate(struct ieee8021QBridgeStaticMulticastTable_data *);
int ieee8021QBridgeStaticMulticastTable_destroy(struct ieee8021QBridgeStaticMulticastTable_data **);
int ieee8021QBridgeStaticMulticastTable_add(struct ieee8021QBridgeStaticMulticastTable_data *);
int ieee8021QBridgeStaticMulticastTable_del(struct ieee8021QBridgeStaticMulticastTable_data *);
void parse_ieee8021QBridgeStaticMulticastTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeStaticMulticastTable;
void refresh_ieee8021QBridgeStaticMulticastTable(int);
FindVarMethod var_ieee8021QBridgeVlanCurrentTable;
struct ieee8021QBridgeVlanCurrentTable_data *ieee8021QBridgeVlanCurrentTable_create(void);
struct ieee8021QBridgeVlanCurrentTable_data *ieee8021QBridgeVlanCurrentTable_duplicate(struct ieee8021QBridgeVlanCurrentTable_data *);
int ieee8021QBridgeVlanCurrentTable_destroy(struct ieee8021QBridgeVlanCurrentTable_data **);
int ieee8021QBridgeVlanCurrentTable_add(struct ieee8021QBridgeVlanCurrentTable_data *);
int ieee8021QBridgeVlanCurrentTable_del(struct ieee8021QBridgeVlanCurrentTable_data *);
void parse_ieee8021QBridgeVlanCurrentTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeVlanCurrentTable;
void refresh_ieee8021QBridgeVlanCurrentTable(int);
FindVarMethod var_ieee8021QBridgeVlanStaticTable;
struct ieee8021QBridgeVlanStaticTable_data *ieee8021QBridgeVlanStaticTable_create(void);
struct ieee8021QBridgeVlanStaticTable_data *ieee8021QBridgeVlanStaticTable_duplicate(struct ieee8021QBridgeVlanStaticTable_data *);
int ieee8021QBridgeVlanStaticTable_destroy(struct ieee8021QBridgeVlanStaticTable_data **);
int ieee8021QBridgeVlanStaticTable_add(struct ieee8021QBridgeVlanStaticTable_data *);
int ieee8021QBridgeVlanStaticTable_del(struct ieee8021QBridgeVlanStaticTable_data *);
void parse_ieee8021QBridgeVlanStaticTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeVlanStaticTable;
void refresh_ieee8021QBridgeVlanStaticTable(int);
FindVarMethod var_ieee8021QBridgeNextFreeLocalVlanTable;
struct ieee8021QBridgeNextFreeLocalVlanTable_data *ieee8021QBridgeNextFreeLocalVlanTable_create(void);
struct ieee8021QBridgeNextFreeLocalVlanTable_data *ieee8021QBridgeNextFreeLocalVlanTable_duplicate(struct ieee8021QBridgeNextFreeLocalVlanTable_data *);
int ieee8021QBridgeNextFreeLocalVlanTable_destroy(struct ieee8021QBridgeNextFreeLocalVlanTable_data **);
int ieee8021QBridgeNextFreeLocalVlanTable_add(struct ieee8021QBridgeNextFreeLocalVlanTable_data *);
int ieee8021QBridgeNextFreeLocalVlanTable_del(struct ieee8021QBridgeNextFreeLocalVlanTable_data *);
void parse_ieee8021QBridgeNextFreeLocalVlanTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeNextFreeLocalVlanTable;
void refresh_ieee8021QBridgeNextFreeLocalVlanTable(int);
FindVarMethod var_ieee8021QBridgePortVlanTable;
struct ieee8021QBridgePortVlanTable_data *ieee8021QBridgePortVlanTable_create(void);
struct ieee8021QBridgePortVlanTable_data *ieee8021QBridgePortVlanTable_duplicate(struct ieee8021QBridgePortVlanTable_data *);
int ieee8021QBridgePortVlanTable_destroy(struct ieee8021QBridgePortVlanTable_data **);
int ieee8021QBridgePortVlanTable_add(struct ieee8021QBridgePortVlanTable_data *);
int ieee8021QBridgePortVlanTable_del(struct ieee8021QBridgePortVlanTable_data *);
void parse_ieee8021QBridgePortVlanTable(const char *, char *);
SNMPCallback store_ieee8021QBridgePortVlanTable;
void refresh_ieee8021QBridgePortVlanTable(int);
FindVarMethod var_ieee8021QBridgePortVlanStatisticsTable;
struct ieee8021QBridgePortVlanStatisticsTable_data *ieee8021QBridgePortVlanStatisticsTable_create(void);
struct ieee8021QBridgePortVlanStatisticsTable_data *ieee8021QBridgePortVlanStatisticsTable_duplicate(struct ieee8021QBridgePortVlanStatisticsTable_data *);
int ieee8021QBridgePortVlanStatisticsTable_destroy(struct ieee8021QBridgePortVlanStatisticsTable_data **);
int ieee8021QBridgePortVlanStatisticsTable_add(struct ieee8021QBridgePortVlanStatisticsTable_data *);
int ieee8021QBridgePortVlanStatisticsTable_del(struct ieee8021QBridgePortVlanStatisticsTable_data *);
void parse_ieee8021QBridgePortVlanStatisticsTable(const char *, char *);
SNMPCallback store_ieee8021QBridgePortVlanStatisticsTable;
void refresh_ieee8021QBridgePortVlanStatisticsTable(int);
FindVarMethod var_ieee8021QBridgeLearningConstraintsTable;
struct ieee8021QBridgeLearningConstraintsTable_data *ieee8021QBridgeLearningConstraintsTable_create(void);
struct ieee8021QBridgeLearningConstraintsTable_data *ieee8021QBridgeLearningConstraintsTable_duplicate(struct ieee8021QBridgeLearningConstraintsTable_data *);
int ieee8021QBridgeLearningConstraintsTable_destroy(struct ieee8021QBridgeLearningConstraintsTable_data **);
int ieee8021QBridgeLearningConstraintsTable_add(struct ieee8021QBridgeLearningConstraintsTable_data *);
int ieee8021QBridgeLearningConstraintsTable_del(struct ieee8021QBridgeLearningConstraintsTable_data *);
void parse_ieee8021QBridgeLearningConstraintsTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeLearningConstraintsTable;
void refresh_ieee8021QBridgeLearningConstraintsTable(int);
FindVarMethod var_ieee8021QBridgeLearningConstraintsDefaultsTable;
struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *ieee8021QBridgeLearningConstraintsDefaultsTable_create(void);
struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *ieee8021QBridgeLearningConstraintsDefaultsTable_duplicate(struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *);
int ieee8021QBridgeLearningConstraintsDefaultsTable_destroy(struct ieee8021QBridgeLearningConstraintsDefaultsTable_data **);
int ieee8021QBridgeLearningConstraintsDefaultsTable_add(struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *);
int ieee8021QBridgeLearningConstraintsDefaultsTable_del(struct ieee8021QBridgeLearningConstraintsDefaultsTable_data *);
void parse_ieee8021QBridgeLearningConstraintsDefaultsTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeLearningConstraintsDefaultsTable;
void refresh_ieee8021QBridgeLearningConstraintsDefaultsTable(int);
FindVarMethod var_ieee8021QBridgeProtocolGroupTable;
struct ieee8021QBridgeProtocolGroupTable_data *ieee8021QBridgeProtocolGroupTable_create(void);
struct ieee8021QBridgeProtocolGroupTable_data *ieee8021QBridgeProtocolGroupTable_duplicate(struct ieee8021QBridgeProtocolGroupTable_data *);
int ieee8021QBridgeProtocolGroupTable_destroy(struct ieee8021QBridgeProtocolGroupTable_data **);
int ieee8021QBridgeProtocolGroupTable_add(struct ieee8021QBridgeProtocolGroupTable_data *);
int ieee8021QBridgeProtocolGroupTable_del(struct ieee8021QBridgeProtocolGroupTable_data *);
void parse_ieee8021QBridgeProtocolGroupTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeProtocolGroupTable;
void refresh_ieee8021QBridgeProtocolGroupTable(int);
FindVarMethod var_ieee8021QBridgeProtocolPortTable;
struct ieee8021QBridgeProtocolPortTable_data *ieee8021QBridgeProtocolPortTable_create(void);
struct ieee8021QBridgeProtocolPortTable_data *ieee8021QBridgeProtocolPortTable_duplicate(struct ieee8021QBridgeProtocolPortTable_data *);
int ieee8021QBridgeProtocolPortTable_destroy(struct ieee8021QBridgeProtocolPortTable_data **);
int ieee8021QBridgeProtocolPortTable_add(struct ieee8021QBridgeProtocolPortTable_data *);
int ieee8021QBridgeProtocolPortTable_del(struct ieee8021QBridgeProtocolPortTable_data *);
void parse_ieee8021QBridgeProtocolPortTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeProtocolPortTable;
void refresh_ieee8021QBridgeProtocolPortTable(int);
FindVarMethod var_ieee8021QBridgeVIDXTable;
struct ieee8021QBridgeVIDXTable_data *ieee8021QBridgeVIDXTable_create(void);
struct ieee8021QBridgeVIDXTable_data *ieee8021QBridgeVIDXTable_duplicate(struct ieee8021QBridgeVIDXTable_data *);
int ieee8021QBridgeVIDXTable_destroy(struct ieee8021QBridgeVIDXTable_data **);
int ieee8021QBridgeVIDXTable_add(struct ieee8021QBridgeVIDXTable_data *);
int ieee8021QBridgeVIDXTable_del(struct ieee8021QBridgeVIDXTable_data *);
void parse_ieee8021QBridgeVIDXTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeVIDXTable;
void refresh_ieee8021QBridgeVIDXTable(int);
FindVarMethod var_ieee8021QBridgeEgressVidXTable;
struct ieee8021QBridgeEgressVidXTable_data *ieee8021QBridgeEgressVidXTable_create(void);
struct ieee8021QBridgeEgressVidXTable_data *ieee8021QBridgeEgressVidXTable_duplicate(struct ieee8021QBridgeEgressVidXTable_data *);
int ieee8021QBridgeEgressVidXTable_destroy(struct ieee8021QBridgeEgressVidXTable_data **);
int ieee8021QBridgeEgressVidXTable_add(struct ieee8021QBridgeEgressVidXTable_data *);
int ieee8021QBridgeEgressVidXTable_del(struct ieee8021QBridgeEgressVidXTable_data *);
void parse_ieee8021QBridgeEgressVidXTable(const char *, char *);
SNMPCallback store_ieee8021QBridgeEgressVidXTable;
void refresh_ieee8021QBridgeEgressVidXTable(int);

WriteMethod write_ieee8021QBridgeMvrpEnabledStatus;
WriteMethod write_ieee8021QBridgeCVlanPortRowStatus;
WriteMethod write_ieee8021QBridgeFdbAgingTime;
WriteMethod write_ieee8021QBridgeForwardAllStaticPorts;
WriteMethod write_ieee8021QBridgeForwardAllForbiddenPorts;
WriteMethod write_ieee8021QBridgeForwardUnregisteredStaticPorts;
WriteMethod write_ieee8021QBridgeForwardUnregisteredForbiddenPorts;
WriteMethod write_ieee8021QBridgeStaticUnicastStaticEgressPorts;
WriteMethod write_ieee8021QBridgeStaticUnicastForbiddenEgressPorts;
WriteMethod write_ieee8021QBridgeStaticUnicastStorageType;
WriteMethod write_ieee8021QBridgeStaticUnicastRowStatus;
WriteMethod write_ieee8021QBridgeStaticMulticastStaticEgressPorts;
WriteMethod write_ieee8021QBridgeStaticMulticastForbiddenEgressPorts;
WriteMethod write_ieee8021QBridgeStaticMulticastStorageType;
WriteMethod write_ieee8021QBridgeStaticMulticastRowStatus;
WriteMethod write_ieee8021QBridgeVlanStaticName;
WriteMethod write_ieee8021QBridgeVlanStaticEgressPorts;
WriteMethod write_ieee8021QBridgeVlanForbiddenEgressPorts;
WriteMethod write_ieee8021QBridgeVlanStaticUntaggedPorts;
WriteMethod write_ieee8021QBridgeVlanStaticRowStatus;
WriteMethod write_ieee8021QBridgePvid;
WriteMethod write_ieee8021QBridgePortAcceptableFrameTypes;
WriteMethod write_ieee8021QBridgePortIngressFiltering;
WriteMethod write_ieee8021QBridgePortMvrpEnabledStatus;
WriteMethod write_ieee8021QBridgePortRestrictedVlanRegistration;
WriteMethod write_ieee8021QBridgeLearningConstraintsType;
WriteMethod write_ieee8021QBridgeLearningConstraintsStatus;
WriteMethod write_ieee8021QBridgeLearningConstraintDefaultSet;
WriteMethod write_ieee8021QBridgeLearningConstraintDefaultType;
WriteMethod write_ieee8021QBridgeProtocolGroupId;
WriteMethod write_ieee8021QBridgeProtocolGroupRowStatus;
WriteMethod write_ieee8021QBridgeProtocolPortGroupVid;
WriteMethod write_ieee8021QBridgeProtocolPortRowStatus;
WriteMethod write_ieee8021QBridgeVIDXRelayVid;
WriteMethod write_ieee8021QBridgeVIDXRowStatus;
WriteMethod write_ieee8021QBridgeEgressVidXLocalVid;
WriteMethod write_ieee8021QBridgeEgressVidXRowStatus;
#endif				/* __LOCAL_IEEE8021QBRIDGEMIB_H__ */
