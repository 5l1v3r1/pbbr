/*****************************************************************************

 @(#) src/snmp/ieee8021spbmib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_IEEE8021SPBMIB_H__
#define __LOCAL_IEEE8021SPBMIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct ieee8021SpbMib_data {
	struct ieee8021SpbMib_data *ieee8021SpbMib_old;
	uint ieee8021SpbMib_rsvs;
	uint ieee8021SpbMib_tsts;
	uint ieee8021SpbMib_sets;
	uint ieee8021SpbMib_request;
	uint8_t *ieee8021SpbSysAreaAddress;	/* ReadWrite */
	size_t ieee8021SpbSysAreaAddressLen;
	uint8_t *ieee8021SpbSysId;	/* ReadWrite */
	size_t ieee8021SpbSysIdLen;
	uint8_t *ieee8021SpbSysControlAddr;	/* ReadWrite */
	size_t ieee8021SpbSysControlAddrLen;
	uint8_t *ieee8021SpbSysName;	/* ReadOnly */
	size_t ieee8021SpbSysNameLen;
	uint8_t *ieee8021SpbSysBridgePriority;	/* ReadOnly */
	size_t ieee8021SpbSysBridgePriorityLen;
	uint8_t *ieee8021SpbmSysSPSourceId;	/* ReadWrite */
	size_t ieee8021SpbmSysSPSourceIdLen;
	long ieee8021SpbvSysMode;	/* ReadWrite */
	long ieee8021SpbmSysMode;	/* ReadWrite */
	long ieee8021SpbSysDigestConvention;	/* ReadWrite */
};
struct ieee8021SpbMtidStaticTable_data {
	struct ieee8021SpbMtidStaticTable_data *ieee8021SpbMtidStaticTable_old;
	uint ieee8021SpbMtidStaticTable_rsvs;
	uint ieee8021SpbMtidStaticTable_tsts;
	uint ieee8021SpbMtidStaticTable_sets;
	uint ieee8021SpbMtidStaticTable_request;
	uint ieee8021SpbMtidStaticTable_refs;
	uint ieee8021SpbMtidStaticTable_id;
	ulong ieee8021SpbMtidStaticEntryMtid;	/* NoAccess */
	long ieee8021SpbMtidStaticEntryMtidOverload;	/* Create */
	long ieee8021SpbMtidStaticEntryRowStatus;	/* Create */
	ulong ieee8021SpbTopIx;		/* NoAccess */
};
struct ieee8021SpbTopIxDynamicTable_data {
	struct ieee8021SpbTopIxDynamicTable_data *ieee8021SpbTopIxDynamicTable_old;
	uint ieee8021SpbTopIxDynamicTable_rsvs;
	uint ieee8021SpbTopIxDynamicTable_tsts;
	uint ieee8021SpbTopIxDynamicTable_sets;
	uint ieee8021SpbTopIxDynamicTable_request;
	uint ieee8021SpbTopIxDynamicTable_refs;
	uint ieee8021SpbTopIxDynamicTable_id;
	ulong ieee8021SpbTopIxDynamicEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbTopIxDynamicEntryAgreeDigest;	/* ReadOnly */
	size_t ieee8021SpbTopIxDynamicEntryAgreeDigestLen;
	uint8_t *ieee8021SpbTopIxDynamicEntryMCID;	/* ReadOnly */
	size_t ieee8021SpbTopIxDynamicEntryMCIDLen;
	uint8_t *ieee8021SpbTopIxDynamicEntryAuxMCID;	/* ReadOnly */
	size_t ieee8021SpbTopIxDynamicEntryAuxMCIDLen;
};
struct ieee8021SpbEctStaticTable_data {
	struct ieee8021SpbEctStaticTable_data *ieee8021SpbEctStaticTable_old;
	uint ieee8021SpbEctStaticTable_rsvs;
	uint ieee8021SpbEctStaticTable_tsts;
	uint ieee8021SpbEctStaticTable_sets;
	uint ieee8021SpbEctStaticTable_request;
	uint ieee8021SpbEctStaticTable_refs;
	uint ieee8021SpbEctStaticTable_id;
	ulong ieee8021SpbEctStaticEntryTopIx;	/* NoAccess */
	long ieee8021SpbEctStaticEntryBaseVid;	/* NoAccess */
	uint8_t *ieee8021SpbEctStaticEntryEctAlgorithm;	/* Create */
	size_t ieee8021SpbEctStaticEntryEctAlgorithmLen;
	long ieee8021SpbvEctStaticEntrySpvid;	/* Create */
	long ieee8021SpbEctStaticEntryRowStatus;	/* Create */
};
struct ieee8021SpbEctDynamicTable_data {
	struct ieee8021SpbEctDynamicTable_data *ieee8021SpbEctDynamicTable_old;
	uint ieee8021SpbEctDynamicTable_rsvs;
	uint ieee8021SpbEctDynamicTable_tsts;
	uint ieee8021SpbEctDynamicTable_sets;
	uint ieee8021SpbEctDynamicTable_request;
	uint ieee8021SpbEctDynamicTable_refs;
	uint ieee8021SpbEctDynamicTable_id;
	ulong ieee8021SpbEctDynamicEntryTopIx;	/* NoAccess */
	long ieee8021SpbEctDynamicEntryBaseVid;	/* NoAccess */
	long ieee8021SpbEctDynamicEntryMode;	/* ReadOnly */
	long ieee8021SpbEctDynamicEntryLocalUse;	/* ReadOnly */
	long ieee8021SpbEctDynamicEntryRemoteUse;	/* ReadOnly */
	ulong ieee8021SpbEctDynamicEntryIngressCheckDiscards;	/* ReadOnly */
};
struct ieee8021SpbAdjStaticTable_data {
	struct ieee8021SpbAdjStaticTable_data *ieee8021SpbAdjStaticTable_old;
	uint ieee8021SpbAdjStaticTable_rsvs;
	uint ieee8021SpbAdjStaticTable_tsts;
	uint ieee8021SpbAdjStaticTable_sets;
	uint ieee8021SpbAdjStaticTable_request;
	uint ieee8021SpbAdjStaticTable_refs;
	uint ieee8021SpbAdjStaticTable_id;
	ulong ieee8021SpbAdjStaticEntryTopIx;	/* NoAccess */
	long ieee8021SpbAdjStaticEntryIfIndex;	/* NoAccess */
	long ieee8021SpbAdjStaticEntryMetric;	/* Create */
	long ieee8021SpbAdjStaticEntryIfAdminState;	/* Create */
	long ieee8021SpbAdjStaticEntryRowStatus;	/* Create */
};
struct ieee8021SpbAdjDynamicTable_data {
	struct ieee8021SpbAdjDynamicTable_data *ieee8021SpbAdjDynamicTable_old;
	uint ieee8021SpbAdjDynamicTable_rsvs;
	uint ieee8021SpbAdjDynamicTable_tsts;
	uint ieee8021SpbAdjDynamicTable_sets;
	uint ieee8021SpbAdjDynamicTable_request;
	uint ieee8021SpbAdjDynamicTable_refs;
	uint ieee8021SpbAdjDynamicTable_id;
	ulong ieee8021SpbAdjDynamicEntryTopIx;	/* NoAccess */
	long ieee8021SpbAdjDynamicEntryIfIndex;	/* NoAccess */
	uint8_t *ieee8021SpbAdjDynamicEntryPeerSysId;	/* NoAccess */
	size_t ieee8021SpbAdjDynamicEntryPeerSysIdLen;
	ulong ieee8021SpbAdjDynamicEntryPort;	/* ReadOnly */
	long ieee8021SpbAdjDynamicEntryIfOperState;	/* ReadOnly */
	uint8_t *ieee8021SpbAdjDynamicEntryPeerSysName;	/* ReadOnly */
	size_t ieee8021SpbAdjDynamicEntryPeerSysNameLen;
	uint8_t *ieee8021SpbAdjDynamicEntryPeerAgreeDigest;	/* ReadOnly */
	size_t ieee8021SpbAdjDynamicEntryPeerAgreeDigestLen;
	uint8_t *ieee8021SpbAdjDynamicEntryPeerMCID;	/* ReadOnly */
	size_t ieee8021SpbAdjDynamicEntryPeerMCIDLen;
	uint8_t *ieee8021SpbAdjDynamicEntryPeerAuxMCID;	/* ReadOnly */
	size_t ieee8021SpbAdjDynamicEntryPeerAuxMCIDLen;
	ulong ieee8021SpbAdjDynamicEntryLocalCircuitID;	/* ReadOnly */
	ulong ieee8021SpbAdjDynamicEntryPeerLocalCircuitID;	/* ReadOnly */
	ulong ieee8021SpbAdjDynamicEntryPortIdentifier;	/* ReadOnly */
	ulong ieee8021SpbAdjDynamicEntryPeerPortIdentifier;	/* ReadOnly */
	ulong ieee8021SpbAdjDynamicEntryIsisCircIndex;	/* ReadOnly */
};
struct ieee8021SpbTopNodeTable_data {
	struct ieee8021SpbTopNodeTable_data *ieee8021SpbTopNodeTable_old;
	uint ieee8021SpbTopNodeTable_rsvs;
	uint ieee8021SpbTopNodeTable_tsts;
	uint ieee8021SpbTopNodeTable_sets;
	uint ieee8021SpbTopNodeTable_request;
	uint ieee8021SpbTopNodeTable_refs;
	uint ieee8021SpbTopNodeTable_id;
	ulong ieee8021SpbTopNodeEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbTopNodeEntrySysId;	/* NoAccess */
	size_t ieee8021SpbTopNodeEntrySysIdLen;
	uint8_t *ieee8021SpbTopNodeEntryBridgePriority;	/* ReadOnly */
	size_t ieee8021SpbTopNodeEntryBridgePriorityLen;
	uint8_t *ieee8021SpbmTopNodeEntrySPsourceID;	/* ReadOnly */
	size_t ieee8021SpbmTopNodeEntrySPsourceIDLen;
	uint8_t *ieee8021SpbTopNodeEntrySysName;	/* ReadOnly */
	size_t ieee8021SpbTopNodeEntrySysNameLen;
};
struct ieee8021SpbTopEctTable_data {
	struct ieee8021SpbTopEctTable_data *ieee8021SpbTopEctTable_old;
	uint ieee8021SpbTopEctTable_rsvs;
	uint ieee8021SpbTopEctTable_tsts;
	uint ieee8021SpbTopEctTable_sets;
	uint ieee8021SpbTopEctTable_request;
	uint ieee8021SpbTopEctTable_refs;
	uint ieee8021SpbTopEctTable_id;
	ulong ieee8021SpbTopEctEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbTopEctEntrySysId;	/* NoAccess */
	size_t ieee8021SpbTopEctEntrySysIdLen;
	long ieee8021SpbTopEctEntryBaseVid;	/* NoAccess */
	uint8_t *ieee8021SpbTopEctEntryEctAlgorithm;	/* ReadOnly */
	size_t ieee8021SpbTopEctEntryEctAlgorithmLen;
	long ieee8021SpbTopEctEntryMode;	/* ReadOnly */
	long ieee8021SpbvTopEctSysMode;	/* ReadOnly */
	long ieee8021SpbvTopEctEntrySpvid;	/* ReadOnly */
	long ieee8021SpbTopEctEntryLocalUse;	/* ReadOnly */
};
struct ieee8021SpbTopEdgeTable_data {
	struct ieee8021SpbTopEdgeTable_data *ieee8021SpbTopEdgeTable_old;
	uint ieee8021SpbTopEdgeTable_rsvs;
	uint ieee8021SpbTopEdgeTable_tsts;
	uint ieee8021SpbTopEdgeTable_sets;
	uint ieee8021SpbTopEdgeTable_request;
	uint ieee8021SpbTopEdgeTable_refs;
	uint ieee8021SpbTopEdgeTable_id;
	ulong ieee8021SpbTopEdgeEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbTopEdgeEntrySysIdNear;	/* NoAccess */
	size_t ieee8021SpbTopEdgeEntrySysIdNearLen;
	uint8_t *ieee8021SpbTopEdgeEntrySysIdFar;	/* NoAccess */
	size_t ieee8021SpbTopEdgeEntrySysIdFarLen;
	long ieee8021SpbTopEdgeEntryMetricNear2Far;	/* ReadOnly */
	long ieee8021SpbTopEdgeEntryMetricFar2Near;	/* ReadOnly */
};
struct ieee8021SpbmTopSrvTable_data {
	struct ieee8021SpbmTopSrvTable_data *ieee8021SpbmTopSrvTable_old;
	uint ieee8021SpbmTopSrvTable_rsvs;
	uint ieee8021SpbmTopSrvTable_tsts;
	uint ieee8021SpbmTopSrvTable_sets;
	uint ieee8021SpbmTopSrvTable_request;
	uint ieee8021SpbmTopSrvTable_refs;
	uint ieee8021SpbmTopSrvTable_id;
	ulong ieee8021SpbmTopSrvEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbmTopSrvEntrySysId;	/* NoAccess */
	size_t ieee8021SpbmTopSrvEntrySysIdLen;
	ulong ieee8021SpbmTopSrvEntryIsid;	/* NoAccess */
	long ieee8021SpbmTopSrvEntryBaseVid;	/* NoAccess */
	uint8_t *ieee8021SpbmTopSrvEntryMac;	/* NoAccess */
	size_t ieee8021SpbmTopSrvEntryMacLen;
	uint8_t *ieee8021SpbmTopSrvEntryIsidFlags;	/* ReadOnly */
	size_t ieee8021SpbmTopSrvEntryIsidFlagsLen;
};
struct ieee8021SpbvTopSrvTable_data {
	struct ieee8021SpbvTopSrvTable_data *ieee8021SpbvTopSrvTable_old;
	uint ieee8021SpbvTopSrvTable_rsvs;
	uint ieee8021SpbvTopSrvTable_tsts;
	uint ieee8021SpbvTopSrvTable_sets;
	uint ieee8021SpbvTopSrvTable_request;
	uint ieee8021SpbvTopSrvTable_refs;
	uint ieee8021SpbvTopSrvTable_id;
	ulong ieee8021SpbvTopSrvEntryTopIx;	/* NoAccess */
	uint8_t *ieee8021SpbvTopSrvEntrySysId;	/* NoAccess */
	size_t ieee8021SpbvTopSrvEntrySysIdLen;
	uint8_t *ieee8021SpbvTopSrvEntryMMac;	/* NoAccess */
	size_t ieee8021SpbvTopSrvEntryMMacLen;
	long ieee8021SpbvTopSrvEntryBaseVid;	/* ReadOnly */
	uint8_t *ieee8021SpbvTopSrvEntryMMacFlags;	/* ReadOnly */
	size_t ieee8021SpbvTopSrvEntryMMacFlagsLen;
};
struct ieee8021SpbmBsiStaticTable_data {
	struct ieee8021SpbmBsiStaticTable_data *ieee8021SpbmBsiStaticTable_old;
	uint ieee8021SpbmBsiStaticTable_rsvs;
	uint ieee8021SpbmBsiStaticTable_tsts;
	uint ieee8021SpbmBsiStaticTable_sets;
	uint ieee8021SpbmBsiStaticTable_request;
	uint ieee8021SpbmBsiStaticTable_refs;
	uint ieee8021SpbmBsiStaticTable_id;
	ulong ieee8021SpbTopIx;		/* NoAccess */
	ulong ieee8021BridgeBasePort;	/* NoAccess */
	ulong ieee8021SpbmBsiStaticEntryIsid;	/* NoAccess */
	long ieee8021SpbmBsiStaticEntryBaseVid;	/* NoAccess */
	long ieee8021SpbmBsiStaticEntryTBit;	/* Create */
	long ieee8021SpbmBsiStaticEntryRBit;	/* Create */
	long ieee8021SpbmBsiStaticEntryTsBit;	/* Create */
	long ieee8021SpbmBsiStaticEntryTieBreakMask;	/* Create */
	long ieee8021SpbmBsiStaticEntryRowStatus;	/* Create */
};
struct dot1agCfmMepSpbmTable_data {
	struct dot1agCfmMepSpbmTable_data *dot1agCfmMepSpbmTable_old;
	uint dot1agCfmMepSpbmTable_rsvs;
	uint dot1agCfmMepSpbmTable_tsts;
	uint dot1agCfmMepSpbmTable_sets;
	uint dot1agCfmMepSpbmTable_request;
	uint dot1agCfmMepSpbmTable_refs;
	uint dot1agCfmMepSpbmTable_id;
	ulong dot1agCfmMdIndex;		/* NoAccess */
	ulong dot1agCfmMaIndex;		/* NoAccess */
	ulong dot1agCfmMepIdentifier;	/* NoAccess */
	uint8_t *dot1agCfmMepTransmitLbmSpbmDA;	/* Create */
	size_t dot1agCfmMepTransmitLbmSpbmDALen;
	uint8_t *dot1agCfmMepTransmitLtmSpbmDA;	/* Create */
	size_t dot1agCfmMepTransmitLtmSpbmDALen;
};
struct dot1agCfmMepSpbmEspTable_data {
	struct dot1agCfmMepSpbmEspTable_data *dot1agCfmMepSpbmEspTable_old;
	uint dot1agCfmMepSpbmEspTable_rsvs;
	uint dot1agCfmMepSpbmEspTable_tsts;
	uint dot1agCfmMepSpbmEspTable_sets;
	uint dot1agCfmMepSpbmEspTable_request;
	uint dot1agCfmMepSpbmEspTable_refs;
	uint dot1agCfmMepSpbmEspTable_id;
	ulong dot1agCfmMdIndex;		/* NoAccess */
	ulong dot1agCfmMaIndex;		/* NoAccess */
	ulong dot1agCfmMepSpbmEspIndex;	/* NoAccess */
	uint8_t *dot1agCfmMepSpbmEspEsp;	/* Create */
	size_t dot1agCfmMepSpbmEspEspLen;
	long dot1agCfmMepSpbmEspRowStatus;	/* Create */
};

/* storage declarations */
extern struct ieee8021SpbMib_data *ieee8021SpbMibStorage;
extern struct header_complex_index *ieee8021SpbMtidStaticTableStorage;
extern struct header_complex_index *ieee8021SpbTopIxDynamicTableStorage;
extern struct header_complex_index *ieee8021SpbEctStaticTableStorage;
extern struct header_complex_index *ieee8021SpbEctDynamicTableStorage;
extern struct header_complex_index *ieee8021SpbAdjStaticTableStorage;
extern struct header_complex_index *ieee8021SpbAdjDynamicTableStorage;
extern struct header_complex_index *ieee8021SpbTopNodeTableStorage;
extern struct header_complex_index *ieee8021SpbTopEctTableStorage;
extern struct header_complex_index *ieee8021SpbTopEdgeTableStorage;
extern struct header_complex_index *ieee8021SpbmTopSrvTableStorage;
extern struct header_complex_index *ieee8021SpbvTopSrvTableStorage;
extern struct header_complex_index *ieee8021SpbmBsiStaticTableStorage;
extern struct header_complex_index *dot1agCfmMepSpbmTableStorage;
extern struct header_complex_index *dot1agCfmMepSpbmEspTableStorage;

/* enum definitions from the covered mib sections */

#define IEEE8021SPBVSYSMODE_AUTO                 1
#define IEEE8021SPBVSYSMODE_MANUAL               2

#define IEEE8021SPBMSYSMODE_AUTO                 1
#define IEEE8021SPBMSYSMODE_MANUAL               2

#define IEEE8021SPBSYSDIGESTCONVENTION_OFF       1
#define IEEE8021SPBSYSDIGESTCONVENTION_LOOPFREEBOTH 2
#define IEEE8021SPBSYSDIGESTCONVENTION_LOOPFREEMCASTONLY 3

#define IEEE8021SPBMTIDSTATICENTRYMTIDOVERLOAD_TRUE 1
#define IEEE8021SPBMTIDSTATICENTRYMTIDOVERLOAD_FALSE 2

#define IEEE8021SPBECTDYNAMICENTRYMODE_DISABLED  1
#define IEEE8021SPBECTDYNAMICENTRYMODE_SPBM      2
#define IEEE8021SPBECTDYNAMICENTRYMODE_SPBV      3

#define IEEE8021SPBECTDYNAMICENTRYLOCALUSE_TRUE  1
#define IEEE8021SPBECTDYNAMICENTRYLOCALUSE_FALSE 2

#define IEEE8021SPBECTDYNAMICENTRYREMOTEUSE_TRUE 1
#define IEEE8021SPBECTDYNAMICENTRYREMOTEUSE_FALSE 2

#define IEEE8021SPBADJSTATICENTRYIFADMINSTATE_UP 1
#define IEEE8021SPBADJSTATICENTRYIFADMINSTATE_DOWN 2
#define IEEE8021SPBADJSTATICENTRYIFADMINSTATE_TESTING 3

#define IEEE8021SPBADJDYNAMICENTRYIFOPERSTATE_UP 1
#define IEEE8021SPBADJDYNAMICENTRYIFOPERSTATE_DOWN 2
#define IEEE8021SPBADJDYNAMICENTRYIFOPERSTATE_TESTING 3

#define IEEE8021SPBTOPECTENTRYMODE_DISABLED      1
#define IEEE8021SPBTOPECTENTRYMODE_SPBM          2
#define IEEE8021SPBTOPECTENTRYMODE_SPBV          3

#define IEEE8021SPBVTOPECTSYSMODE_AUTO           1
#define IEEE8021SPBVTOPECTSYSMODE_MANUAL         2

#define IEEE8021SPBTOPECTENTRYLOCALUSE_TRUE      1
#define IEEE8021SPBTOPECTENTRYLOCALUSE_FALSE     2

#define IEEE8021SPBMTOPSRVENTRYISIDFLAGS_INGRESS 0
#define IEEE8021SPBMTOPSRVENTRYISIDFLAGS_EGRESS  1

#define IEEE8021SPBVTOPSRVENTRYMMACFLAGS_INGRESS 0
#define IEEE8021SPBVTOPSRVENTRYMMACFLAGS_EGRESS  1

#define IEEE8021SPBMBSISTATICENTRYTBIT_TRUE      1
#define IEEE8021SPBMBSISTATICENTRYTBIT_FALSE     2

#define IEEE8021SPBMBSISTATICENTRYRBIT_TRUE      1
#define IEEE8021SPBMBSISTATICENTRYRBIT_FALSE     2

#define IEEE8021SPBMBSISTATICENTRYTSBIT_TRUE     1
#define IEEE8021SPBMBSISTATICENTRYTSBIT_FALSE    2

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid ieee8021SpbSysGroupSPBM_oid[11];
extern oid ieee8021SpbMtidStaticTableGroupSPBM_oid[11];
extern oid ieee8021SpbTopIxDynamicTableGroupSPBM_oid[11];
extern oid ieee8021SpbEctStaticTableGroupSPBM_oid[11];
extern oid ieee8021SpbEctDynamicTableGroupSPBM_oid[11];
extern oid ieee8021SpbAdjStaticTableGroupSPBM_oid[11];
extern oid ieee8021SpbAdjDynamicTableGroupSPBM_oid[11];
extern oid ieee8021SpbTopNodeTableGroupSPBM_oid[11];
extern oid ieee8021SpbTopEctTableGroupSPBM_oid[11];
extern oid ieee8021SpbTopEdgeTableGroupSPBM_oid[11];
extern oid ieee8021SpbmTopSrvTableGroupSPBM_oid[11];
extern oid ieee8021SpbSysGroupSPBV_oid[11];
extern oid ieee8021SpbMtidStaticTableGroupSPBV_oid[11];
extern oid ieee8021SpbTopIxDynamicTableGroupSPBV_oid[11];
extern oid ieee8021SpbEctStaticTableGroupSPBV_oid[11];
extern oid ieee8021SpbEctDynamicTableGroupSPBV_oid[11];
extern oid ieee8021SpbAdjStaticTableGroupSPBV_oid[11];
extern oid ieee8021SpbAdjDynamicTableGroupSPBV_oid[11];
extern oid ieee8021SpbTopNodeTableGroupSPBV_oid[11];
extern oid ieee8021SpbTopEctTableGroupSPBV_oid[11];
extern oid ieee8021SpbTopEdgeTableGroupSPBV_oid[11];
extern oid ieee8021SpbvTopSrvTableGroupSPBV_oid[11];
extern oid ieee8021SpbmBsiStaticTableGroupSPBM_oid[11];
extern oid dot1agCfmMepSpbmTableGroupSPBM_oid[11];
extern oid dot1agCfmMepSpbmEspTableGroupSPBM_oid[11];
extern oid ieee8021SpbComplianceSPBM_oid[11];
extern oid ieee8021SpbComplianceSPBV_oid[11];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_ieee8021SpbMib(void);
void deinit_ieee8021SpbMib(void);
int term_ieee8021SpbMib(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_ieee8021SpbMib;
struct ieee8021SpbMib_data *ieee8021SpbMib_create(void);
struct ieee8021SpbMib_data *ieee8021SpbMib_duplicate(struct ieee8021SpbMib_data *);
int ieee8021SpbMib_destroy(struct ieee8021SpbMib_data **);
int ieee8021SpbMib_add(struct ieee8021SpbMib_data *);
void parse_ieee8021SpbMib(const char *, char *);
SNMPCallback store_ieee8021SpbMib;
void refresh_ieee8021SpbMib(int);
FindVarMethod var_ieee8021SpbMtidStaticTable;
struct ieee8021SpbMtidStaticTable_data *ieee8021SpbMtidStaticTable_create(void);
struct ieee8021SpbMtidStaticTable_data *ieee8021SpbMtidStaticTable_duplicate(struct ieee8021SpbMtidStaticTable_data *);
int ieee8021SpbMtidStaticTable_destroy(struct ieee8021SpbMtidStaticTable_data **);
int ieee8021SpbMtidStaticTable_add(struct ieee8021SpbMtidStaticTable_data *);
int ieee8021SpbMtidStaticTable_del(struct ieee8021SpbMtidStaticTable_data *);
void parse_ieee8021SpbMtidStaticTable(const char *, char *);
SNMPCallback store_ieee8021SpbMtidStaticTable;
void refresh_ieee8021SpbMtidStaticTable(int);
FindVarMethod var_ieee8021SpbTopIxDynamicTable;
struct ieee8021SpbTopIxDynamicTable_data *ieee8021SpbTopIxDynamicTable_create(void);
struct ieee8021SpbTopIxDynamicTable_data *ieee8021SpbTopIxDynamicTable_duplicate(struct ieee8021SpbTopIxDynamicTable_data *);
int ieee8021SpbTopIxDynamicTable_destroy(struct ieee8021SpbTopIxDynamicTable_data **);
int ieee8021SpbTopIxDynamicTable_add(struct ieee8021SpbTopIxDynamicTable_data *);
int ieee8021SpbTopIxDynamicTable_del(struct ieee8021SpbTopIxDynamicTable_data *);
void parse_ieee8021SpbTopIxDynamicTable(const char *, char *);
SNMPCallback store_ieee8021SpbTopIxDynamicTable;
void refresh_ieee8021SpbTopIxDynamicTable(int);
FindVarMethod var_ieee8021SpbEctStaticTable;
struct ieee8021SpbEctStaticTable_data *ieee8021SpbEctStaticTable_create(void);
struct ieee8021SpbEctStaticTable_data *ieee8021SpbEctStaticTable_duplicate(struct ieee8021SpbEctStaticTable_data *);
int ieee8021SpbEctStaticTable_destroy(struct ieee8021SpbEctStaticTable_data **);
int ieee8021SpbEctStaticTable_add(struct ieee8021SpbEctStaticTable_data *);
int ieee8021SpbEctStaticTable_del(struct ieee8021SpbEctStaticTable_data *);
void parse_ieee8021SpbEctStaticTable(const char *, char *);
SNMPCallback store_ieee8021SpbEctStaticTable;
void refresh_ieee8021SpbEctStaticTable(int);
FindVarMethod var_ieee8021SpbEctDynamicTable;
struct ieee8021SpbEctDynamicTable_data *ieee8021SpbEctDynamicTable_create(void);
struct ieee8021SpbEctDynamicTable_data *ieee8021SpbEctDynamicTable_duplicate(struct ieee8021SpbEctDynamicTable_data *);
int ieee8021SpbEctDynamicTable_destroy(struct ieee8021SpbEctDynamicTable_data **);
int ieee8021SpbEctDynamicTable_add(struct ieee8021SpbEctDynamicTable_data *);
int ieee8021SpbEctDynamicTable_del(struct ieee8021SpbEctDynamicTable_data *);
void parse_ieee8021SpbEctDynamicTable(const char *, char *);
SNMPCallback store_ieee8021SpbEctDynamicTable;
void refresh_ieee8021SpbEctDynamicTable(int);
FindVarMethod var_ieee8021SpbAdjStaticTable;
struct ieee8021SpbAdjStaticTable_data *ieee8021SpbAdjStaticTable_create(void);
struct ieee8021SpbAdjStaticTable_data *ieee8021SpbAdjStaticTable_duplicate(struct ieee8021SpbAdjStaticTable_data *);
int ieee8021SpbAdjStaticTable_destroy(struct ieee8021SpbAdjStaticTable_data **);
int ieee8021SpbAdjStaticTable_add(struct ieee8021SpbAdjStaticTable_data *);
int ieee8021SpbAdjStaticTable_del(struct ieee8021SpbAdjStaticTable_data *);
void parse_ieee8021SpbAdjStaticTable(const char *, char *);
SNMPCallback store_ieee8021SpbAdjStaticTable;
void refresh_ieee8021SpbAdjStaticTable(int);
FindVarMethod var_ieee8021SpbAdjDynamicTable;
struct ieee8021SpbAdjDynamicTable_data *ieee8021SpbAdjDynamicTable_create(void);
struct ieee8021SpbAdjDynamicTable_data *ieee8021SpbAdjDynamicTable_duplicate(struct ieee8021SpbAdjDynamicTable_data *);
int ieee8021SpbAdjDynamicTable_destroy(struct ieee8021SpbAdjDynamicTable_data **);
int ieee8021SpbAdjDynamicTable_add(struct ieee8021SpbAdjDynamicTable_data *);
int ieee8021SpbAdjDynamicTable_del(struct ieee8021SpbAdjDynamicTable_data *);
void parse_ieee8021SpbAdjDynamicTable(const char *, char *);
SNMPCallback store_ieee8021SpbAdjDynamicTable;
void refresh_ieee8021SpbAdjDynamicTable(int);
FindVarMethod var_ieee8021SpbTopNodeTable;
struct ieee8021SpbTopNodeTable_data *ieee8021SpbTopNodeTable_create(void);
struct ieee8021SpbTopNodeTable_data *ieee8021SpbTopNodeTable_duplicate(struct ieee8021SpbTopNodeTable_data *);
int ieee8021SpbTopNodeTable_destroy(struct ieee8021SpbTopNodeTable_data **);
int ieee8021SpbTopNodeTable_add(struct ieee8021SpbTopNodeTable_data *);
int ieee8021SpbTopNodeTable_del(struct ieee8021SpbTopNodeTable_data *);
void parse_ieee8021SpbTopNodeTable(const char *, char *);
SNMPCallback store_ieee8021SpbTopNodeTable;
void refresh_ieee8021SpbTopNodeTable(int);
FindVarMethod var_ieee8021SpbTopEctTable;
struct ieee8021SpbTopEctTable_data *ieee8021SpbTopEctTable_create(void);
struct ieee8021SpbTopEctTable_data *ieee8021SpbTopEctTable_duplicate(struct ieee8021SpbTopEctTable_data *);
int ieee8021SpbTopEctTable_destroy(struct ieee8021SpbTopEctTable_data **);
int ieee8021SpbTopEctTable_add(struct ieee8021SpbTopEctTable_data *);
int ieee8021SpbTopEctTable_del(struct ieee8021SpbTopEctTable_data *);
void parse_ieee8021SpbTopEctTable(const char *, char *);
SNMPCallback store_ieee8021SpbTopEctTable;
void refresh_ieee8021SpbTopEctTable(int);
FindVarMethod var_ieee8021SpbTopEdgeTable;
struct ieee8021SpbTopEdgeTable_data *ieee8021SpbTopEdgeTable_create(void);
struct ieee8021SpbTopEdgeTable_data *ieee8021SpbTopEdgeTable_duplicate(struct ieee8021SpbTopEdgeTable_data *);
int ieee8021SpbTopEdgeTable_destroy(struct ieee8021SpbTopEdgeTable_data **);
int ieee8021SpbTopEdgeTable_add(struct ieee8021SpbTopEdgeTable_data *);
int ieee8021SpbTopEdgeTable_del(struct ieee8021SpbTopEdgeTable_data *);
void parse_ieee8021SpbTopEdgeTable(const char *, char *);
SNMPCallback store_ieee8021SpbTopEdgeTable;
void refresh_ieee8021SpbTopEdgeTable(int);
FindVarMethod var_ieee8021SpbmTopSrvTable;
struct ieee8021SpbmTopSrvTable_data *ieee8021SpbmTopSrvTable_create(void);
struct ieee8021SpbmTopSrvTable_data *ieee8021SpbmTopSrvTable_duplicate(struct ieee8021SpbmTopSrvTable_data *);
int ieee8021SpbmTopSrvTable_destroy(struct ieee8021SpbmTopSrvTable_data **);
int ieee8021SpbmTopSrvTable_add(struct ieee8021SpbmTopSrvTable_data *);
int ieee8021SpbmTopSrvTable_del(struct ieee8021SpbmTopSrvTable_data *);
void parse_ieee8021SpbmTopSrvTable(const char *, char *);
SNMPCallback store_ieee8021SpbmTopSrvTable;
void refresh_ieee8021SpbmTopSrvTable(int);
FindVarMethod var_ieee8021SpbvTopSrvTable;
struct ieee8021SpbvTopSrvTable_data *ieee8021SpbvTopSrvTable_create(void);
struct ieee8021SpbvTopSrvTable_data *ieee8021SpbvTopSrvTable_duplicate(struct ieee8021SpbvTopSrvTable_data *);
int ieee8021SpbvTopSrvTable_destroy(struct ieee8021SpbvTopSrvTable_data **);
int ieee8021SpbvTopSrvTable_add(struct ieee8021SpbvTopSrvTable_data *);
int ieee8021SpbvTopSrvTable_del(struct ieee8021SpbvTopSrvTable_data *);
void parse_ieee8021SpbvTopSrvTable(const char *, char *);
SNMPCallback store_ieee8021SpbvTopSrvTable;
void refresh_ieee8021SpbvTopSrvTable(int);
FindVarMethod var_ieee8021SpbmBsiStaticTable;
struct ieee8021SpbmBsiStaticTable_data *ieee8021SpbmBsiStaticTable_create(void);
struct ieee8021SpbmBsiStaticTable_data *ieee8021SpbmBsiStaticTable_duplicate(struct ieee8021SpbmBsiStaticTable_data *);
int ieee8021SpbmBsiStaticTable_destroy(struct ieee8021SpbmBsiStaticTable_data **);
int ieee8021SpbmBsiStaticTable_add(struct ieee8021SpbmBsiStaticTable_data *);
int ieee8021SpbmBsiStaticTable_del(struct ieee8021SpbmBsiStaticTable_data *);
void parse_ieee8021SpbmBsiStaticTable(const char *, char *);
SNMPCallback store_ieee8021SpbmBsiStaticTable;
void refresh_ieee8021SpbmBsiStaticTable(int);
FindVarMethod var_dot1agCfmMepSpbmTable;
struct dot1agCfmMepSpbmTable_data *dot1agCfmMepSpbmTable_create(void);
struct dot1agCfmMepSpbmTable_data *dot1agCfmMepSpbmTable_duplicate(struct dot1agCfmMepSpbmTable_data *);
int dot1agCfmMepSpbmTable_destroy(struct dot1agCfmMepSpbmTable_data **);
int dot1agCfmMepSpbmTable_add(struct dot1agCfmMepSpbmTable_data *);
int dot1agCfmMepSpbmTable_del(struct dot1agCfmMepSpbmTable_data *);
void parse_dot1agCfmMepSpbmTable(const char *, char *);
SNMPCallback store_dot1agCfmMepSpbmTable;
void refresh_dot1agCfmMepSpbmTable(int);
FindVarMethod var_dot1agCfmMepSpbmEspTable;
struct dot1agCfmMepSpbmEspTable_data *dot1agCfmMepSpbmEspTable_create(void);
struct dot1agCfmMepSpbmEspTable_data *dot1agCfmMepSpbmEspTable_duplicate(struct dot1agCfmMepSpbmEspTable_data *);
int dot1agCfmMepSpbmEspTable_destroy(struct dot1agCfmMepSpbmEspTable_data **);
int dot1agCfmMepSpbmEspTable_add(struct dot1agCfmMepSpbmEspTable_data *);
int dot1agCfmMepSpbmEspTable_del(struct dot1agCfmMepSpbmEspTable_data *);
void parse_dot1agCfmMepSpbmEspTable(const char *, char *);
SNMPCallback store_dot1agCfmMepSpbmEspTable;
void refresh_dot1agCfmMepSpbmEspTable(int);

WriteMethod write_ieee8021SpbSysAreaAddress;
WriteMethod write_ieee8021SpbSysId;
WriteMethod write_ieee8021SpbSysControlAddr;
WriteMethod write_ieee8021SpbmSysSPSourceId;
WriteMethod write_ieee8021SpbvSysMode;
WriteMethod write_ieee8021SpbmSysMode;
WriteMethod write_ieee8021SpbSysDigestConvention;
WriteMethod write_ieee8021SpbMtidStaticEntryMtidOverload;
WriteMethod write_ieee8021SpbMtidStaticEntryRowStatus;
WriteMethod write_ieee8021SpbEctStaticEntryEctAlgorithm;
WriteMethod write_ieee8021SpbvEctStaticEntrySpvid;
WriteMethod write_ieee8021SpbEctStaticEntryRowStatus;
WriteMethod write_ieee8021SpbAdjStaticEntryMetric;
WriteMethod write_ieee8021SpbAdjStaticEntryIfAdminState;
WriteMethod write_ieee8021SpbAdjStaticEntryRowStatus;
WriteMethod write_ieee8021SpbmBsiStaticEntryTBit;
WriteMethod write_ieee8021SpbmBsiStaticEntryRBit;
WriteMethod write_ieee8021SpbmBsiStaticEntryTsBit;
WriteMethod write_ieee8021SpbmBsiStaticEntryTieBreakMask;
WriteMethod write_ieee8021SpbmBsiStaticEntryRowStatus;
WriteMethod write_dot1agCfmMepTransmitLbmSpbmDA;
WriteMethod write_dot1agCfmMepTransmitLtmSpbmDA;
WriteMethod write_dot1agCfmMepSpbmEspEsp;
WriteMethod write_dot1agCfmMepSpbmEspRowStatus;
#endif				/* __LOCAL_IEEE8021SPBMIB_H__ */
