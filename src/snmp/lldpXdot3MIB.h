/*****************************************************************************

 @(#) src/snmp/lldpxdot3mib.h

 -----------------------------------------------------------------------------

 Copyright (c) 2008-2015  Monavacon Limited <http://www.monavacon.com/>
 Copyright (c) 2001-2008  OpenSS7 Corporation <http://www.openss7.com/>
 Copyright (c) 1997-2001  Brian F. G. Bidulock <bidulock@openss7.org>

 All Rights Reserved.

 This program is free software; you can redistribute it and/or modify it under
 the terms of the GNU Affero General Public License as published by the Free
 Software Foundation; version 3 of the License.

 This program is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
 details.

 You should have received a copy of the GNU Affero General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>, or
 write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA
 02139, USA.

 -----------------------------------------------------------------------------

 U.S. GOVERNMENT RESTRICTED RIGHTS.  If you are licensing this Software on
 behalf of the U.S. Government ("Government"), the following provisions apply
 to you.  If the Software is supplied by the Department of Defense ("DoD"), it
 is classified as "Commercial Computer Software" under paragraph 252.227-7014
 of the DoD Supplement to the Federal Acquisition Regulations ("DFARS") (or any
 successor regulations) and the Government is acquiring only the license rights
 granted herein (the license rights customarily provided to non-Government
 users).  If the Software is supplied to any unit or agency of the Government
 other than DoD, it is classified as "Restricted Computer Software" and the
 Government's rights in the Software are defined in paragraph 52.227-19 of the
 Federal Acquisition Regulations ("FAR") (or any successor regulations) or, in
 the cases of NASA, in paragraph 18.52.227-86 of the NASA Supplement to the FAR
 (or any successor regulations).

 -----------------------------------------------------------------------------

 Commercial licensing and support of this software is available from OpenSS7
 Corporation at a fee.  See http://www.openss7.com/

 *****************************************************************************/

#ifndef __LOCAL_LLDPXDOT3MIB_H__
#define __LOCAL_LLDPXDOT3MIB_H__

/*
 * This file was generated by mib2c and is intended for use as a mib module
 * for the ucd-snmp snmpd agent.
 */

extern const char sa_program[];
extern int sa_fclose;			/* default close files between requests */
extern int sa_changed;			/* indication to reread MIB configuration */
extern int sa_stats_refresh;		/* indications that statistics, the mib or its tables need to be refreshed */
extern int sa_request;			/* request number for per-request actions */

/* our storage structure(s) */
struct lldpXdot3MIB_data {
	struct lldpXdot3MIB_data *lldpXdot3MIB_old;
	uint lldpXdot3MIB_rsvs;
	uint lldpXdot3MIB_tsts;
	uint lldpXdot3MIB_sets;
	uint lldpXdot3MIB_request;
};
struct lldpXdot3PortConfigTable_data {
	struct lldpXdot3PortConfigTable_data *lldpXdot3PortConfigTable_old;
	uint lldpXdot3PortConfigTable_rsvs;
	uint lldpXdot3PortConfigTable_tsts;
	uint lldpXdot3PortConfigTable_sets;
	uint lldpXdot3PortConfigTable_request;
	uint lldpXdot3PortConfigTable_refs;
	uint lldpXdot3PortConfigTable_id;
	long lldpPortConfigPortNum;	/* NoAccess */
	uint8_t *lldpXdot3PortConfigTLVsTxEnable;	/* ReadWrite */
	size_t lldpXdot3PortConfigTLVsTxEnableLen;
};
struct lldpXdot3LocPortTable_data {
	struct lldpXdot3LocPortTable_data *lldpXdot3LocPortTable_old;
	uint lldpXdot3LocPortTable_rsvs;
	uint lldpXdot3LocPortTable_tsts;
	uint lldpXdot3LocPortTable_sets;
	uint lldpXdot3LocPortTable_request;
	uint lldpXdot3LocPortTable_refs;
	uint lldpXdot3LocPortTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot3LocPortAutoNegSupported;	/* ReadOnly */
	long lldpXdot3LocPortAutoNegEnabled;	/* ReadOnly */
	uint8_t *lldpXdot3LocPortAutoNegAdvertisedCap;	/* ReadOnly */
	size_t lldpXdot3LocPortAutoNegAdvertisedCapLen;
	long lldpXdot3LocPortOperMauType;	/* ReadOnly */
};
struct lldpXdot3LocPowerTable_data {
	struct lldpXdot3LocPowerTable_data *lldpXdot3LocPowerTable_old;
	uint lldpXdot3LocPowerTable_rsvs;
	uint lldpXdot3LocPowerTable_tsts;
	uint lldpXdot3LocPowerTable_sets;
	uint lldpXdot3LocPowerTable_request;
	uint lldpXdot3LocPowerTable_refs;
	uint lldpXdot3LocPowerTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot3LocPowerPortClass;	/* ReadOnly */
	long lldpXdot3LocPowerMDISupported;	/* ReadOnly */
	long lldpXdot3LocPowerMDIEnabled;	/* ReadOnly */
	long lldpXdot3LocPowerPairControlable;	/* ReadOnly */
	long lldpXdot3LocPowerPairs;	/* ReadOnly */
	long lldpXdot3LocPowerClass;	/* ReadOnly */
};
struct lldpXdot3LocLinkAggTable_data {
	struct lldpXdot3LocLinkAggTable_data *lldpXdot3LocLinkAggTable_old;
	uint lldpXdot3LocLinkAggTable_rsvs;
	uint lldpXdot3LocLinkAggTable_tsts;
	uint lldpXdot3LocLinkAggTable_sets;
	uint lldpXdot3LocLinkAggTable_request;
	uint lldpXdot3LocLinkAggTable_refs;
	uint lldpXdot3LocLinkAggTable_id;
	long lldpLocPortNum;		/* NoAccess */
	uint8_t *lldpXdot3LocLinkAggStatus;	/* ReadOnly */
	size_t lldpXdot3LocLinkAggStatusLen;
	long lldpXdot3LocLinkAggPortId;	/* ReadOnly */
};
struct lldpXdot3LocMaxFrameSizeTable_data {
	struct lldpXdot3LocMaxFrameSizeTable_data *lldpXdot3LocMaxFrameSizeTable_old;
	uint lldpXdot3LocMaxFrameSizeTable_rsvs;
	uint lldpXdot3LocMaxFrameSizeTable_tsts;
	uint lldpXdot3LocMaxFrameSizeTable_sets;
	uint lldpXdot3LocMaxFrameSizeTable_request;
	uint lldpXdot3LocMaxFrameSizeTable_refs;
	uint lldpXdot3LocMaxFrameSizeTable_id;
	long lldpLocPortNum;		/* NoAccess */
	long lldpXdot3LocMaxFrameSize;	/* ReadOnly */
};
struct lldpXdot3RemPortTable_data {
	struct lldpXdot3RemPortTable_data *lldpXdot3RemPortTable_old;
	uint lldpXdot3RemPortTable_rsvs;
	uint lldpXdot3RemPortTable_tsts;
	uint lldpXdot3RemPortTable_sets;
	uint lldpXdot3RemPortTable_request;
	uint lldpXdot3RemPortTable_refs;
	uint lldpXdot3RemPortTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot3RemPortAutoNegSupported;	/* ReadOnly */
	long lldpXdot3RemPortAutoNegEnabled;	/* ReadOnly */
	uint8_t *lldpXdot3RemPortAutoNegAdvertisedCap;	/* ReadOnly */
	size_t lldpXdot3RemPortAutoNegAdvertisedCapLen;
	long lldpXdot3RemPortOperMauType;	/* ReadOnly */
};
struct lldpXdot3RemPowerTable_data {
	struct lldpXdot3RemPowerTable_data *lldpXdot3RemPowerTable_old;
	uint lldpXdot3RemPowerTable_rsvs;
	uint lldpXdot3RemPowerTable_tsts;
	uint lldpXdot3RemPowerTable_sets;
	uint lldpXdot3RemPowerTable_request;
	uint lldpXdot3RemPowerTable_refs;
	uint lldpXdot3RemPowerTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot3RemPowerPortClass;	/* ReadOnly */
	long lldpXdot3RemPowerMDISupported;	/* ReadOnly */
	long lldpXdot3RemPowerMDIEnabled;	/* ReadOnly */
	long lldpXdot3RemPowerPairControlable;	/* ReadOnly */
	long lldpXdot3RemPowerPairs;	/* ReadOnly */
	long lldpXdot3RemPowerClass;	/* ReadOnly */
};
struct lldpXdot3RemLinkAggTable_data {
	struct lldpXdot3RemLinkAggTable_data *lldpXdot3RemLinkAggTable_old;
	uint lldpXdot3RemLinkAggTable_rsvs;
	uint lldpXdot3RemLinkAggTable_tsts;
	uint lldpXdot3RemLinkAggTable_sets;
	uint lldpXdot3RemLinkAggTable_request;
	uint lldpXdot3RemLinkAggTable_refs;
	uint lldpXdot3RemLinkAggTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	uint8_t *lldpXdot3RemLinkAggStatus;	/* ReadOnly */
	size_t lldpXdot3RemLinkAggStatusLen;
	long lldpXdot3RemLinkAggPortId;	/* ReadOnly */
};
struct lldpXdot3RemMaxFrameSizeTable_data {
	struct lldpXdot3RemMaxFrameSizeTable_data *lldpXdot3RemMaxFrameSizeTable_old;
	uint lldpXdot3RemMaxFrameSizeTable_rsvs;
	uint lldpXdot3RemMaxFrameSizeTable_tsts;
	uint lldpXdot3RemMaxFrameSizeTable_sets;
	uint lldpXdot3RemMaxFrameSizeTable_request;
	uint lldpXdot3RemMaxFrameSizeTable_refs;
	uint lldpXdot3RemMaxFrameSizeTable_id;
	long lldpRemTimeMark;		/* NoAccess */
	long lldpRemLocalPortNum;	/* NoAccess */
	long lldpRemIndex;		/* NoAccess */
	long lldpXdot3RemMaxFrameSize;	/* ReadOnly */
};

/* storage declarations */
extern struct lldpXdot3MIB_data *lldpXdot3MIBStorage;
extern struct header_complex_index *lldpXdot3PortConfigTableStorage;
extern struct header_complex_index *lldpXdot3LocPortTableStorage;
extern struct header_complex_index *lldpXdot3LocPowerTableStorage;
extern struct header_complex_index *lldpXdot3LocLinkAggTableStorage;
extern struct header_complex_index *lldpXdot3LocMaxFrameSizeTableStorage;
extern struct header_complex_index *lldpXdot3RemPortTableStorage;
extern struct header_complex_index *lldpXdot3RemPowerTableStorage;
extern struct header_complex_index *lldpXdot3RemLinkAggTableStorage;
extern struct header_complex_index *lldpXdot3RemMaxFrameSizeTableStorage;

/* enum definitions from the covered mib sections */

#define LLDPXDOT3PORTCONFIGTLVSTXENABLE_MACPHYCONFIGSTATUS 0
#define LLDPXDOT3PORTCONFIGTLVSTXENABLE_POWERVIAMDI 1
#define LLDPXDOT3PORTCONFIGTLVSTXENABLE_LINKAGGREGATION 2
#define LLDPXDOT3PORTCONFIGTLVSTXENABLE_MAXFRAMESIZE 3

#define LLDPXDOT3LOCPORTAUTONEGSUPPORTED_TRUE    1
#define LLDPXDOT3LOCPORTAUTONEGSUPPORTED_FALSE   2

#define LLDPXDOT3LOCPORTAUTONEGENABLED_TRUE      1
#define LLDPXDOT3LOCPORTAUTONEGENABLED_FALSE     2

#define LLDPXDOT3LOCPOWERPORTCLASS_PCLASSPSE     1
#define LLDPXDOT3LOCPOWERPORTCLASS_PCLASSPD      2

#define LLDPXDOT3LOCPOWERMDISUPPORTED_TRUE       1
#define LLDPXDOT3LOCPOWERMDISUPPORTED_FALSE      2

#define LLDPXDOT3LOCPOWERMDIENABLED_TRUE         1
#define LLDPXDOT3LOCPOWERMDIENABLED_FALSE        2

#define LLDPXDOT3LOCPOWERPAIRCONTROLABLE_TRUE    1
#define LLDPXDOT3LOCPOWERPAIRCONTROLABLE_FALSE   2

#define LLDPXDOT3LOCLINKAGGSTATUS_AGGCAPABLE     0
#define LLDPXDOT3LOCLINKAGGSTATUS_AGGENABLED     1

#define LLDPXDOT3REMPORTAUTONEGSUPPORTED_TRUE    1
#define LLDPXDOT3REMPORTAUTONEGSUPPORTED_FALSE   2

#define LLDPXDOT3REMPORTAUTONEGENABLED_TRUE      1
#define LLDPXDOT3REMPORTAUTONEGENABLED_FALSE     2

#define LLDPXDOT3REMPOWERPORTCLASS_PCLASSPSE     1
#define LLDPXDOT3REMPOWERPORTCLASS_PCLASSPD      2

#define LLDPXDOT3REMPOWERMDISUPPORTED_TRUE       1
#define LLDPXDOT3REMPOWERMDISUPPORTED_FALSE      2

#define LLDPXDOT3REMPOWERMDIENABLED_TRUE         1
#define LLDPXDOT3REMPOWERMDIENABLED_FALSE        2

#define LLDPXDOT3REMPOWERPAIRCONTROLABLE_TRUE    1
#define LLDPXDOT3REMPOWERPAIRCONTROLABLE_FALSE   2

#define LLDPXDOT3REMLINKAGGSTATUS_AGGCAPABLE     0
#define LLDPXDOT3REMLINKAGGSTATUS_AGGENABLED     1

/* notifications */

/* scalars accessible only for notify */

/* object id definitions */
extern oid lldpXdot3Compliance_oid[12];
extern oid lldpXdot3ConfigGroup_oid[12];
extern oid lldpXdot3LocSysGroup_oid[12];
extern oid lldpXdot3RemSysGroup_oid[12];

/* function prototypes */
/* trap function prototypes */

/* variable function prototypes */
void init_lldpXdot3MIB(void);
void deinit_lldpXdot3MIB(void);
int term_lldpXdot3MIB(int majorID, int minorID, void *serverarg, void *clientarg);
FindVarMethod var_lldpXdot3MIB;
struct lldpXdot3MIB_data *lldpXdot3MIB_create(void);
struct lldpXdot3MIB_data *lldpXdot3MIB_duplicate(struct lldpXdot3MIB_data *);
int lldpXdot3MIB_destroy(struct lldpXdot3MIB_data **);
int lldpXdot3MIB_add(struct lldpXdot3MIB_data *);
void parse_lldpXdot3MIB(const char *, char *);
SNMPCallback store_lldpXdot3MIB;
void refresh_lldpXdot3MIB(int);
FindVarMethod var_lldpXdot3PortConfigTable;
struct lldpXdot3PortConfigTable_data *lldpXdot3PortConfigTable_create(void);
struct lldpXdot3PortConfigTable_data *lldpXdot3PortConfigTable_duplicate(struct lldpXdot3PortConfigTable_data *);
int lldpXdot3PortConfigTable_destroy(struct lldpXdot3PortConfigTable_data **);
int lldpXdot3PortConfigTable_add(struct lldpXdot3PortConfigTable_data *);
int lldpXdot3PortConfigTable_del(struct lldpXdot3PortConfigTable_data *);
void parse_lldpXdot3PortConfigTable(const char *, char *);
SNMPCallback store_lldpXdot3PortConfigTable;
void refresh_lldpXdot3PortConfigTable(int);
FindVarMethod var_lldpXdot3LocPortTable;
struct lldpXdot3LocPortTable_data *lldpXdot3LocPortTable_create(void);
struct lldpXdot3LocPortTable_data *lldpXdot3LocPortTable_duplicate(struct lldpXdot3LocPortTable_data *);
int lldpXdot3LocPortTable_destroy(struct lldpXdot3LocPortTable_data **);
int lldpXdot3LocPortTable_add(struct lldpXdot3LocPortTable_data *);
int lldpXdot3LocPortTable_del(struct lldpXdot3LocPortTable_data *);
void parse_lldpXdot3LocPortTable(const char *, char *);
SNMPCallback store_lldpXdot3LocPortTable;
void refresh_lldpXdot3LocPortTable(int);
FindVarMethod var_lldpXdot3LocPowerTable;
struct lldpXdot3LocPowerTable_data *lldpXdot3LocPowerTable_create(void);
struct lldpXdot3LocPowerTable_data *lldpXdot3LocPowerTable_duplicate(struct lldpXdot3LocPowerTable_data *);
int lldpXdot3LocPowerTable_destroy(struct lldpXdot3LocPowerTable_data **);
int lldpXdot3LocPowerTable_add(struct lldpXdot3LocPowerTable_data *);
int lldpXdot3LocPowerTable_del(struct lldpXdot3LocPowerTable_data *);
void parse_lldpXdot3LocPowerTable(const char *, char *);
SNMPCallback store_lldpXdot3LocPowerTable;
void refresh_lldpXdot3LocPowerTable(int);
FindVarMethod var_lldpXdot3LocLinkAggTable;
struct lldpXdot3LocLinkAggTable_data *lldpXdot3LocLinkAggTable_create(void);
struct lldpXdot3LocLinkAggTable_data *lldpXdot3LocLinkAggTable_duplicate(struct lldpXdot3LocLinkAggTable_data *);
int lldpXdot3LocLinkAggTable_destroy(struct lldpXdot3LocLinkAggTable_data **);
int lldpXdot3LocLinkAggTable_add(struct lldpXdot3LocLinkAggTable_data *);
int lldpXdot3LocLinkAggTable_del(struct lldpXdot3LocLinkAggTable_data *);
void parse_lldpXdot3LocLinkAggTable(const char *, char *);
SNMPCallback store_lldpXdot3LocLinkAggTable;
void refresh_lldpXdot3LocLinkAggTable(int);
FindVarMethod var_lldpXdot3LocMaxFrameSizeTable;
struct lldpXdot3LocMaxFrameSizeTable_data *lldpXdot3LocMaxFrameSizeTable_create(void);
struct lldpXdot3LocMaxFrameSizeTable_data *lldpXdot3LocMaxFrameSizeTable_duplicate(struct lldpXdot3LocMaxFrameSizeTable_data *);
int lldpXdot3LocMaxFrameSizeTable_destroy(struct lldpXdot3LocMaxFrameSizeTable_data **);
int lldpXdot3LocMaxFrameSizeTable_add(struct lldpXdot3LocMaxFrameSizeTable_data *);
int lldpXdot3LocMaxFrameSizeTable_del(struct lldpXdot3LocMaxFrameSizeTable_data *);
void parse_lldpXdot3LocMaxFrameSizeTable(const char *, char *);
SNMPCallback store_lldpXdot3LocMaxFrameSizeTable;
void refresh_lldpXdot3LocMaxFrameSizeTable(int);
FindVarMethod var_lldpXdot3RemPortTable;
struct lldpXdot3RemPortTable_data *lldpXdot3RemPortTable_create(void);
struct lldpXdot3RemPortTable_data *lldpXdot3RemPortTable_duplicate(struct lldpXdot3RemPortTable_data *);
int lldpXdot3RemPortTable_destroy(struct lldpXdot3RemPortTable_data **);
int lldpXdot3RemPortTable_add(struct lldpXdot3RemPortTable_data *);
int lldpXdot3RemPortTable_del(struct lldpXdot3RemPortTable_data *);
void parse_lldpXdot3RemPortTable(const char *, char *);
SNMPCallback store_lldpXdot3RemPortTable;
void refresh_lldpXdot3RemPortTable(int);
FindVarMethod var_lldpXdot3RemPowerTable;
struct lldpXdot3RemPowerTable_data *lldpXdot3RemPowerTable_create(void);
struct lldpXdot3RemPowerTable_data *lldpXdot3RemPowerTable_duplicate(struct lldpXdot3RemPowerTable_data *);
int lldpXdot3RemPowerTable_destroy(struct lldpXdot3RemPowerTable_data **);
int lldpXdot3RemPowerTable_add(struct lldpXdot3RemPowerTable_data *);
int lldpXdot3RemPowerTable_del(struct lldpXdot3RemPowerTable_data *);
void parse_lldpXdot3RemPowerTable(const char *, char *);
SNMPCallback store_lldpXdot3RemPowerTable;
void refresh_lldpXdot3RemPowerTable(int);
FindVarMethod var_lldpXdot3RemLinkAggTable;
struct lldpXdot3RemLinkAggTable_data *lldpXdot3RemLinkAggTable_create(void);
struct lldpXdot3RemLinkAggTable_data *lldpXdot3RemLinkAggTable_duplicate(struct lldpXdot3RemLinkAggTable_data *);
int lldpXdot3RemLinkAggTable_destroy(struct lldpXdot3RemLinkAggTable_data **);
int lldpXdot3RemLinkAggTable_add(struct lldpXdot3RemLinkAggTable_data *);
int lldpXdot3RemLinkAggTable_del(struct lldpXdot3RemLinkAggTable_data *);
void parse_lldpXdot3RemLinkAggTable(const char *, char *);
SNMPCallback store_lldpXdot3RemLinkAggTable;
void refresh_lldpXdot3RemLinkAggTable(int);
FindVarMethod var_lldpXdot3RemMaxFrameSizeTable;
struct lldpXdot3RemMaxFrameSizeTable_data *lldpXdot3RemMaxFrameSizeTable_create(void);
struct lldpXdot3RemMaxFrameSizeTable_data *lldpXdot3RemMaxFrameSizeTable_duplicate(struct lldpXdot3RemMaxFrameSizeTable_data *);
int lldpXdot3RemMaxFrameSizeTable_destroy(struct lldpXdot3RemMaxFrameSizeTable_data **);
int lldpXdot3RemMaxFrameSizeTable_add(struct lldpXdot3RemMaxFrameSizeTable_data *);
int lldpXdot3RemMaxFrameSizeTable_del(struct lldpXdot3RemMaxFrameSizeTable_data *);
void parse_lldpXdot3RemMaxFrameSizeTable(const char *, char *);
SNMPCallback store_lldpXdot3RemMaxFrameSizeTable;
void refresh_lldpXdot3RemMaxFrameSizeTable(int);

WriteMethod write_lldpXdot3PortConfigTLVsTxEnable;
#endif				/* __LOCAL_LLDPXDOT3MIB_H__ */
